{"version":3,"file":"list.min.js","sources":["../../../apps/frappe/frappe/public/js/frappe/model/indicator.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter_list.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/field_select.js","../../../apps/frappe/frappe/public/js/frappe/ui/tags.js","../../../apps/frappe/frappe/public/js/frappe/ui/tag_editor.js","../../../apps/frappe/frappe/public/js/frappe/ui/like.js","../../../apps/frappe/frappe/public/js/frappe/list/base_list.js","../../../apps/frappe/frappe/public/js/frappe/list/bulk_operations.js","../../../apps/frappe/frappe/public/js/frappe/list/list_settings.js","../../../apps/frappe/frappe/public/js/frappe/list/list_view.js","../../../apps/frappe/frappe/public/js/frappe/list/list_factory.js","../../../apps/frappe/frappe/public/js/frappe/list/list_view_select.js","../../../apps/frappe/frappe/public/js/frappe/list/list_filter.js","../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar.js","../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar_group_by.js","../../../apps/frappe/frappe/public/js/frappe/views/gantt/gantt_view.js","../../../apps/frappe/frappe/public/js/frappe/views/calendar/calendar.js","../../../apps/frappe/frappe/public/js/frappe/views/dashboard/dashboard_view.js","../../../apps/frappe/frappe/public/js/frappe/views/image/image_view.js","../../../apps/frappe/frappe/public/js/frappe/views/map/map_view.js","../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_settings.js","../../../apps/frappe/frappe/public/js/frappe/views/file/file_view.js","../../../apps/frappe/frappe/public/js/frappe/views/interaction.js","../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_view.js","../../../apps/frappe/frappe/public/js/frappe/views/inbox/inbox_view.js","../../../apps/frappe/frappe/public/js/frappe/views/treeview.js"],"sourcesContent":["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n\nfrappe.has_indicator = function(doctype) {\n\t// returns true if indicator is present\n\tif(frappe.model.is_submittable(doctype)) {\n\t\treturn true;\n\t} else if((frappe.listview_settings[doctype] || {}).get_indicator\n\t\t|| frappe.workflow.get_state_fieldname(doctype)) {\n\t\treturn true;\n\t} else if(frappe.meta.has_field(doctype, 'enabled')\n\t\t|| frappe.meta.has_field(doctype, 'disabled')) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfrappe.get_indicator = function(doc, doctype) {\n\tif(doc.__unsaved) {\n\t\treturn [__(\"Not Saved\"), \"orange\"];\n\t}\n\n\tif(!doctype) doctype = doc.doctype;\n\n\tvar workflow = frappe.workflow.workflows[doctype];\n\tvar without_workflow = workflow ? workflow['override_status'] : true;\n\n\tvar settings = frappe.listview_settings[doctype] || {};\n\n\tvar is_submittable = frappe.model.is_submittable(doctype),\n\t\tworkflow_fieldname = frappe.workflow.get_state_fieldname(doctype);\n\n\t// workflow\n\tif(workflow_fieldname && !without_workflow) {\n\t\tvar value = doc[workflow_fieldname];\n\t\tif(value) {\n\t\t\tvar colour = \"\";\n\n\t\t\tif(locals[\"Workflow State\"][value] && locals[\"Workflow State\"][value].style) {\n\t\t\t\tvar colour = {\n\t\t\t\t\t\"Success\": \"green\",\n\t\t\t\t\t\"Warning\": \"orange\",\n\t\t\t\t\t\"Danger\": \"red\",\n\t\t\t\t\t\"Primary\": \"blue\",\n\t\t\t\t\t\"Inverse\": \"black\",\n\t\t\t\t\t\"Info\": \"light-blue\",\n\t\t\t\t}[locals[\"Workflow State\"][value].style];\n\t\t\t}\n\t\t\tif (!colour) colour = \"gray\";\n\n\t\t\treturn [__(value), colour, workflow_fieldname + ',=,' + value];\n\t\t}\n\t}\n\n\t// draft if document is submittable\n\tif(is_submittable && doc.docstatus==0 && !settings.has_indicator_for_draft) {\n\t\treturn [__(\"Draft\"), \"red\", \"docstatus,=,0\"];\n\t}\n\n\t// cancelled\n\tif(is_submittable && doc.docstatus==2 && !settings.has_indicator_for_cancelled) {\n\t\treturn [__(\"Cancelled\"), \"red\", \"docstatus,=,2\"];\n\t}\n\n\tif(settings.get_indicator) {\n\t\tvar indicator = settings.get_indicator(doc);\n\t\tif(indicator) return indicator;\n\t}\n\n\t// if submittable\n\tif(is_submittable && doc.docstatus==1) {\n\t\treturn [__(\"Submitted\"), \"blue\", \"docstatus,=,1\"];\n\t}\n\n\t// based on status\n\tif(doc.status) {\n\t\treturn [__(doc.status), frappe.utils.guess_colour(doc.status)];\n\t}\n\n\t// based on enabled\n\tif(frappe.meta.has_field(doctype, 'enabled')) {\n\t\tif(doc.enabled) {\n\t\t\treturn [__('Enabled'), 'blue', 'enabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Disabled'), 'grey', 'enabled,=,0'];\n\t\t}\n\t}\n\n\t// based on disabled\n\tif(frappe.meta.has_field(doctype, 'disabled')) {\n\t\tif(doc.disabled) {\n\t\t\treturn [__('Disabled'), 'grey', 'disabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Enabled'), 'blue', 'disabled,=,0'];\n\t\t}\n\t}\n}\n","frappe.ui.Filter = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tif (this.value === null || this.value === undefined) {\n\t\t\tthis.value = '';\n\t\t}\n\n\t\tthis.utils = frappe.ui.filter_utils;\n\t\tthis.set_conditions();\n\t\tthis.set_conditions_from_config();\n\t\tthis.make();\n\t}\n\n\tset_conditions() {\n\t\tthis.conditions = [\n\t\t\t['=', __('Equals')],\n\t\t\t['!=', __('Not Equals')],\n\t\t\t['like', __('Like')],\n\t\t\t['not like', __('Not Like')],\n\t\t\t['in', __('In')],\n\t\t\t['not in', __('Not In')],\n\t\t\t['is', __('Is')],\n\t\t\t['>', '>'],\n\t\t\t['<', '<'],\n\t\t\t['>=', '>='],\n\t\t\t['<=', '<='],\n\t\t\t['Between', __('Between')],\n\t\t\t['Timespan', __('Timespan')],\n\t\t];\n\n\t\tthis.nested_set_conditions = [\n\t\t\t['descendants of', __('Descendants Of')],\n\t\t\t['not descendants of', __('Not Descendants Of')],\n\t\t\t['ancestors of', __('Ancestors Of')],\n\t\t\t['not ancestors of', __('Not Ancestors Of')],\n\t\t];\n\n\t\tthis.conditions.push(...this.nested_set_conditions);\n\n\t\tthis.invalid_condition_map = {\n\t\t\tDate: ['like', 'not like'],\n\t\t\tDatetime: ['like', 'not like', 'in', 'not in', '=', '!='],\n\t\t\tData: ['Between', 'Timespan'],\n\t\t\tSelect: ['like', 'not like', 'Between', 'Timespan'],\n\t\t\tLink: ['Between', 'Timespan', '>', '<', '>=', '<='],\n\t\t\tCurrency: ['Between', 'Timespan'],\n\t\t\tColor: ['Between', 'Timespan'],\n\t\t\tCheck: this.conditions.map((c) => c[0]).filter((c) => c !== '='),\n\t\t\tCode: ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\t'HTML Editor': ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\t'Markdown Editor': ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\tPassword: ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\tRating: ['like', 'not like', 'Between', 'in', 'not in', 'Timespan'],\n\t\t};\n\t}\n\n\tset_conditions_from_config() {\n\t\tif (frappe.boot.additional_filters_config) {\n\t\t\tthis.filters_config = frappe.boot.additional_filters_config;\n\t\t\tfor (let key of Object.keys(this.filters_config)) {\n\t\t\t\tconst filter = this.filters_config[key];\n\t\t\t\tthis.conditions.push([key, __(filter.label)]);\n\t\t\t\tfor (let fieldtype of Object.keys(this.invalid_condition_map)) {\n\t\t\t\t\tif (!filter.valid_for_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\t\tthis.invalid_condition_map[fieldtype].push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmake() {\n\t\tthis.filter_edit_area = $(\n\t\t\tfrappe.render_template('edit_filter', {\n\t\t\t\tconditions: this.conditions,\n\t\t\t})\n\t\t);\n\t\tthis.parent && this.filter_edit_area.appendTo(this.parent.find('.filter-edit-area'));\n\t\tthis.make_select();\n\t\tthis.set_events();\n\t\tthis.setup();\n\t}\n\n\tmake_select() {\n\t\tthis.fieldselect = new frappe.ui.FieldSelect({\n\t\t\tparent: this.filter_edit_area.find('.fieldname-select-area'),\n\t\t\tdoctype: this.parent_doctype,\n\t\t\tparent_doctype: this._parent_doctype,\n\t\t\tfilter_fields: this.filter_fields,\n\t\t\tinput_class: 'input-xs',\n\t\t\tselect: (doctype, fieldname) => {\n\t\t\t\tthis.set_field(doctype, fieldname);\n\t\t\t},\n\t\t});\n\n\t\tif (this.fieldname) {\n\t\t\tthis.fieldselect.set_value(this.doctype, this.fieldname);\n\t\t}\n\t}\n\n\tset_events() {\n\t\tthis.filter_edit_area.find('span.remove-filter').on('click', () => {\n\t\t\tthis.remove();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.filter_edit_area.find('.condition').change(() => {\n\t\t\tif (!this.field) return;\n\n\t\t\tlet condition = this.get_condition();\n\t\t\tlet fieldtype = null;\n\n\t\t\tif (['in', 'like', 'not in', 'not like'].includes(condition)) {\n\t\t\t\tfieldtype = 'Data';\n\t\t\t\tthis.add_condition_help(condition);\n\t\t\t} else {\n\t\t\t\tthis.filter_edit_area.find('.filter-description').empty();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t['Select', 'MultiSelect'].includes(this.field.df.fieldtype) &&\n\t\t\t\t['in', 'not in'].includes(condition)\n\t\t\t) {\n\t\t\t\tfieldtype = 'MultiSelect';\n\t\t\t}\n\n\t\t\tthis.set_field(\n\t\t\t\tthis.field.df.parent,\n\t\t\t\tthis.field.df.fieldname,\n\t\t\t\tfieldtype,\n\t\t\t\tcondition\n\t\t\t);\n\t\t});\n\t}\n\n\tsetup() {\n\t\tconst fieldname = this.fieldname || 'name';\n\t\t// set the field\n\t\treturn this.set_values(this.doctype, fieldname, this.condition, this.value);\n\t}\n\n\tsetup_state(is_new) {\n\t\tlet promise = Promise.resolve();\n\t\tif (is_new) {\n\t\t\tthis.filter_edit_area.addClass('new-filter');\n\t\t} else {\n\t\t\tpromise = this.update_filter_tag();\n\t\t}\n\n\t\tif (this.hidden) {\n\t\t\tpromise.then(() => this.$filter_tag.hide());\n\t\t}\n\t}\n\n\tfreeze() {\n\t\tthis.update_filter_tag();\n\t}\n\n\tupdate_filter_tag() {\n\t\tif (this._filter_value_set) {\n\t\t\treturn this._filter_value_set.then(() => {\n\t\t\t\t!this.$filter_tag ? this.make_tag() : this.set_filter_button_text();\n\t\t\t\tthis.filter_edit_area.hide();\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.filter_edit_area.remove();\n\t\tthis.field = null;\n\t\t// this.on_change(true);\n\t}\n\n\tset_values(doctype, fieldname, condition, value) {\n\t\t// presents given (could be via tags!)\n\t\tif (this.set_field(doctype, fieldname) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.field.df.original_type === 'Check') {\n\t\t\tvalue = value == 1 ? 'Yes' : 'No';\n\t\t}\n\t\tif (condition) this.set_condition(condition, true);\n\n\t\t// set value can be asynchronous, so update_filter_tag should happen after field is set\n\t\tthis._filter_value_set = Promise.resolve();\n\n\t\tif (['in', 'not in'].includes(condition) && Array.isArray(value)) {\n\t\t\tvalue = value.join(',');\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tthis._filter_value_set = this.field.set_value(value);\n\t\t} else if (value !== undefined || value !== null) {\n\t\t\tthis._filter_value_set = this.field.set_value((value + '').trim());\n\t\t}\n\t\treturn this._filter_value_set;\n\t}\n\n\tset_field(doctype, fieldname, fieldtype, condition) {\n\t\t// set in fieldname (again)\n\t\tlet cur = {};\n\t\tif (this.field) for (let k in this.field.df) cur[k] = this.field.df[k];\n\n\t\tlet original_docfield = (this.fieldselect.fields_by_name[doctype] || {})[\n\t\t\tfieldname\n\t\t];\n\n\t\tif (!original_docfield) {\n\t\t\tconsole.warn(`Field ${fieldname} is not selectable.`);\n\t\t\tthis.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tlet df = copy_dict(original_docfield);\n\n\t\t// filter field shouldn't be read only or hidden\n\t\tdf.read_only = 0;\n\t\tdf.hidden = 0;\n\t\tdf.is_filter = true;\n\t\tdelete df.hidden_due_to_dependency;\n\n\t\tlet c = condition ? condition : this.utils.get_default_condition(df);\n\t\tthis.set_condition(c);\n\n\t\tthis.utils.set_fieldtype(df, fieldtype, this.get_condition());\n\n\t\t// called when condition is changed,\n\t\t// don't change if all is well\n\t\tif (\n\t\t\tthis.field &&\n\t\t\tcur.fieldname == fieldname &&\n\t\t\tdf.fieldtype == cur.fieldtype &&\n\t\t\tdf.parent == cur.parent &&\n\t\t\tdf.options == cur.options\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clear field area and make field\n\t\tthis.fieldselect.selected_doctype = doctype;\n\t\tthis.fieldselect.selected_fieldname = fieldname;\n\n\t\tif (\n\t\t\tthis.filters_config &&\n\t\t\tthis.filters_config[condition] &&\n\t\t\tthis.filters_config[condition].valid_for_fieldtypes.includes(df.fieldtype)\n\t\t) {\n\t\t\tlet args = {};\n\t\t\tif (this.filters_config[condition].depends_on) {\n\t\t\t\tconst field_name = this.filters_config[condition].depends_on;\n\t\t\t\tconst filter_value = this.filter_list.get_filter_value(fieldname);\n\t\t\t\targs[field_name] = filter_value;\n\t\t\t}\n\t\t\tfrappe\n\t\t\t\t.xcall(this.filters_config[condition].get_field, args)\n\t\t\t\t.then(field => {\n\t\t\t\t\tdf.fieldtype = field.fieldtype;\n\t\t\t\t\tdf.options = field.options;\n\t\t\t\t\tdf.fieldname = fieldname;\n\t\t\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t}\n\t}\n\n\tmake_field(df, old_fieldtype) {\n\t\tlet old_text = this.field ? this.field.get_value() : null;\n\t\tthis.hide_invalid_conditions(df.fieldtype, df.original_type);\n\t\tthis.toggle_nested_set_conditions(df);\n\t\tlet field_area = this.filter_edit_area\n\t\t\t.find('.filter-field')\n\t\t\t.empty()\n\t\t\t.get(0);\n\t\tdf.input_class = 'input-xs';\n\t\tlet f = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: field_area,\n\t\t\tonly_input: true,\n\t\t});\n\t\tf.refresh();\n\n\t\tthis.field = f;\n\t\tif (old_text && f.fieldtype === old_fieldtype) {\n\t\t\tthis.field.set_value(old_text);\n\t\t}\n\n\t\tthis.bind_filter_field_events();\n\t}\n\n\tbind_filter_field_events() {\n\t\t// Apply filter on input focus out\n\t\tthis.field.$input.on('focusout', () => this.on_change());\n\n\t\t// run on enter\n\t\t$(this.field.wrapper)\n\t\t\t.find(':input')\n\t\t\t.keydown(e => {\n\t\t\t\tif (e.which == 13 && this.field.df.fieldtype !== 'MultiSelect') {\n\t\t\t\t\tthis.on_change();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget_value() {\n\t\treturn [\n\t\t\tthis.fieldselect.selected_doctype,\n\t\t\tthis.field.df.fieldname,\n\t\t\tthis.get_condition(),\n\t\t\tthis.get_selected_value(),\n\t\t\tthis.hidden,\n\t\t];\n\t}\n\n\tget_selected_value() {\n\t\treturn this.utils.get_selected_value(this.field, this.get_condition());\n\t}\n\n\tget_condition() {\n\t\treturn this.filter_edit_area.find('.condition').val();\n\t}\n\n\tset_condition(condition, trigger_change = false) {\n\t\tlet $condition_field = this.filter_edit_area.find('.condition');\n\t\t$condition_field.val(condition);\n\t\tif (trigger_change) $condition_field.change();\n\t}\n\n\tadd_condition_help(condition) {\n\t\tconst description = ['in', 'not in'].includes(condition)\n\t\t\t? __('values separated by commas')\n\t\t\t: __('use % as wildcard');\n\n\t\tthis.filter_edit_area.find('.filter-description').html(description);\n\t}\n\n\tmake_tag() {\n\t\tif (!this.field) return;\n\t\tthis.$filter_tag = this.get_filter_tag_element().insertAfter(\n\t\t\tthis.parent.find('.active-tag-filters .clear-filters')\n\t\t);\n\t\tthis.set_filter_button_text();\n\t\tthis.bind_tag();\n\t}\n\n\tbind_tag() {\n\t\tthis.$filter_tag.find('.remove-filter').on('click', this.remove.bind(this));\n\n\t\tlet filter_button = this.$filter_tag.find('.toggle-filter');\n\t\tfilter_button.on('click', () => {\n\t\t\tfilter_button\n\t\t\t\t.closest('.tag-filters-area')\n\t\t\t\t.find('.filter-edit-area')\n\t\t\t\t.show();\n\t\t\tthis.filter_edit_area.toggle();\n\t\t});\n\t}\n\n\tset_filter_button_text() {\n\t\tthis.$filter_tag.find('.toggle-filter').html(this.get_filter_button_text());\n\t}\n\n\tget_filter_button_text() {\n\t\tlet value = this.utils.get_formatted_value(\n\t\t\tthis.field,\n\t\t\tthis.get_selected_value()\n\t\t);\n\t\treturn `${__(this.field.df.label)} ${__(this.get_condition())} ${__(\n\t\t\tvalue\n\t\t)}`;\n\t}\n\n\tget_filter_tag_element() {\n\t\treturn $(`<div class=\"filter-tag btn-group\">\n\t\t\t<button class=\"btn btn-default btn-xs toggle-filter\"\n\t\t\t\ttitle=\"${__('Edit Filter')}\">\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-default btn-xs remove-filter\"\n\t\t\t\ttitle=\"${__('Remove Filter')}\">\n\t\t\t\t${frappe.utils.icon('close')}\n\t\t\t</button>\n\t\t</div>`);\n\t}\n\n\thide_invalid_conditions(fieldtype, original_type) {\n\t\tlet invalid_conditions =\n\t\t\tthis.invalid_condition_map[original_type] ||\n\t\t\tthis.invalid_condition_map[fieldtype] ||\n\t\t\t[];\n\n\t\tfor (let condition of this.conditions) {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(!invalid_conditions.includes(condition[0]));\n\t\t}\n\t}\n\n\ttoggle_nested_set_conditions(df) {\n\t\tlet show_condition =\n\t\t\tdf.fieldtype === 'Link' &&\n\t\t\tfrappe.boot.nested_set_doctypes.includes(df.options);\n\t\tthis.nested_set_conditions.forEach((condition) => {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(show_condition);\n\t\t});\n\t}\n};\n\nfrappe.ui.filter_utils = {\n\tget_formatted_value(field, value) {\n\t\tif (field.df.fieldname === 'docstatus') {\n\t\t\tvalue = { 0: 'Draft', 1: 'Submitted', 2: 'Cancelled' }[value] || value;\n\t\t} else if (field.df.original_type === 'Check') {\n\t\t\tvalue = { 0: 'No', 1: 'Yes' }[cint(value)];\n\t\t}\n\t\treturn frappe.format(value, field.df, { only_value: 1 });\n\t},\n\n\tget_selected_value(field, condition) {\n\t\tif (!field) return;\n\n\t\tlet val = field.get_value();\n\n\t\tif (typeof val === 'string') {\n\t\t\tval = strip(val);\n\t\t}\n\n\t\tif (condition == 'is' && !val) {\n\t\t\tval = field.df.options[0].value;\n\t\t}\n\n\t\tif (field.df.original_type == 'Check') {\n\t\t\tval = val == 'Yes' ? 1 : 0;\n\t\t}\n\n\t\tif (condition.indexOf('like', 'not like') !== -1) {\n\t\t\t// automatically append wildcards\n\t\t\tif (val && !(val.startsWith('%') || val.endsWith('%'))) {\n\t\t\t\tval = '%' + val + '%';\n\t\t\t}\n\t\t} else if (in_list(['in', 'not in'], condition)) {\n\t\t\tif (val) {\n\t\t\t\tval = val.split(',').map((v) => strip(v));\n\t\t\t}\n\t\t}\n\t\tif (val === '%') {\n\t\t\tval = '';\n\t\t}\n\n\t\treturn val;\n\t},\n\n\tget_default_condition(df) {\n\t\tif (df.fieldtype == 'Data') {\n\t\t\treturn 'like';\n\t\t} else if (df.fieldtype == 'Date' || df.fieldtype == 'Datetime') {\n\t\t\treturn 'Between';\n\t\t} else {\n\t\t\treturn '=';\n\t\t}\n\t},\n\n\tset_fieldtype(df, fieldtype, condition) {\n\t\t// reset\n\t\tif (df.original_type) df.fieldtype = df.original_type;\n\t\telse df.original_type = df.fieldtype;\n\n\t\tdf.description = '';\n\t\tdf.reqd = 0;\n\t\tdf.ignore_link_validation = true;\n\n\t\t// given\n\t\tif (fieldtype) {\n\t\t\tdf.fieldtype = fieldtype;\n\t\t\treturn;\n\t\t}\n\n\t\t// scrub\n\t\tif (df.fieldname == 'docstatus') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ value: 0, label: __('Draft') },\n\t\t\t\t{ value: 1, label: __('Submitted') },\n\t\t\t\t{ value: 2, label: __('Cancelled') },\n\t\t\t];\n\t\t} else if (df.fieldtype == 'Check') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ label: __('Yes', null, 'Checkbox is checked'), value: 'Yes' },\n\t\t\t\t{ label: __('No', null, 'Checkbox is not checked'), value: 'No' },\n\t\t\t];\n\t\t} else if (\n\t\t\t[\n\t\t\t\t'Text',\n\t\t\t\t'Small Text',\n\t\t\t\t'Text Editor',\n\t\t\t\t'Code',\n\t\t\t\t'Attach',\n\t\t\t\t'Attach Image',\n\t\t\t\t'Markdown Editor',\n\t\t\t\t'HTML Editor',\n\t\t\t\t'Tag',\n\t\t\t\t'Comments',\n\t\t\t\t'Barcode',\n\t\t\t\t'Dynamic Link',\n\t\t\t\t'Read Only',\n\t\t\t\t'Assign',\n\t\t\t\t'Color',\n\t\t\t].indexOf(df.fieldtype) != -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t} else if (\n\t\t\tdf.fieldtype == 'Link' &&\n\t\t\t[\n\t\t\t\t'=',\n\t\t\t\t'!=',\n\t\t\t\t'descendants of',\n\t\t\t\t'ancestors of',\n\t\t\t\t'not descendants of',\n\t\t\t\t'not ancestors of',\n\t\t\t].indexOf(condition) == -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t}\n\t\tif (\n\t\t\tdf.fieldtype === 'Data' &&\n\t\t\t(df.options || '').toLowerCase() === 'email'\n\t\t) {\n\t\t\tdf.options = null;\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Between' &&\n\t\t\t(df.fieldtype == 'Date' || df.fieldtype == 'Datetime')\n\t\t) {\n\t\t\tdf.fieldtype = 'DateRange';\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Timespan' &&\n\t\t\t['Date', 'Datetime', 'DateRange', 'Select'].includes(df.fieldtype)\n\t\t) {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = this.get_timespan_options(['Last', 'Yesterday', 'Today', 'Tomorrow', 'This', 'Next']);\n\t\t}\n\t\tif (condition === 'is') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ label: __('Set', null, 'Field value is set'), value: 'set' },\n\t\t\t\t{ label: __('Not Set', null, 'Field value is not set'), value: 'not set' },\n\t\t\t];\n\t\t}\n\t\treturn;\n\t},\n\n\tget_timespan_options(periods) {\n\t\tconst period_map = {\n\t\t\tLast: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t\tThis: ['Week', 'Month', 'Quarter', 'Year'],\n\t\t\tNext: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t};\n\t\tlet options = [];\n\t\tperiods.forEach((period) => {\n\t\t\tif (period_map[period]) {\n\t\t\t\tperiod_map[period].forEach((p) => {\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\tlabel: `${period} ${p}`,\n\t\t\t\t\t\tvalue: `${period.toLowerCase()} ${p.toLowerCase()}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: __(period),\n\t\t\t\t\tvalue: `${period.toLowerCase()}`,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t},\n};\n","frappe.ui.FilterGroup = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.filters = [];\n\t\twindow.fltr = this;\n\t\tif (!this.filter_button) {\n\t\t\tthis.wrapper = this.parent;\n\t\t\tthis.wrapper.append(this.get_filter_area_template());\n\t\t\tthis.set_filter_events();\n\t\t} else {\n\t\t\tthis.make_popover();\n\t\t}\n\t}\n\n\tmake_popover() {\n\t\tthis.init_filter_popover();\n\t\tthis.set_popover_events();\n\t}\n\n\tinit_filter_popover() {\n\t\tthis.filter_button.popover({\n\t\t\tcontent: this.get_filter_area_template(),\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"filter-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: 'manual',\n\t\t\tcontainer: 'body',\n\t\t\tplacement: 'bottom',\n\t\t\toffset: '-100px, 0'\n\t\t});\n\t}\n\n\ttoggle_empty_filters(show) {\n\t\tthis.wrapper &&\n\t\t\tthis.wrapper.find('.empty-filters').toggle(show);\n\t}\n\n\tset_popover_events() {\n\t\t$(document.body).on('click', (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tconst in_datepicker = $(e.target).is('.datepicker--cell')\n\t\t\t\t\t|| $(e.target).closest('.datepicker--nav-title').length !== 0\n\t\t\t\t\t|| $(e.target).parents('.datepicker--nav-action').length !== 0;\n\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents('.filter-popover').length === 0\n\t\t\t\t\t&& $(e.target).parents('.filter-box').length === 0\n\t\t\t\t\t&& this.filter_button.find($(e.target)).length === 0\n\t\t\t\t\t&& !$(e.target).is(this.filter_button)\n\t\t\t\t\t&& !in_datepicker\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.filter_button.popover('hide');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.filter_button.on('click', () => {\n\t\t\tthis.filter_button.popover('toggle');\n\t\t});\n\n\t\tthis.filter_button.on('shown.bs.popover', () => {\n\t\t\tlet hide_empty_filters = this.filters && this.filters.length > 0;\n\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $('.filter-popover');\n\t\t\t\tif (hide_empty_filters) {\n\t\t\t\t\tthis.toggle_empty_filters(false);\n\t\t\t\t\tthis.add_filters_to_popover(this.filters);\n\t\t\t\t}\n\t\t\t\tthis.set_filter_events();\n\t\t\t}\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\t!hide_empty_filters && this.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.filter_button.on('hidden.bs.popover', () => {\n\t\t\tthis.apply();\n\t\t});\n\n\t\t// REDESIGN-TODO: (Temporary) Review and find best solution for this\n\t\tfrappe.router.on('change', () => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tthis.filter_button.popover('hide');\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_filters_to_popover(filters) {\n\t\tfilters.forEach(filter => {\n\t\t\tfilter.parent = this.wrapper;\n\t\t\tfilter.field = null;\n\t\t\tfilter.make();\n\t\t});\n\t}\n\n\tapply() {\n\t\tthis.update_filters();\n\t\tthis.on_change();\n\t}\n\n\tupdate_filter_button() {\n\t\tconst filters_applied = this.filters.length > 0;\n\t\tconst button_label = filters_applied\n\t\t\t? this.filters.length > 1\n\t\t\t\t? __(\"{0} filters\", [this.filters.length])\n\t\t\t\t: __(\"{0} filter\", [this.filters.length])\n\t\t\t: __('Filter');\n\n\n\t\tthis.filter_button\n\t\t\t.toggleClass('btn-default', !filters_applied)\n\t\t\t.toggleClass('btn-primary-light', filters_applied);\n\n\t\tthis.filter_button.find('.filter-icon')\n\t\t\t.toggleClass('active', filters_applied);\n\n\t\tthis.filter_button.find('.button-label').html(button_label);\n\t}\n\n\tset_filter_events() {\n\t\tthis.wrapper.find('.add-filter').on('click', () => {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tthis.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.wrapper.find('.clear-filters').on('click', () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tthis.clear_filters();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.wrapper.find('.apply-filters').on('click', () => {\n\t\t\tthis.filter_button.popover('hide');\n\t\t});\n\t}\n\n\tadd_filters(filters) {\n\t\tlet promises = [];\n\n\t\tfor (const filter of filters) {\n\t\t\tpromises.push(() => this.add_filter(...filter));\n\t\t}\n\n\t\treturn frappe.run_serially(promises).then(() => this.update_filters());\n\t}\n\n\tadd_filter(doctype, fieldname, condition, value, hidden) {\n\t\tif (!fieldname) return Promise.resolve();\n\t\t// adds a new filter, returns true if filter has been added\n\n\t\t// {}: Add in page filter by fieldname if exists ('=' => 'like')\n\n\t\tif (!this.validate_args(doctype, fieldname)) return false;\n\t\tconst is_new_filter = arguments.length < 2;\n\t\tif (is_new_filter && this.wrapper.find('.new-filter:visible').length) {\n\t\t\t// only allow 1 new filter at a time!\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tlet args = [doctype, fieldname, condition, value, hidden];\n\t\t\tconst promise = this.push_new_filter(args, is_new_filter);\n\t\t\treturn (promise && promise.then) ? promise : Promise.resolve();\n\t\t}\n\t}\n\n\tvalidate_args(doctype, fieldname) {\n\t\tif (doctype && fieldname\n\t\t\t&& !frappe.meta.has_field(doctype, fieldname)\n\t\t\t&& !frappe.model.std_fields_list.includes(fieldname)) {\n\n\t\t\tfrappe.msgprint({\n\t\t\t\tmessage: __('Invalid filter: {0}', [fieldname.bold()]),\n\t\t\t\tindicator: 'red',\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpush_new_filter(args) {\n\t\t// args: [doctype, fieldname, condition, value]\n\t\tif (this.filter_exists(args)) return;\n\n\t\t// {}: Clear page filter fieldname field\n\n\t\tlet filter = this._push_new_filter(...args);\n\n\t\tif (filter && filter.value) {\n\t\t\t// filter.setup_state(is_new_filter);\n\t\t\treturn filter._filter_value_set; // internal promise\n\t\t}\n\t}\n\n\t_push_new_filter(doctype, fieldname, condition, value, hidden = false) {\n\t\tlet args = {\n\t\t\tparent: this.wrapper,\n\t\t\tparent_doctype: this.doctype,\n\t\t\tdoctype: doctype,\n\t\t\t_parent_doctype: this.parent_doctype,\n\t\t\tfieldname: fieldname,\n\t\t\tcondition: condition,\n\t\t\tvalue: value,\n\t\t\thidden: hidden,\n\t\t\tindex: this.filters.length + 1,\n\t\t\ton_change: (update) => {\n\t\t\t\tif (update) this.update_filters();\n\t\t\t\tthis.on_change();\n\t\t\t},\n\t\t\tfilter_items: (doctype, fieldname) => {\n\t\t\t\treturn !this.filter_exists([doctype, fieldname]);\n\t\t\t},\n\t\t\tfilter_list: this.base_list || this,\n\t\t};\n\t\tlet filter = new frappe.ui.Filter(args);\n\t\tthis.filters.push(filter);\n\t\treturn filter;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tlet filter_obj = this.filters.find(f => f.fieldname == fieldname) || {};\n\t\treturn filter_obj.value;\n\t}\n\n\tfilter_exists(filter_value) {\n\t\t// filter_value of form: [doctype, fieldname, condition, value]\n\t\tlet exists = false;\n\t\tthis.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\tlet f_value = f.get_value();\n\t\t\t\tif (filter_value.length === 2) {\n\t\t\t\t\texists =\n\t\t\t\t\t\tfilter_value[0] === f_value[0] && filter_value[1] === f_value[1];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet value = filter_value[3];\n\t\t\t\tlet equal = frappe.utils.arrays_equal;\n\n\t\t\t\tif (\n\t\t\t\t\tequal(f_value.slice(0, 4), filter_value.slice(0, 4)) ||\n\t\t\t\t\t(Array.isArray(value) && equal(value, f_value[3]))\n\t\t\t\t) {\n\t\t\t\t\texists = true;\n\t\t\t\t}\n\t\t\t});\n\t\treturn exists;\n\t}\n\n\tget_filters() {\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\treturn f.get_value();\n\t\t\t});\n\t\t// {}: this.list.update_standard_filters(values);\n\t}\n\n\tupdate_filters() {\n\t\t// remove hidden filters and undefined filters\n\t\tconst filter_exists = (f) => ![undefined, null].includes(f.get_selected_value());\n\t\tthis.filters.map(f => !filter_exists(f) && f.remove());\n\t\tthis.filters = this.filters.filter(f => filter_exists(f) && f.field);\n\t\tthis.update_filter_button();\n\t\tthis.filters.length === 0 &&\n\t\t\tthis.toggle_empty_filters(true);\n\t}\n\n\tclear_filters() {\n\t\tthis.filters.map((f) => f.remove(true));\n\t\t// {}: Clear page filters, .date-range-picker (called list run())\n\t\tthis.filters = [];\n\t}\n\n\tget_filter(fieldname) {\n\t\treturn this.filters.filter((f) => {\n\t\t\treturn f.field && f.field.df.fieldname == fieldname;\n\t\t})[0];\n\t}\n\n\tget_filter_area_template() {\n\t\t/* eslint-disable indent */\n\t\treturn $(`\n\t\t\t<div class=\"filter-area\">\n\t\t\t\t<div class=\"filter-edit-area\">\n\t\t\t\t\t<div class=\"text-muted empty-filters text-center\">\n\t\t\t\t\t\t${__('No filters selected')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr class=\"divider\"></hr>\n\t\t\t\t<div class=\"filter-action-buttons\">\n\t\t\t\t\t<button class=\"text-muted add-filter btn btn-xs\">\n\t\t\t\t\t\t+ ${__('Add a Filter')}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-xs clear-filters\">\n\t\t\t\t\t\t\t${__('Clear Filters')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t${this.filter_button ?\n\t\t\t\t\t\t\t`<button class=\"btn btn-primary btn-xs apply-filters\">\n\t\t\t\t\t\t\t\t${__('Apply Filters')}\n\t\t\t\t\t\t\t</button>`\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t);\n\t\t/* eslint-disable indent */\n\t}\n\n\tget_filters_as_object() {\n\t\tlet filters = this.get_filters().reduce((acc, filter) => {\n\t\t\treturn Object.assign(acc, {\n\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t});\n\t\t}, {});\n\t\treturn filters;\n\t}\n\n\tadd_filters_to_filter_group(filters) {\n\t\tif (filters.length) {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tfilters.forEach((filter) => {\n\t\t\t\tthis.add_filter(filter[0], filter[1], filter[2], filter[3]);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n};\n","// <select> widget with all fields of a doctype as options\nfrappe.ui.FieldSelect = Class.extend({\n\t// opts parent, doctype, filter_fields, with_blank, select\n\tinit(opts) {\n\t\tvar me = this;\n\t\t$.extend(this, opts);\n\t\tthis.fields_by_name = {};\n\t\tthis.options = [];\n\t\tthis.$input = $('<input class=\"form-control\">')\n\t\t\t.appendTo(this.parent)\n\t\t\t.on(\"click\", function () { $(this).select(); });\n\t\tthis.input_class && this.$input.addClass(this.input_class);\n\t\tthis.select_input = this.$input.get(0);\n\t\tthis.awesomplete = new Awesomplete(this.select_input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tautoFirst: true,\n\t\t\tlist: me.options,\n\t\t\titem(item) {\n\t\t\t\treturn $(repl('<li class=\"filter-field-select\"><p>%(label)s</p></li>', item))\n\t\t\t\t\t.data(\"item.autocomplete\", item)\n\t\t\t\t\t.get(0);\n\t\t\t}\n\t\t});\n\t\tthis.$input.on(\"awesomplete-select\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.selected_doctype = item.doctype;\n\t\t\tme.selected_fieldname = item.fieldname;\n\t\t\tif(me.select) me.select(item.doctype, item.fieldname);\n\t\t});\n\t\tthis.$input.on(\"awesomplete-selectcomplete\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.$input.val(item.label);\n\t\t});\n\n\t\tif(this.filter_fields) {\n\t\t\tfor(var i in this.filter_fields)\n\t\t\t\tthis.add_field_option(this.filter_fields[i]);\n\t\t} else {\n\t\t\tthis.build_options();\n\t\t}\n\t\tthis.set_value(this.doctype, \"name\");\n\t},\n\tget_value() {\n\t\treturn this.selected_doctype ? this.selected_doctype + \".\" + this.selected_fieldname : null;\n\t},\n\tval(value) {\n\t\tif(value===undefined) {\n\t\t\treturn this.get_value();\n\t\t} else {\n\t\t\tthis.set_value(value);\n\t\t}\n\t},\n\tclear() {\n\t\tthis.selected_doctype = null;\n\t\tthis.selected_fieldname = null;\n\t\tthis.$input.val(\"\");\n\t},\n\tset_value(doctype, fieldname) {\n\t\tvar me = this;\n\t\tthis.clear();\n\t\tif(!doctype) return;\n\n\t\t// old style\n\t\tif(doctype.indexOf(\".\")!==-1) {\n\t\t\tvar parts = doctype.split(\".\");\n\t\t\tdoctype = parts[0];\n\t\t\tfieldname = parts[1];\n\t\t}\n\n\t\t$.each(this.options, function(i, v) {\n\t\t\tif(v.doctype===doctype && v.fieldname===fieldname) {\n\t\t\t\tme.selected_doctype = doctype;\n\t\t\t\tme.selected_fieldname = fieldname;\n\t\t\t\tme.$input.val(v.label);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t},\n\tbuild_options() {\n\t\tvar me = this;\n\t\tme.table_fields = [];\n\t\tvar std_filters = $.map(frappe.model.std_fields, function(d) {\n\t\t\tvar opts = {parent: me.doctype};\n\t\t\tif(d.fieldname==\"name\") opts.options = me.doctype;\n\t\t\treturn $.extend(copy_dict(d), opts);\n\t\t});\n\n\t\t// add parenttype column\n\t\tvar doctype_obj = locals['DocType'][me.doctype];\n\t\tif(doctype_obj && cint(doctype_obj.istable)) {\n\t\t\tstd_filters = std_filters.concat([{\n\t\t\t\tfieldname: 'parent',\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tlabel: 'Parent',\n\t\t\t\tparent: me.doctype,\n\t\t\t}]);\n\t\t}\n\n\t\t// blank\n\t\tif(this.with_blank) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel:\"\",\n\t\t\t\tvalue:\"\",\n\t\t\t});\n\t\t}\n\n\t\t// main table\n\t\tvar main_table_fields = std_filters.concat(frappe.meta.docfield_list[me.doctype]);\n\t\t$.each(frappe.utils.sort(main_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ?\n\t\t\t\tme.parent_doctype : me.doctype;\n\n\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\tme.add_field_option(df);\n\t\t});\n\n\t\t// child tables\n\t\t$.each(me.table_fields, function(i, table_df) {\n\t\t\tif(table_df.options) {\n\t\t\t\tlet child_table_fields = [].concat(frappe.meta.docfield_list[table_df.options]);\n\n\t\t\t\tif (table_df.fieldtype === \"Table MultiSelect\") {\n\t\t\t\t\tconst link_field = frappe.meta.get_docfields(table_df.options)\n\t\t\t\t\t\t.find(df => df.fieldtype === 'Link');\n\t\t\t\t\tchild_table_fields = link_field ? [link_field] : [];\n\t\t\t\t}\n\n\t\t\t\t$.each(frappe.utils.sort(child_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ?\n\t\t\t\t\t\tme.parent_doctype : me.doctype;\n\n\t\t\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\t\t\tme.add_field_option(df);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\tadd_field_option(df) {\n\t\tlet me = this;\n\n\t\tif (df.fieldname == 'docstatus' && !frappe.model.is_submittable(me.doctype))\n\t\t\treturn;\n\n\t\tif (frappe.model.table_fields.includes(df.fieldtype)) {\n\t\t\tme.table_fields.push(df);\n\t\t\treturn;\n\t\t}\n\n\t\tlet label = null;\n\t\tlet table = null;\n\n\t\tif(me.doctype && df.parent==me.doctype) {\n\t\t\tlabel = __(df.label);\n\t\t\ttable = me.doctype;\n\t\t} else {\n\t\t\tlabel = __(df.label) + ' (' + __(df.parent) + ')';\n\t\t\ttable = df.parent;\n\t\t}\n\n\t\tif(frappe.model.no_value_type.indexOf(df.fieldtype) == -1 &&\n\t\t\t!(me.fields_by_name[df.parent] && me.fields_by_name[df.parent][df.fieldname])) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: label,\n\t\t\t\tvalue: table + \".\" + df.fieldname,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tdoctype: df.parent\n\t\t\t});\n\t\t\tif(!me.fields_by_name[df.parent]) me.fields_by_name[df.parent] = {};\n\t\t\tme.fields_by_name[df.parent][df.fieldname] = df;\n\t\t}\n\t},\n});\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.Tags = class {\n\tconstructor({\n\t\tparent, placeholder, tagsList,\n\t\tonTagAdd,\n\t\tonTagRemove,\n\t\tonTagClick,\n\t\tonChange\n\t}) {\n\t\tthis.tagsList = tagsList || [];\n\t\tthis.onTagAdd = onTagAdd;\n\t\tthis.onTagRemove = onTagRemove;\n\t\tthis.onTagClick = onTagClick;\n\t\tthis.onChange = onChange;\n\n\t\tthis.setup(parent, placeholder);\n\t}\n\n\tsetup(parent, placeholder) {\n\t\tthis.$ul = parent;\n\t\tthis.$input = $(`<input class=\"tags-input form-control\"></input>`);\n\n\t\tthis.$inputWrapper = this.get_list_element(this.$input);\n\t\tthis.$placeholder = this.get_list_element($(`<span class=\"tags-placeholder text-muted\">${placeholder}</span>`));\n\t\tthis.$inputWrapper.appendTo(this.$ul);\n\t\tthis.$placeholder.appendTo(this.$ul);\n\n\t\tthis.deactivate();\n\t\tthis.bind();\n\t\tthis.boot();\n\t}\n\n\tbind() {\n\t\tconst me = this;\n\t\tconst select_tag = function() {\n\t\t\tconst tagValue = frappe.utils.xss_sanitise(me.$input.val());\n\t\t\tme.addTag(tagValue);\n\t\t\tme.$input.val('');\n\t\t};\n\n\t\tthis.$input.keypress((e) => {\n\t\t\tif (e.which == 13 || e.keyCode == 13) select_tag();\n\t\t});\n\t\tthis.$input.focusout(select_tag);\n\n\t\tthis.$input.on('blur', () => {\n\t\t\tthis.deactivate();\n\t\t});\n\n\t\tthis.$placeholder.on('click', () => {\n\t\t\tthis.activate();\n\t\t\tthis.$input.focus(); // focus only when clicked\n\t\t});\n\t}\n\n\tboot() {\n\t\tthis.addTags(this.tagsList);\n\t}\n\n\tactivate() {\n\t\tthis.$placeholder.hide();\n\t\tthis.$inputWrapper.show();\n\t}\n\n\tdeactivate() {\n\t\tthis.$inputWrapper.hide();\n\t\tthis.$placeholder.show();\n\t}\n\n\taddTag(label) {\n\t\tif (label && label!== '' && !this.tagsList.includes(label)) {\n\t\t\tlet $tag = this.get_tag(label);\n\t\t\tlet row = this.get_list_element($tag, 'form-tag-row');\n\t\t\trow.insertBefore(this.$inputWrapper);\n\t\t\tthis.tagsList.push(label);\n\t\t\tthis.onTagAdd && this.onTagAdd(label);\n\t\t}\n\t}\n\n\tremoveTag(label) {\n\t\tlabel = frappe.utils.xss_sanitise(label);\n\t\tif(this.tagsList.includes(label)) {\n\t\t\tthis.tagsList.splice(this.tagsList.indexOf(label), 1);\n\t\t\tthis.onTagRemove && this.onTagRemove(label);\n\t\t}\n\t}\n\n\taddTags(labels) {\n\t\tlabels.map(this.addTag.bind(this));\n\t}\n\n\tclearTags() {\n\t\tthis.$ul.find('.form-tag-row').remove();\n\t\tthis.tagsList = [];\n\t}\n\n\tget_list_element($element, class_name=\"\") {\n\t\tlet $li = $(`<li class=\"${class_name}\"></li>`);\n\t\t$element.appendTo($li);\n\t\treturn $li;\n\t}\n\n\tget_tag(label) {\n\t\tlet $tag = frappe.get_data_pill(label, label, (target, pill_wrapper) => {\n\t\t\tthis.removeTag(target);\n\t\t\tpill_wrapper.closest('.form-tag-row').remove();\n\t\t});\n\n\t\tif (this.onTagClick) {\n\t\t\t$tag.on('click', '.pill-label', () => {\n\t\t\t\tthis.onTagClick(label);\n\t\t\t});\n\t\t}\n\n\t\treturn $tag;\n\t}\n}\n","frappe.ui.TagEditor = Class.extend({\n\tinit: function(opts) {\n\t\t/* docs:\n\t\tArguments\n\n\t\t- parent\n\t\t- user_tags\n\t\t- doctype\n\t\t- docname\n\t\t*/\n\t\t$.extend(this, opts);\n\n\t\tthis.setup_tags();\n\n\t\tif (!this.user_tags) {\n\t\t\tthis.user_tags = \"\";\n\t\t}\n\t\tthis.initialized = true;\n\t\tthis.refresh(this.user_tags);\n\t},\n\tsetup_tags: function() {\n\t\tvar me = this;\n\n\t\t// hidden form, does not have parent\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wrapper = this.parent;\n\t\tif (!this.wrapper.length) return;\n\n\t\tthis.tags = new frappe.ui.Tags({\n\t\t\tparent: this.wrapper,\n\t\t\tplaceholder: __(\"Add a tag ...\"),\n\t\t\tonTagAdd: (tag) => {\n\t\t\t\tif(me.initialized && !me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags ? me.user_tags.split(\",\") : [];\n\t\t\t\t\t\t\tuser_tags.push(tag)\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTagRemove: (tag) => {\n\t\t\t\tif(!me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.remove_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags.split(\",\");\n\t\t\t\t\t\t\tuser_tags.splice(user_tags.indexOf(tag), 1);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setup_awesomplete();\n\t\tthis.setup_complete = true;\n\t},\n\tsetup_awesomplete: function() {\n\t\tvar me = this;\n\t\tvar $input = this.wrapper.find(\"input.tags-input\");\n\t\tvar input = $input.get(0);\n\t\tthis.awesomplete = new Awesomplete(input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tlist: []\n\t\t});\n\t\t$input.on(\"awesomplete-open\", function(e){\n\t\t\t$input.attr('state', 'open');\n\t\t});\n\t\t$input.on(\"awesomplete-close\", function(e){\n\t\t\t$input.attr('state', 'closed');\n\t\t});\n\t\t$input.on(\"input\", function(e) {\n\t\t\tvar value = e.target.value;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.get_tags\",\n\t\t\t\targs:{\n\t\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\t\ttxt: value.toLowerCase(),\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tme.awesomplete.list = r.message;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t$input.on(\"focus\", function(e) {\n\t\t\tif($input.attr('state') != 'open') {\n\t\t\t\t$input.trigger(\"input\");\n\t\t\t}\n\t\t});\n\t},\n\tget_args: function(tag) {\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tdt: this.frm.doctype,\n\t\t\tdn: this.frm.docname,\n\t\t}\n\t},\n\trefresh: function(user_tags) {\n\t\tvar me = this;\n\t\tif (!this.initialized || !this.setup_complete || this.refreshing) return;\n\n\t\tme.refreshing = true;\n\t\ttry {\n\t\t\tme.tags.clearTags();\n\t\t\tif(user_tags) {\n\t\t\t\tme.user_tags = user_tags;\n\t\t\t\tme.tags.addTags(user_tags.split(','));\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tme.refreshing = false;\n\t\t\t// wtf bug\n\t\t\tsetTimeout( function() { me.refresh(); }, 100);\n\t\t}\n\t\tme.refreshing = false;\n\n\t}\n})\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.is_liked = function(doc) {\n\tvar liked = frappe.ui.get_liked_by(doc);\n\treturn liked.indexOf(frappe.session.user)===-1 ? false : true;\n}\n\nfrappe.ui.get_liked_by = function(doc) {\n\tvar liked = doc._liked_by;\n\tif(liked) {\n\t\tliked = JSON.parse(liked);\n\t}\n\n\treturn liked || [];\n}\n\nfrappe.ui.toggle_like = function($btn, doctype, name, callback) {\n\tvar add = $btn.hasClass(\"not-liked\") ? \"Yes\" : \"No\";\n\t// disable click\n\t$btn.css('pointer-events', 'none');\n\n\tfrappe.call({\n\t\tmethod: \"frappe.desk.like.toggle_like\",\n\t\tquiet: true,\n\t\targs: {\n\t\t\tdoctype: doctype,\n\t\t\tname: name,\n\t\t\tadd: add,\n\t\t},\n\t\tcallback: function(r) {\n\t\t\t// renable click\n\t\t\t$btn.css('pointer-events', 'auto');\n\n\t\t\tif(!r.exc) {\n\t\t\t\t// update in all local-buttons\n\t\t\t\tvar action_buttons = $('.like-action[data-name=\"'+ name.replace(/\"/g, '\\\"')\n\t\t\t\t\t+'\"][data-doctype=\"'+ doctype.replace(/\"/g, '\\\"')+'\"]');\n\n\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\taction_buttons.removeClass(\"not-liked\").addClass(\"liked\");\n\t\t\t\t} else {\n\t\t\t\t\taction_buttons.addClass(\"not-liked\").removeClass(\"liked\");\n\t\t\t\t}\n\n\t\t\t\t// update in locals (form)\n\t\t\t\tvar doc = locals[doctype] && locals[doctype][name];\n\t\t\t\tif(doc) {\n\t\t\t\t\tvar liked_by = JSON.parse(doc._liked_by || \"[]\"),\n\t\t\t\t\t\tidx = liked_by.indexOf(frappe.session.user);\n\t\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\t\tif(idx===-1)\n\t\t\t\t\t\t\tliked_by.push(frappe.session.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(idx!==-1) {\n\t\t\t\t\t\t\tliked_by = liked_by.slice(0,idx).concat(liked_by.slice(idx+1))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdoc._liked_by = JSON.stringify(liked_by);\n\t\t\t\t}\n\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nfrappe.ui.click_toggle_like = function() {\n\tvar $btn = $(this);\n\tvar $count = $btn.siblings(\".likes-count\");\n\tvar not_liked = $btn.hasClass(\"not-liked\");\n\tvar doctype = $btn.attr(\"data-doctype\");\n\tvar name = $btn.attr(\"data-name\");\n\n\tfrappe.ui.toggle_like($btn, doctype, name, function() {\n\t\tif (not_liked) {\n\t\t\t$count.text(cint($count.text()) + 1);\n\t\t} else {\n\t\t\t$count.text(cint($count.text()) - 1);\n\t\t}\n\t});\n\n\treturn false;\n}\n\nfrappe.ui.setup_like_popover = ($parent, selector, check_not_liked=true) => {\n\tif (frappe.dom.is_touchscreen()) {\n\t\treturn;\n\t}\n\n\t$parent.on('mouseover', selector, function() {\n\t\tconst target_element = $(this);\n\t\ttarget_element.popover({\n\t\t\tanimation: true,\n\t\t\tplacement: 'bottom',\n\t\t\ttrigger: 'manual',\n\t\t\ttemplate: `<div class=\"liked-by-popover popover\">\n\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t<div class=\"popover-body popover-content\"></div>\n\t\t\t</div>`,\n\t\t\tcontent: () => {\n\t\t\t\tlet liked_by = target_element.parents(\".liked-by\").attr('data-liked-by');\n\t\t\t\tliked_by = liked_by ? decodeURI(liked_by) : '[]';\n\t\t\t\tliked_by = JSON.parse(liked_by);\n\n\t\t\t\tconst user = frappe.session.user;\n\t\t\t\t// hack\n\t\t\t\tif (check_not_liked) {\n\t\t\t\t\tif (target_element.parents(\".liked-by\").find(\".not-liked\").length) {\n\t\t\t\t\t\tif (liked_by.indexOf(user)!==-1) {\n\t\t\t\t\t\t\tliked_by.splice(liked_by.indexOf(user), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (liked_by.indexOf(user)===-1) {\n\t\t\t\t\t\t\tliked_by.push(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!liked_by.length) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\tlet liked_by_list = $(`<ul class=\"list-unstyled\"></ul>`);\n\n\t\t\t\t// to show social profile of the user\n\t\t\t\tlet link_base = '/app/user-profile/';\n\n\t\t\t\tliked_by.forEach(user => {\n\t\t\t\t\t// append user list item\n\t\t\t\t\tliked_by_list.append(`\n\t\t\t\t\t\t<li data-user=${user}>${frappe.avatar(user, \"avatar-xs\")}\n\t\t\t\t\t\t\t<span>${frappe.user.full_name(user)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`);\n\t\t\t\t});\n\n\t\t\t\tliked_by_list.children('li').click(ev => {\n\t\t\t\t\tlet user = ev.currentTarget.dataset.user;\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t\tfrappe.set_route(link_base + user);\n\t\t\t\t});\n\n\t\t\t\treturn liked_by_list;\n\t\t\t},\n\t\t\thtml: true,\n\t\t\tcontainer: 'body'\n\t\t});\n\n\t\ttarget_element.popover('show');\n\n\t\t$(\".popover\").on(\"mouseleave\", () => {\n\t\t\ttarget_element.popover('hide');\n\t\t});\n\n\t\ttarget_element.on('mouseout', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!$('.popover:hover').length) {\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n\n};\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.BaseList = class BaseList {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t}\n\n\tshow() {\n\t\tfrappe.run_serially([\n\t\t\t() => this.init(),\n\t\t\t() => this.before_refresh(),\n\t\t\t() => this.refresh(),\n\t\t]);\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) return this.init_promise;\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.set_stats,\n\t\t\tthis.setup_fields,\n\t\t\t// make view\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_side_bar,\n\t\t\tthis.setup_main_section,\n\t\t\tthis.setup_view,\n\t\t\tthis.setup_view_menu,\n\t\t].map((fn) => fn.bind(this));\n\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.page_title = this.page_title || frappe.router.doctype_layout || __(this.doctype);\n\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\tthis.settings = frappe.listview_settings[this.doctype] || {};\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\n\t\tthis.start = 0;\n\t\tthis.page_length = 20;\n\t\tthis.data = [];\n\t\tthis.method = \"frappe.desk.reportview.get\";\n\n\t\tthis.can_create = frappe.model.can_create(this.doctype);\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\n\t\tthis.fields = [];\n\t\tthis.filters = [];\n\t\tthis.sort_by = this.meta.sort_field || \"modified\";\n\t\tthis.sort_order = this.meta.sort_order || \"desc\";\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\t\tthis.secondary_action = null;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: \"visible-xs\",\n\t\t\t},\n\t\t];\n\t}\n\n\tget_list_view_settings() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.listview.get_list_settings\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((doc) => (this.list_view_settings = doc.message || {}));\n\t}\n\n\tsetup_fields() {\n\t\tthis.set_fields();\n\t\tthis.build_fields();\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.meta.title_field\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\t}\n\n\tget_fields_in_list_view() {\n\t\treturn this.meta.fields.filter((df) => {\n\t\t\treturn (\n\t\t\t\t(frappe.model.is_value_type(df.fieldtype) &&\n\t\t\t\t\t(df.in_list_view &&\n\t\t\t\t\t\tfrappe.perm.has_perm(\n\t\t\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\t\tdf.permlevel,\n\t\t\t\t\t\t\t\"read\"\n\t\t\t\t\t\t))) ||\n\t\t\t\t(df.fieldtype === \"Currency\" &&\n\t\t\t\t\tdf.options &&\n\t\t\t\t\t!df.options.includes(\":\")) ||\n\t\t\t\tdf.fieldname === \"status\"\n\t\t\t);\n\t\t});\n\t}\n\n\tbuild_fields() {\n\t\t// fill in missing doctype\n\t\tthis.fields = this.fields.map((f) => {\n\t\t\tif (typeof f === \"string\") {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.fields = this.fields.filter(Boolean);\n\t\t//de-duplicate\n\t\tthis.fields = this.fields.uniqBy((f) => f[0] + f[1]);\n\t}\n\n\t_add_field(fieldname, doctype) {\n\t\tif (!fieldname) return;\n\n\t\tif (!doctype) doctype = this.doctype;\n\n\t\tif (typeof fieldname === \"object\") {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent || doctype;\n\t\t}\n\n\t\tif (!this.fields) this.fields = [];\n\t\tconst is_valid_field =\n\t\t\tfrappe.model.std_fields_list.includes(fieldname) ||\n\t\t\tfrappe.meta.has_field(doctype, fieldname) ||\n\t\t\tfieldname === \"_seen\";\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fields.push([fieldname, doctype]);\n\t}\n\n\tset_stats() {\n\t\tthis.stats = [\"_user_tags\"];\n\t\t// add workflow field (as priority)\n\t\tthis.workflow_state_fieldname = frappe.workflow.get_state_fieldname(\n\t\t\tthis.doctype\n\t\t);\n\t\tif (this.workflow_state_fieldname) {\n\t\t\tif (!frappe.workflow.workflows[this.doctype][\"override_status\"]) {\n\t\t\t\tthis._add_field(this.workflow_state_fieldname);\n\t\t\t}\n\t\t\tthis.stats.push(this.workflow_state_fieldname);\n\t\t}\n\t}\n\n\tsetup_page() {\n\t\tthis.page = this.parent.page;\n\t\tthis.$page = $(this.parent);\n\t\t!this.hide_card_layout && this.page.main.addClass('frappe-card');\n\t\tthis.page.page_form.removeClass(\"row\").addClass(\"flex\");\n\t\tthis.hide_page_form && this.page.page_form.hide();\n\t\tthis.hide_sidebar && this.$page.addClass('no-list-sidebar');\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title();\n\t\tthis.set_menu_items();\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_title() {\n\t\tthis.page.set_title(this.page_title);\n\t}\n\n\tsetup_view_menu() {\n\t\t// TODO: add all icons\n\t\tconst icon_map = {\n\t\t\t'Image': 'image-view',\n\t\t\t'List': 'list',\n\t\t\t'Report': 'small-file',\n\t\t\t'Calendar': 'calendar',\n\t\t\t'Gantt': 'gantt',\n\t\t\t'Kanban': 'kanban',\n\t\t\t'Dashboard': 'dashboard',\n\t\t\t'Map': 'map',\n\t\t};\n\n\t\tif (frappe.boot.desk_settings.view_switcher) {\n\t\t\t/* @preserve\n\t\t\tfor translation, don't remove\n\t\t\t__(\"List View\") __(\"Report View\") __(\"Dashboard View\") __(\"Gantt View\"),\n\t\t\t__(\"Kanban View\") __(\"Calendar View\") __(\"Image View\") __(\"Inbox View\"),\n\t\t\t__(\"Tree View\") __(\"Map View\") */\n\t\t\tthis.views_menu = this.page.add_custom_button_group(__('{0} View', [this.view_name]),\n\t\t\t\ticon_map[this.view_name] || 'list');\n\t\t\tthis.views_list = new frappe.views.ListViewSelect({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tparent: this.views_menu,\n\t\t\t\tpage: this.page,\n\t\t\t\tlist_view: this,\n\t\t\t\tsidebar: this.list_sidebar,\n\t\t\t\ticon_map: icon_map\n\t\t\t});\n\t\t}\n\t}\n\n\tset_default_secondary_action() {\n\t\tif (this.secondary_action) {\n\t\t\tconst $secondary_action = this.page.set_secondary_action(\n\t\t\t\tthis.secondary_action.label,\n\t\t\t\tthis.secondary_action.action,\n\t\t\t\tthis.secondary_action.icon\n\t\t\t);\n\t\t\tif (!this.secondary_action.icon) {\n\t\t\t\t$secondary_action.addClass(\"hidden-xs\");\n\t\t\t} else if (!this.secondary_action.label) {\n\t\t\t\t$secondary_action.addClass(\"visible-xs\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refresh_button = this.page.add_action_icon(\"refresh\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t});\n\t\t}\n\t}\n\n\tset_menu_items() {\n\t\tthis.set_default_secondary_action();\n\n\t\tthis.menu_items && this.menu_items.map((item) => {\n\t\t\tif (item.condition && item.condition() === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst $item = this.page.add_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard,\n\t\t\t\titem.shortcut\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item[0] && $item.addClass(item.class);\n\t\t\t}\n\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tfrappe.breadcrumbs.add(this.meta.module, this.doctype);\n\t}\n\n\tsetup_side_bar() {\n\t\tif (this.hide_sidebar || !frappe.boot.desk_settings.list_sidebar) return;\n\t\tthis.list_sidebar = new frappe.views.ListSidebar({\n\t\t\tdoctype: this.doctype,\n\t\t\tstats: this.stats,\n\t\t\tparent: this.$page.find(\".layout-side-section\"),\n\t\t\t// set_filter: this.set_filter.bind(this),\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t});\n\t}\n\n\ttoggle_side_bar(show) {\n\t\tlet show_sidebar = show || JSON.parse(localStorage.show_sidebar || \"true\");\n\t\tshow_sidebar = !show_sidebar;\n\t\tlocalStorage.show_sidebar = show_sidebar;\n\t\tthis.show_or_hide_sidebar();\n\t\t$(document.body).trigger(\"toggleListSidebar\");\n\t}\n\n\tshow_or_hide_sidebar() {\n\t\tlet show_sidebar = JSON.parse(localStorage.show_sidebar || \"true\");\n\t\t$(document.body).toggleClass(\"no-list-sidebar\", !show_sidebar);\n\t}\n\n\tsetup_main_section() {\n\t\treturn frappe.run_serially(\n\t\t\t[\n\t\t\t\tthis.setup_list_wrapper,\n\t\t\t\tthis.show_or_hide_sidebar,\n\t\t\t\tthis.setup_filter_area,\n\t\t\t\tthis.setup_sort_selector,\n\t\t\t\tthis.setup_result_area,\n\t\t\t\tthis.setup_no_result_area,\n\t\t\t\tthis.setup_freeze_area,\n\t\t\t\tthis.setup_paging_area,\n\t\t\t].map((fn) => fn.bind(this))\n\t\t);\n\t}\n\n\tsetup_list_wrapper() {\n\t\tthis.$frappe_list = $('<div class=\"frappe-list\">').appendTo(\n\t\t\tthis.page.main\n\t\t);\n\t}\n\n\tsetup_filter_area() {\n\t\tif (this.hide_filters) return;\n\t\tthis.filter_area = new FilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters);\n\t\t}\n\t}\n\n\tsetup_sort_selector() {\n\t\tif (this.hide_sort_selector) return;\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.$filter_section,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: {\n\t\t\t\tsort_by: this.sort_by,\n\t\t\t\tsort_order: this.sort_order,\n\t\t\t},\n\t\t\tonchange: this.on_sort_change.bind(this),\n\t\t});\n\t}\n\n\ton_sort_change() {\n\t\tthis.refresh();\n\t}\n\n\tsetup_result_area() {\n\t\tthis.$result = $(`<div class=\"result\">`);\n\t\tthis.$frappe_list.append(this.$result);\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $('<div class=\"freeze\"></div>').hide();\n\t\tthis.$frappe_list.append(this.$freeze);\n\t}\n\n\tget_no_result_message() {\n\t\treturn __(\"Nothing to show\");\n\t}\n\n\tsetup_paging_area() {\n\t\tconst paging_values = [20, 100, 500];\n\t\tthis.$paging_area = $(\n\t\t\t`<div class=\"list-paging-area level\">\n\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t${paging_values.map((value) => `\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-paging\"\n\t\t\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t\t\t${value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join(\"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">\n\t\t\t\t\t\t${__(\"Load More\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$frappe_list.append(this.$paging_area);\n\n\t\t// set default paging btn active\n\t\tthis.$paging_area\n\t\t\t.find(`.btn-paging[data-value=\"${this.page_length}\"]`)\n\t\t\t.addClass(\"btn-info\");\n\n\t\tthis.$paging_area.on(\"click\", \".btn-paging, .btn-more\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\n\t\t\tif ($this.is(\".btn-paging\")) {\n\t\t\t\t// set active button\n\t\t\t\tthis.$paging_area.find(\".btn-paging\").removeClass(\"btn-info\");\n\t\t\t\t$this.addClass(\"btn-info\");\n\n\t\t\t\tthis.start = 0;\n\t\t\t\tthis.page_length = this.selected_page_count = $this.data().value;\n\t\t\t} else if ($this.is(\".btn-more\")) {\n\t\t\t\tthis.start = this.start + this.page_length;\n\t\t\t\tthis.page_length = this.selected_page_count || 20;\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.fields.map((f) =>\n\t\t\tfrappe.model.get_full_column_name(f[0], f[1])\n\t\t);\n\t}\n\n\tget_group_by() {\n\t\tlet name_field = this.fields && this.fields.find(f => f[0] == 'name');\n\t\tif (name_field) {\n\t\t\treturn frappe.model.get_full_column_name(name_field[0], name_field[1]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetup_view() {\n\t\t// for child classes\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst filter = this.get_filters_for_args().filter(f => f[1] == fieldname)[0];\n\t\tif (!filter) return;\n\t\treturn {\n\t\t\t'like': filter[3].replace(/^%?|%$/g, ''),\n\t\t\t'not set': null\n\t\t}[filter[2]] || filter[3];\n\t}\n\n\tget_filters_for_args() {\n\t\t// filters might have a fifth param called hidden,\n\t\t// we don't want to pass that server side\n\t\treturn this.filter_area\n\t\t\t? this.filter_area.get().map((filter) => filter.slice(0, 4))\n\t\t\t: [];\n\t}\n\n\tget_args() {\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\tfields: this.get_fields(),\n\t\t\tfilters: this.get_filters_for_args(),\n\t\t\torder_by: this.sort_selector && this.sort_selector.get_sql_string(),\n\t\t\tstart: this.start,\n\t\t\tpage_length: this.page_length,\n\t\t\tview: this.view,\n\t\t\tgroup_by: this.get_group_by()\n\t\t};\n\t}\n\n\tget_call_args() {\n\t\tconst args = this.get_args();\n\t\treturn {\n\t\t\tmethod: this.method,\n\t\t\targs: args,\n\t\t\tfreeze: this.freeze_on_refresh || false,\n\t\t\tfreeze_message: this.freeze_message || __(\"Loading\") + \"...\",\n\t\t};\n\t}\n\n\tbefore_refresh() {\n\t\t// modify args here just before making the request\n\t\t// see list_view.js\n\t}\n\n\trefresh() {\n\t\tthis.freeze(true);\n\t\t// fetch data from server\n\t\treturn frappe.call(this.get_call_args()).then((r) => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.before_render();\n\t\t\tthis.render();\n\t\t\tthis.after_render();\n\t\t\tthis.freeze(false);\n\t\t\tthis.reset_defaults();\n\t\t\tif (this.settings.refresh) {\n\t\t\t\tthis.settings.refresh(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\t\tdata = !Array.isArray(data)\n\t\t\t? frappe.utils.dict(data.keys, data.values)\n\t\t\t: data;\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\n\t\tthis.data = this.data.uniqBy((d) => d.name);\n\t}\n\n\treset_defaults() {\n\t\tthis.page_length = this.page_length + this.start;\n\t\tthis.start = 0;\n\t}\n\n\tfreeze() {\n\t\t// show a freeze message while data is loading\n\t}\n\n\tbefore_render() {}\n\n\tafter_render() {}\n\n\trender() {\n\t\t// for child classes\n\t}\n\n\ton_filter_change() {\n\t\t// fired when filters are added or removed\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\n\t\tconst show_more = this.start + this.page_length <= this.data.length;\n\t\tthis.$paging_area.find(\".btn-more\").toggle(show_more);\n\t}\n\n\tcall_for_selected_items(method, args = {}) {\n\t\targs.names = this.get_checked_items(true);\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tcallback: (r) => {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nclass FilterArea {\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tlet out = filters.reduce((out, filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(condition === \"=\" || condition === \"like\")\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() =>\n\t\t\t\t\tfields_dict[fieldname].set_value(value)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\n\t\treturn out;\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map(f => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"Name\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t},\n\t\t];\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter &&\n\t\t\t\t\t\t\tfrappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet default_value =\n\t\t\t\t\t\tfieldtype === \"Link\"\n\t\t\t\t\t\t\t? frappe.defaults.get_user_default(options)\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\tif ([\"__default\", \"__global\"].includes(default_value)) {\n\t\t\t\t\t\tdefault_value = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tdefault: default_value,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map(df => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tthis.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t${frappe.utils.icon('filter')}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t<span>\n\t\t\t</button>\n\t\t</div>`\n\t\t).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find('.filter-button');\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n}\n\n// utility function to validate view modes\nfrappe.views.view_modes = [\n\t\"List\",\n\t\"Report\",\n\t\"Dashboard\",\n\t\"Gantt\",\n\t\"Kanban\",\n\t\"Calendar\",\n\t\"Image\",\n\t\"Inbox\",\n\t\"Tree\",\n\t\"Map\",\n];\nfrappe.views.is_valid = (view_mode) =>\n\tfrappe.views.view_modes.includes(view_mode);\n","export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__('Doctype required'));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint (docs) {\n\t\tconst print_settings = frappe.model.get_doc(':Print Settings', 'Print Settings');\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\n\t\tconst valid_docs = docs.filter(doc => {\n\t\t\treturn !is_submittable || doc.docstatus === 1 ||\n\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\tfrappe.user.has_role('Administrator');\n\t\t}).map(doc => doc.name);\n\n\t\tconst invalid_docs = docs.filter(doc => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__('You selected Draft or Cancelled documents'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__('Select atleast 1 record for printing'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Print Documents'),\n\t\t\tfields: [{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Letter Head'),\n\t\t\t\tfieldname: 'letter_sel',\n\t\t\t\tdefault: __('No Letterhead'),\n\t\t\t\toptions: this.get_letterhead_options()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Print Format'),\n\t\t\t\tfieldname: 'print_sel',\n\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype)\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Page Size'),\n\t\t\t\tfieldname: 'page_size',\n\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\tdefault: print_settings.pdf_page_size\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Height (in mm)'),\n\t\t\t\tfieldname: 'page_height',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_height\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Width (in mm)'),\n\t\t\t\tfieldname: 'page_width',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_width\n\t\t\t}]\n\t\t});\n\n\t\tdialog.set_primary_action(__('Print'), args => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__('Page height and width cannot be zero'));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({ \"page-height\": args.page_height, \"page-width\": args.page_width });\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tconst w = window.open(\n\t\t\t\t'/api/method/frappe.utils.print_format.download_multi_pdf?' +\n\t\t\t\t'doctype=' + encodeURIComponent(this.doctype) +\n\t\t\t\t'&name=' + encodeURIComponent(json_string) +\n\t\t\t\t'&format=' + encodeURIComponent(print_format) +\n\t\t\t\t'&no_letterhead=' + (with_letterhead ? '0' : '1') +\n\t\t\t\t'&letterhead=' + encodeURIComponent(letterhead) +\n\t\t\t\t'&options=' + encodeURIComponent(pdf_options)\n\t\t\t);\n\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__('Please enable pop-ups'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options () {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: 'Letter Head',\n\t\t\t\tfields: ['name', 'is_default'],\n\t\t\t\tlimit_page_length: 0\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach(letterhead => {\n\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete (docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.reportview.delete_items',\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message:\n\t\t\t\t\tdocnames.length <= 10\n\t\t\t\t\t\t? __(\"Deleting {0} records...\", [docnames.length])\n\t\t\t\t\t\t: null,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot delete {0}', [failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound('delete');\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: 'frappe.desk.form.assign_to.add_multiple',\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__('Select records for assignment'));\n\t\t}\n\t}\n\n\tapply_assignment_rule (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe.call('frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply', {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocnames: docnames\n\t\t\t}).then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel (docnames, action = 'submit', done = null) {\n\t\taction = action.toLowerCase();\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdocnames: docnames\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot {0} {1}', [action, failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tedit (docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort();\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find(value => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Bulk Edit'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Select',\n\t\t\t\t\t'options': field_options,\n\t\t\t\t\t'default': default_field,\n\t\t\t\t\t'label': __('Field'),\n\t\t\t\t\t'fieldname': 'field',\n\t\t\t\t\t'reqd': 1,\n\t\t\t\t\t'onchange': () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Data',\n\t\t\t\t\t'label': __('Value'),\n\t\t\t\t\t'fieldname': 'value',\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value('field')].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\taction: 'update',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t[fieldname]: value || null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).then(r => {\n\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\tfrappe.throw(__('Cannot update {0}', [failed.map(f => f.bold ? f.bold() : f).join(', ')]));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t\tdialog.hide();\n\t\t\t\t\tfrappe.show_alert(__('Updated successfully'));\n\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __('Update {0} records', [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field (dialogObj) {\n\t\t\tconst new_df = Object.assign({},\n\t\t\t\tfield_mappings[dialogObj.get_value('field')]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (new_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === 'Select' && !new_df.default) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __('Value');\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field('value', new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value('value');\n\t\t\tif (value == null || value === '') {\n\t\t\t\tdialog.set_df_property('value', 'description', __('You have not entered a value. The field will be set to empty.'));\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property('value', 'description', '');\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\n\tadd_tags (docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Add Tags'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'MultiSelectPills',\n\t\t\t\t\tfieldname: 'tags',\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t'tags': args.tags,\n\t\t\t\t\t\t\t'dt': this.doctype,\n\t\t\t\t\t\t\t'docs': docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n}","export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw('DocType required');\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__('Save'), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || []\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 4;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = (idx == 0) ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = (idx == 0) ? `hide` : ``;\n\t\t\tlet can_remove = (idx == 0 || is_status_field(me.fields[idx])) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${me.fields[idx].label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted hidden-xs\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: '.sortable-handle',\n\t\t\tdraggable: '.sortable',\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () => me.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map(f => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(me.get_removed_listview_fields(me.fields.map(f => f.fieldname), existing_fields));\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: fields_order.item(idx).getAttribute(\"data-label\")\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(me.meta, me.fields.map(f => f.fieldname)),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\td.set_primary_action(__('Save'), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(me.get_removed_listview_fields(values, me.fields.map(f => f.fieldname)));\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: field.label,\n\t\t\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe.xcall(\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\", {\n\t\t\tdoctype: me.doctype\n\t\t}).then((fields) => {\n\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\tdialog.refresh();\n\t\t});\n\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (field.in_list_view && !in_list(frappe.model.no_value_type, field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname) {\n\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: \"Name\",\n\t\t\tfieldname: \"name\"\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: field.label,\n\t\t\t\tfieldname: field.fieldname\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: \"Status\",\n\t\t\t\tfieldname: \"status_field\"\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (!in_list(frappe.model.no_value_type, field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: in_list(fields, field.fieldname)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach(column => {\n\t\t\tif (!in_list(new_fields, column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n","import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t}\n\n\thas_permissions() {\n\t\tconst can_read = frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t\treturn can_read;\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route('');\n\t\t\tfrappe.msgprint(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || this.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || this.sort_order || \"desc\";\n\n\t\t// set filters from user_settings or list_settings\n\t\tif (\n\t\t\tthis.view_user_settings.filters &&\n\t\t\tthis.view_user_settings.filters.length\n\t\t) {\n\t\t\t// Priority 1: user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\tif (\n\t\t\tthis.view_user_settings.filters &&\n\t\t\tthis.view_user_settings.filters.length\n\t\t) {\n\t\t\t// Priority 1: saved filters\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == 'List') this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map(df => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters\n\t\t\t.filter((f) => valid_fields.includes(f[1]))\n\t\t\t.uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(\n\t\t\tthis.workflow_action_menu_items\n\t\t);\n\t\tactions.map((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon('restriction', 'xs')}\n\t\t\t\t</button>`\n\t\t\t).click(() => this.show_restrictions(match_rules_list)).appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (\n\t\t\t\tdf &&\n\t\t\t\tdf.fieldtype === \"Currency\" &&\n\t\t\t\tdf.options &&\n\t\t\t\t!df.options.includes(\":\")\n\t\t\t) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header=false) {\n\t\tsuper.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false);\n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\"\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tfrappe.has_indicator(this.doctype) &&\n\t\t\t\t\t\tdf.fieldname === \"status\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 8;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== 'name'\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${\n\t\t\t\tthis.meta.documentation\n\t\t\t}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\t\tlet no_result_message = filters && filters.length\n\t\t\t? __(\"No {0} found\", [__(this.doctype)])\n\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\t\tlet new_button_label = filters && filters.length\n\t\t\t? __(\"Create a new {0}\", [__(this.doctype)], \"Create a new document from list view\")\n\t\t\t: __(\"Create your first {0}\", [__(this.doctype)], \"Create a new document from list view\");\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-primary btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.$result\n\t\t\t\t.find(\".list-count\")\n\t\t\t\t.html(`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\treturn Object.assign(args, {\n\t\t\twith_comment_count: true,\n\t\t});\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(\n\t\t\tthis.$result.find(\".list-row-check:checked\").length > 0\n\t\t);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t\tthis.toggle_workflow_actions();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header=false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find('.list-row-head').remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\t\"last_view\",\n\t\t\tthis.view_name\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tthis.list_sidebar && this.list_sidebar.reload_stats();\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_rows_as_checked();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\trender_list() {\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data\n\t\t\t\t\t.map((doc, i) => {\n\t\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\t\treturn this.get_list_row_html(doc);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")\n\t\t\t);\n\t\t}\n\t}\n\n\trender_count() {\n\t\tif (!this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_str().then((str) => {\n\t\t\t\tthis.$result.find(\".list-count\").html(`<span>${str}</span>`);\n\t\t\t});\n\t\t}\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Likes\")}\">${frappe.utils.icon('heart', 'sm', 'like-icon')}</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item\">${__(subject_field.label)}</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map(col => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\": \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\treturn `\n\t\t\t\t<div class=\"${classes}\">\n\t\t\t\t\t${col.type === \"Subject\" ? subject_html : `\n\t\t\t\t\t\t<span>${__((col.df && col.df.label) || col.type)}</span>`}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\t$columns,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns\n\t\t\t.map((col) => this.get_column_html(col, doc))\n\t\t\t.join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(\n\t\t\tthis.get_left_html(doc),\n\t\t\tthis.get_right_html(doc)\n\t\t);\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\") {\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? 'hide' : '';\n\t\t\tlet tags_html = doc._user_tags ? this.get_tags_html(doc._user_tags, 2) : '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tlet value = doc[fieldname] || \"\";\n\n\t\tlet translated_doctypes = (frappe.boot && frappe.boot.translated_doctypes) || [];\n\t\tif (in_list(translated_doctypes, df.options)) {\n\t\t\tvalue = __(value);\n\t\t}\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from &&\n\t\t\t\t\t[\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value)\n\t\t\t\t\t\t: value;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options ? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon('restriction')}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tconst html_map = {\n\t\t\tSubject: this.get_subject_html(doc),\n\t\t\tField: field_html(),\n\t\t};\n\t\tlet column_html = html_map[col.type];\n\n\t\t// listview_setting formatter\n\t\tif (\n\t\t\tthis.settings.formatters &&\n\t\t\tthis.settings.formatters[fieldname]\n\t\t) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored=false) {\n\t\tlet get_tag_html = tag => {\n\t\t\tlet color = '', style = '';\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags.split(',').slice(1, limit + 1).map(get_tag_html).join('');\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = `<div class=\"list-assignments\">\n\t\t\t<span class=\"avatar avatar-small\">\n\t\t\t<span class=\"avatar-empty\"></span>\n\t\t</div>`;\n\n\t\tlet assigned_users = JSON.parse(doc._assign || \"[]\");\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tconst comment_count = `<span class=\"${\n\t\t\t!doc._comment_count ? \"text-extra-muted\" : \"\"\n\t\t} comment-count\">\n\t\t\t\t${frappe.utils.icon('small-message')}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count}\n\t\t\t</span>`;\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t${modified}\n\t\t\t\t${comment_count}\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_dot(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db.count(this.doctype, {\n\t\t\tfilters: this.get_filters_for_args()\n\t\t}).then(total_count => {\n\t\t\tthis.total_count = total_count || current_count;\n\t\t\tthis.count_without_children = count_without_children !== current_count ? count_without_children : undefined;\n\t\t\tlet str = __('{0} of {1}', [current_count, this.total_count]);\n\t\t\tif (this.count_without_children) {\n\t\t\t\tstr = __('{0} of {1} ({2} rows with children)', [count_without_children, this.total_count, current_count]);\n\t\t\t}\n\t\t\treturn str;\n\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\treturn `/app/${frappe.router.slug(frappe.router.doctype_layout || this.doctype)}/${encodeURIComponent(doc.name)}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t? ''\n\t\t\t: 'bold';\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tlet heart_class = liked_by.includes(frappe.session.user)\n\t\t\t? \"liked-by liked\"\n\t\t\t: \"not-liked\";\n\n\t\treturn `<span\n\t\t\tclass=\"like-action ${heart_class}\"\n\t\t\tdata-name=\"${doc.name}\" data-doctype=\"${this.doctype}\"\n\t\t\tdata-liked-by=\"${encodeURI(doc._liked_by) || \"[]\"}\"\n\t\t\ttitle=\"${liked_by.map(u => frappe.user_info(u).fullname).join(', ')}\">\n\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t</span>\n\t\t<span class=\"likes-count\">\n\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t</span>`;\n\t}\n\n\tget_subject_html(doc) {\n\t\tlet subject_field = this.columns[0].df;\n\t\tlet value = doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\t\tlet subject = strip_html(value.toString());\n\t\tlet escaped_subject = frappe.utils.escape_html(subject);\n\n\t\tconst seen = this.get_seen_class(doc);\n\n\t\tlet subject_html = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\"\n\t\t\t\t\tdata-name=\"${escape(doc.name)}\">\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\" title=\"${escaped_subject}\">\n\t\t\t\t<a class=\"ellipsis\"\n\t\t\t\t\thref=\"${this.get_form_link(doc)}\"\n\t\t\t\t\ttitle=\"${escaped_subject}\"\n\t\t\t\t\tdata-doctype=\"${this.doctype}\"\n\t\t\t\t\tdata-name=\"${doc.name}\">\n\t\t\t\t\t${subject}\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t`;\n\n\t\treturn subject_html;\n\t}\n\n\tget_indicator_html(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${indicator[1]} filterable ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t<span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(\n\t\t\tindicator[0]\n\t\t)}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_list_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.next()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.prev()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif (e.ctrlKey || (e.metaKey && !$target.is(\"a\"))) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".checkbox-actions .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".list-header-subject .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr('data-parent')) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr('data-parent')}`)\n\t\t\t\t\t.find('.list-row-checkbox')\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (\n\t\t\t\te.shiftKey &&\n\t\t\t\tthis.$checkbox_cursor &&\n\t\t\t\t!$target.is(this.$checkbox_cursor)\n\t\t\t) {\n\t\t\t\tconst name_1 = this.$checkbox_cursor.data().name;\n\t\t\t\tconst name_2 = $target.data().name;\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data\n\t\t\t\t\t.slice(min_index + 1, max_index)\n\t\t\t\t\t.map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${name}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", frappe.ui.click_toggle_like);\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar && this.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\tthis.toggle_tags();\n\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tthis.pending_document_refreshes = [];\n\n\t\tif (this.list_view_settings && this.list_view_settings.disable_auto_refresh) {\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.socketio.doctype_subscribe(this.doctype);\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (!data || (data.doctype !== this.doctype)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if some bulk operation is happening by selecting list items, don't refresh\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.filter_area.is_being_edited()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.pending_document_refreshes.push(data);\n\t\t\tfrappe.utils.debounce(this.process_document_refreshes.bind(this), 1000)();\n\t\t});\n\t}\n\n\tprocess_document_refreshes() {\n\t\tif (!this.pending_document_refreshes.length) return;\n\n\t\tconst route = frappe.get_route() || [];\n\t\tif (!cur_list || route[0] != \"List\" || cur_list.doctype != route[1]) {\n\t\t\t// wait till user is back on list view before refreshing\n\t\t\tthis.pending_document_refreshes = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst names = this.pending_document_refreshes.map((d) => d.name);\n\t\tthis.pending_document_refreshes = this.pending_document_refreshes.filter(\n\t\t\t(d) => names.indexOf(d.name) === -1\n\t\t);\n\n\t\tif (!names.length) return;\n\n\t\t// filters to get only the doc with this name\n\t\tconst call_args = this.get_call_args();\n\t\tcall_args.args.filters.push([this.doctype, \"name\", \"in\", names]);\n\t\tcall_args.args.start = 0;\n\n\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\tif (!message) return;\n\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\n\t\t\tif (!(data && data.length)) {\n\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t// in the listview according to filters applied\n\t\t\t\t// let's remove it manually\n\t\t\t\tthis.data = this.data.filter((d) => names.indexOf(d.name) === -1);\n\t\t\t\tthis.render_list();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.forEach((datum) => {\n\t\t\t\tconst index = this.data.findIndex((doc) => doc.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\tlet return_value = 0;\n\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\treturn_value = 1;\n\t\t\t\t}\n\n\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\treturn_value = -1;\n\t\t\t\t}\n\n\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t}\n\t\t\t\treturn return_value;\n\t\t\t});\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.render_list();\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\tthis.set_rows_as_checked();\n\t\t\t}\n\t\t});\n\t}\n\n\tset_rows_as_checked() {\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result\n\t\t\t\t.find(`.list-row-checkbox[data-name='${docname}']`)\n\t\t\t\t.prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject ||\n\t\t\tthis.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions ||\n\t\t\tthis.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject\n\t\t\t\t.find(\".list-check-all\")\n\t\t\t\t.prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find('.tag-col').toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\tthis.view_name,\n\t\t\tobj\n\t\t);\n\t}\n\n\ton_update() {}\n\n\tget_share_url() {\n\t\tconst query_params = this.get_filters_for_args()\n\t\t\t.map((filter) => {\n\t\t\t\tfilter[3] = encodeURIComponent(filter[3]);\n\t\t\t\tif (filter[2] === \"=\") {\n\t\t\t\t\treturn `${filter[1]}=${filter[3]}`;\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tfilter[1],\n\t\t\t\t\t\"=\",\n\t\t\t\t\tencodeURIComponent(JSON.stringify([filter[2], filter[3]])),\n\t\t\t\t].join(\"\");\n\t\t\t})\n\t\t\t.join(\"&\");\n\n\t\tlet full_url = window.location.href;\n\t\tif (query_params) {\n\t\t\tfull_url += \"?\" + query_params;\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tshare_url() {\n\t\tconst d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Share URL\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\tfieldname: \"url\",\n\t\t\t\t\tlabel: \"URL\",\n\t\t\t\t\tdefault: this.get_share_url(),\n\t\t\t\t\tread_only: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Copy to clipboard\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tfrappe.utils.copy_to_clipboard(this.get_share_url());\n\t\t\t\td.hide();\n\t\t\t},\n\t\t});\n\t\td.show();\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.model.can_set_user_permissions(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: __(\"Share URL\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.share_url(),\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+L\",\n\t\t});\n\n\t\tif (\n\t\t\tfrappe.user.has_role(\"System Manager\") &&\n\t\t\tfrappe.boot.developer_mode === 1\n\t\t) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\tif (this.get_view_settings) {\n\t\t\t\titems.push(this.get_view_settings());\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.show_list_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(\n\t\t\t\tthis.doctype\n\t\t\t);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tfrappe.xcall(\n\t\t\t\t\t\t\t\"frappe.model.workflow.bulk_workflow_approval\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\t\tconst checked_items = this.get_checked_items();\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].toggle(\n\t\t\t\t\t\tactions.includes(key)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.assign(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.apply_assignment_rule(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.add_tags(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map(\n\t\t\t\t\t\t(docname) => docname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t__(\"Delete {0} items permanently?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t() => bulk_operations.delete(docnames, this.refresh)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Cancel {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"cancel\",\n\t\t\t\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Submit {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"submit\",\n\t\t\t\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tfield_doc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.edit(\n\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\tfield_mappings,\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (\n\t\t\tfrappe.model.can_cancel(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif (\n\t\t\t\t$.isArray(value) &&\n\t\t\t\tvalue[0].startsWith(\"[\") &&\n\t\t\t\tvalue[0].endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\ttypeof value === \"string\" &&\n\t\t\t\tvalue.startsWith(\"[\") &&\n\t\t\t\tvalue.endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\tfield\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([\n\t\t\t\t\t\t\t\tdoctype,\n\t\t\t\t\t\t\t\tfield,\n\t\t\t\t\t\t\t\tvalue_array[j][0],\n\t\t\t\t\t\t\t\tvalue_array[j][1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tstatic trigger_list_update(data) {\n\t\tconst doctype = data.doctype;\n\t\tif (!doctype) return;\n\t\tfrappe.provide(\"frappe.views.trees\");\n\n\t\t// refresh list view\n\t\tconst page_name = frappe.get_route_str();\n\t\tconst list_view = frappe.views.list_view[page_name];\n\t\tif (\n\t\t\tlist_view && list_view.list_view_settings &&\n\t\t\t!list_view.list_view_settings.disable_auto_refresh\n\t\t) {\n\t\t\tlist_view.on_update(data);\n\t\t}\n\t}\n};\n\n$(document).on(\"save\", (event, doc) => {\n\tfrappe.views.ListView.trigger_list_update(doc);\n});\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide('frappe.views.list_view');\n\nwindow.cur_list = null;\nfrappe.views.ListFactory = class ListFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tvar me = this;\n\t\tvar doctype = route[1];\n\n\t\tfrappe.model.with_doctype(doctype, function () {\n\t\t\tif (locals['DocType'][doctype].issingle) {\n\t\t\t\tfrappe.set_re_route('Form', doctype);\n\t\t\t} else {\n\t\t\t\t// List / Gantt / Kanban / etc\n\t\t\t\tlet view_name = frappe.utils.to_title_case(route[2] || 'List');\n\n\t\t\t\t// File is a special view\n\t\t\t\tif (doctype == \"File\" && ![\"Report\", \"Dashboard\"].includes(view_name)) {\n\t\t\t\t\tview_name = \"File\";\n\t\t\t\t}\n\n\t\t\t\tlet view_class = frappe.views[view_name + 'View'];\n\t\t\t\tif (!view_class) view_class = frappe.views.ListView;\n\n\t\t\t\tif (view_class && view_class.load_last_view && view_class.load_last_view()) {\n\t\t\t\t\t// view can have custom routing logic\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfrappe.provide('frappe.views.list_view.' + doctype);\n\t\t\t\tconst page_name = frappe.get_route_str();\n\n\t\t\t\tif (!frappe.views.list_view[page_name]) {\n\t\t\t\t\tfrappe.views.list_view[page_name] = new view_class({\n\t\t\t\t\t\tdoctype: doctype,\n\t\t\t\t\t\tparent: me.make_page(true, page_name)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.container.change_to(page_name);\n\t\t\t\t}\n\t\t\t\tme.set_cur_list();\n\t\t\t}\n\t\t});\n\t}\n\n\tshow() {\n\t\tif (this.re_route_to_view()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.set_module_breadcrumb();\n\t\tsuper.show();\n\t\tthis.set_cur_list();\n\t\tcur_list && cur_list.show();\n\t}\n\n\tre_route_to_view() {\n\t\tvar route = frappe.get_route();\n\t\tvar doctype = route[1];\n\t\tvar last_route = frappe.route_history.slice(-2)[0];\n\t\tif (route[0] === 'List' && route.length === 2 && frappe.views.list_view[doctype]) {\n\t\t\tif(last_route && last_route[0]==='List' && last_route[1]===doctype) {\n\t\t\t\t// last route same as this route, so going back.\n\t\t\t\t// this happens because /app/List/Item will redirect to /app/List/Item/List\n\t\t\t\t// while coming from back button, the last 2 routes will be same, so\n\t\t\t\t// we know user is coming in the reverse direction (via back button)\n\n\t\t\t\t// example:\n\t\t\t\t// Step 1: /app/List/Item redirects to /app/List/Item/List\n\t\t\t\t// Step 2: User hits \"back\" comes back to /app/List/Item\n\t\t\t\t// Step 3: Now we cannot send the user back to /app/List/Item/List so go back one more step\n\t\t\t\twindow.history.go(-1);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tset_module_breadcrumb() {\n\t\tif (frappe.route_history.length > 1) {\n\t\t\tvar prev_route = frappe.route_history[frappe.route_history.length - 2];\n\t\t\tif (prev_route[0] === 'modules') {\n\t\t\t\tvar doctype = frappe.get_route()[1],\n\t\t\t\t\tmodule = prev_route[1];\n\t\t\t\tif (frappe.module_links[module] && frappe.module_links[module].includes(doctype)) {\n\t\t\t\t\t// save the last page from the breadcrumb was accessed\n\t\t\t\t\tfrappe.breadcrumbs.set_doctype_module(doctype, module);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_cur_list() {\n\t\tvar route = frappe.get_route();\n\t\tvar page_name = frappe.get_route_str();\n\t\tcur_list = frappe.views.list_view[page_name];\n\t\tif (cur_list && cur_list.doctype !== route[1]) {\n\t\t\t// changing...\n\t\t\twindow.cur_list = null;\n\t\t}\n\t}\n}\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tif (this.doctype == \"File\" && view == \"List\") {\n\t\t\tview = \"File\";\n\t\t}\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\")\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t}\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\")\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then(calendars => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\")\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.doctype === \"Communication\" &&\n\t\t\t\t\tfrappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (\n\t\t\t\t\t\thas_common(frappe.user_roles, [\n\t\t\t\t\t\t\t\"System Manager\",\n\t\t\t\t\t\t\t\"Administrator\"\n\t\t\t\t\t\t])\n\t\t\t\t\t) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\n\t\t\t\t\t\t\"Inbox\",\n\t\t\t\t\t\taccounts,\n\t\t\t\t\t\tdefault_action\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\")\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\")\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then(\n\t\t\t\t\t\tkanbans => this.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition: this.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation')),\n\t\t\t\taction: () => this.set_route(\"map\")\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach(view => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler &&\n\t\t\t\t\tviews[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(`${__(view)}`);\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\n\t\tlet placeholder = `${__(\"Select {0}\", [__(view)])}`;\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map(item => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${\n\t\t\t\t\t\titem.name\n\t\t\t\t\t}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper\n\t\t\t\t.find(\".sidebar-action a\")\n\t\t\t\t.click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map(k => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tthis.page.add_custom_menu_item(\n\t\t\tkanban_switcher,\n\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\ttrue\n\t\t);\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(\n\t\t\tfrappe.get_route().slice(-1)[0] || \"\"\n\t\t);\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = reports => {\n\t\t\treports.map(r => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route =\n\t\t\t\t\t\tr.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: __(r.title || r.name),\n\t\t\t\t\t\t\troute: route\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tfunction fetch_kanban_board(doctype) {\n\t\t\tfrappe.db.get_value(\n\t\t\t\t\"Kanban Board\",\n\t\t\t\t{ reference_doctype: doctype },\n\t\t\t\t\"name\",\n\t\t\t\t(board) => {\n\t\t\t\t\tif (!$.isEmptyObject(board)) {\n\t\t\t\t\t\tfrappe.set_route(\"list\", doctype, \"kanban\", board.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.views.KanbanView.show_kanban_dialog(doctype);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"] &&\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"].last_kanban_board;\n\t\tif (!last_opened_kanban) {\n\t\t\tfetch_kanban_board(this.doctype);\n\t\t} else {\n\t\t\tfrappe.db.exists(\"Kanban Board\", last_opened_kanban).then((exists) => {\n\t\t\t\tif (exists) {\n\t\t\t\t\tfrappe.set_route(\"list\", this.doctype, \"kanban\", last_opened_kanban);\n\t\t\t\t} else {\n\t\t\t\t\tfetch_kanban_board(this.doctype);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map(calendar => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${\n\t\t\t\t\t\t\tcalendar.name\n\t\t\t\t\t\t}`\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach(account => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\"\n\t\t\t\t\t? \"All Accounts\"\n\t\t\t\t\t: account.email_account;\n\t\t\tlet route = `/app/communication/view/inbox/${email_account}`;\n\t\t\tlet display_name = [\n\t\t\t\t\"All Accounts\",\n\t\t\t\t\"Sent Mail\",\n\t\t\t\t\"Spam\",\n\t\t\t\t\"Trash\"\n\t\t\t].includes(account.email_id)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n","frappe.provide('frappe.ui');\n\nexport default class ListFilter {\n\tconstructor({ wrapper, doctype }) {\n\t\tObject.assign(this, arguments[0]);\n\t\tthis.can_add_global = frappe.user.has_role([\n\t\t\t'System Manager',\n\t\t\t'Administrator',\n\t\t]);\n\t\tthis.filters = [];\n\t\tthis.make();\n\t\tthis.bind();\n\t\tthis.refresh();\n\t}\n\n\tmake() {\n\t\t// init dom\n\t\tthis.wrapper.html(`\n\t\t\t<li class=\"input-area\"></li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"saved-filters-preview\">${__('Show Saved')}</a>\n\t\t\t</li>\n\t\t\t<div class=\"saved-filters\"></div>\n\t\t`);\n\n\t\tthis.$input_area = this.wrapper.find('.input-area');\n\t\tthis.$list_filters = this.wrapper.find('.list-filters');\n\t\tthis.$saved_filters = this.wrapper.find('.saved-filters').hide();\n\t\tthis.$saved_filters_preview = this.wrapper.find('.saved-filters-preview');\n\t\tthis.saved_filters_hidden = true;\n\n\t\tthis.filter_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tplaceholder: __('Filter Name'),\n\t\t\t\tinput_class: 'input-xs',\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\n\t\tthis.is_global_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Check',\n\t\t\t\tlabel: __('Is Global'),\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\t}\n\n\tbind() {\n\t\tthis.bind_save_filter();\n\t\tthis.bind_toggle_saved_filters();\n\t\tthis.bind_click_filter();\n\t\tthis.bind_remove_filter();\n\t}\n\n\trefresh() {\n\t\tthis.get_list_filters().then(() => {\n\t\t\tthis.filters.length ? this.$saved_filters_preview.show() : this.$saved_filters_preview.hide();\n\t\t\tconst html = this.filters.map((filter) => this.filter_template(filter));\n\t\t\tthis.wrapper.find('.filter-pill').remove();\n\t\t\tthis.$saved_filters.append(html);\n\t\t});\n\t\tthis.is_global_input.toggle(false);\n\t\tthis.filter_input.set_description('');\n\t}\n\n\tfilter_template(filter) {\n\t\treturn `<div class=\"list-link filter-pill list-sidebar-button btn btn-default\" data-name=\"${\n\t\t\tfilter.name\n\t\t}\">\n\t\t\t<a class=\"ellipsis filter-name\">${filter.filter_name}</a>\n\t\t\t<a class=\"remove\">${frappe.utils.icon('close')}</a>\n\t\t</div>`;\n\t}\n\n\tbind_toggle_saved_filters() {\n\t\tthis.wrapper.find('.saved-filters-preview').click(() => {\n\t\t\tthis.toggle_saved_filters(this.saved_filters_hidden);\n\t\t});\n\t}\n\n\ttoggle_saved_filters(show) {\n\t\tthis.$saved_filters.toggle(show);\n\t\tconst label = show ? __('Hide Saved') : __('Show Saved');\n\t\tthis.wrapper.find('.saved-filters-preview').text(label);\n\t\tthis.saved_filters_hidden = !this.saved_filters_hidden;\n\t}\n\n\tbind_click_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .filter-name', (e) => {\n\t\t\tlet $filter = $(e.currentTarget).parent('.filter-pill');\n\t\t\tthis.set_applied_filter($filter);\n\t\t\tconst name = $filter.attr('data-name');\n\t\t\tthis.list_view.filter_area.clear().then(() => {\n\t\t\t\tthis.list_view.filter_area.add(this.get_filters_values(name));\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_remove_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .remove', (e) => {\n\t\t\tconst $li = $(e.currentTarget).closest('.filter-pill');\n\t\t\tconst name = $li.attr('data-name');\n\t\t\tconst applied_filters = this.get_filters_values(name);\n\t\t\t$li.remove();\n\t\t\tthis.remove_filter(name).then(() => this.refresh());\n\t\t\tthis.list_view.filter_area.remove_filters(applied_filters);\n\t\t});\n\t}\n\n\tbind_save_filter() {\n\t\tthis.filter_input.$input.keydown(\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tconst value = this.filter_input.get_value();\n\t\t\t\tconst has_value = Boolean(value);\n\n\t\t\t\tif (e.which === frappe.ui.keyCode['ENTER']) {\n\t\t\t\t\tif (!has_value || this.filter_name_exists(value)) return;\n\n\t\t\t\t\tthis.filter_input.set_value('');\n\t\t\t\t\tthis.save_filter(value).then(() => this.refresh());\n\t\t\t\t\tthis.toggle_saved_filters(true);\n\t\t\t\t} else {\n\t\t\t\t\tlet help_text = __('Press Enter to save');\n\n\t\t\t\t\tif (this.filter_name_exists(value)) {\n\t\t\t\t\t\thelp_text = __('Duplicate Filter Name');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filter_input.set_description(has_value ? help_text : '');\n\n\t\t\t\t\tif (this.can_add_global) {\n\t\t\t\t\t\tthis.is_global_input.toggle(has_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t);\n\t}\n\n\tsave_filter(filter_name) {\n\t\treturn frappe.db.insert({\n\t\t\tdoctype: 'List Filter',\n\t\t\treference_doctype: this.list_view.doctype,\n\t\t\tfilter_name,\n\t\t\tfor_user: this.is_global_input.get_value() ? '' : frappe.session.user,\n\t\t\tfilters: JSON.stringify(this.get_current_filters()),\n\t\t});\n\t}\n\n\tremove_filter(name) {\n\t\tif (!name) return;\n\t\treturn frappe.db.delete_doc('List Filter', name);\n\t}\n\n\tget_filters_values(name) {\n\t\tconst filter = this.filters.find((filter) => filter.name === name);\n\t\treturn JSON.parse(filter.filters || '[]');\n\t}\n\n\tget_current_filters() {\n\t\treturn this.list_view.filter_area.get();\n\t}\n\n\tfilter_name_exists(filter_name) {\n\t\treturn (this.filters || []).find((f) => f.filter_name === filter_name);\n\t}\n\n\tget_list_filters() {\n\t\tif (frappe.session.user === 'Guest') return Promise.resolve();\n\t\treturn frappe.db\n\t\t\t.get_list('List Filter', {\n\t\t\t\tfields: ['name', 'filter_name', 'for_user', 'filters'],\n\t\t\t\tfilters: { reference_doctype: this.list_view.doctype },\n\t\t\t\tor_filters: [\n\t\t\t\t\t['for_user', '=', frappe.session.user],\n\t\t\t\t\t['for_user', '=', ''],\n\t\t\t\t],\n\t\t\t})\n\t\t\t.then((filters) => {\n\t\t\t\tthis.filters = filters || [];\n\t\t\t});\n\t}\n\n\tset_applied_filter($filter) {\n\t\tthis.$saved_filters\n\t\t\t.find('.btn-primary-light')\n\t\t\t.toggleClass('btn-primary-light btn-default');\n\t\t$filter.toggleClass('btn-default btn-primary-light');\n\t}\n}\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport ListFilter from './list_filter';\nfrappe.provide('frappe.views');\n\n// opts:\n// stats = list of fields\n// doctype\n// parent\n// set_filter = function called on click\n\nfrappe.views.ListSidebar = class ListSidebar {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tvar sidebar_content = frappe.render_template(\"list_sidebar\", { doctype: this.doctype });\n\n\t\tthis.sidebar = $('<div class=\"list-sidebar overlay-sidebar hidden-xs hidden-sm\"></div>')\n\t\t\t.html(sidebar_content)\n\t\t\t.appendTo(this.page.sidebar.empty());\n\n\t\tthis.setup_list_filter();\n\t\tthis.setup_list_group_by();\n\n\t\t// do not remove\n\t\t// used to trigger custom scripts\n\t\t$(document).trigger('list_sidebar_setup');\n\n\t\tif (this.list_view.list_view_settings && this.list_view.list_view_settings.disable_sidebar_stats) {\n\t\t\tthis.sidebar.find('.list-tags').remove();\n\t\t} else {\n\t\t\tthis.sidebar.find('.list-stats').on('click', (e) => {\n\t\t\t\tthis.reload_stats();\n\t\t\t});\n\t\t}\n\n\t}\n\n\tsetup_views() {\n\t\tvar show_list_link = false;\n\n\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Calendar\"]').removeClass(\"hide\");\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Gantt\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\t\t//show link for kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"]').removeClass('hide');\n\t\tif (this.doctype === \"Communication\" && frappe.boot.email_accounts.length) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Inbox\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (frappe.treeview_settings[this.doctype] || frappe.get_meta(this.doctype).is_tree) {\n\t\t\tthis.sidebar.find(\".tree-link\").removeClass(\"hide\");\n\t\t}\n\n\t\tthis.current_view = 'List';\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(route[2])) {\n\t\t\tthis.current_view = route[2];\n\n\t\t\tif (this.current_view === 'Kanban') {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === 'Inbox') {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\n\t\t// disable link for current view\n\t\tthis.sidebar.find('.list-link[data-view=\"' + this.current_view + '\"] a')\n\t\t\t.attr('disabled', 'disabled').addClass('disabled');\n\n\t\t//enable link for Kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"] a, .list-link[data-view=\"Inbox\"] a')\n\t\t\t.attr('disabled', null).removeClass('disabled');\n\n\t\t// show image link if image_view\n\t\tif (this.list_view.meta.image_field) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Image\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (this.list_view.settings.get_coords_method ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation'))) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Map\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (show_list_link) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"List\"]').removeClass('hide');\n\t\t}\n\t}\n\n\tsetup_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tvar me = this;\n\t\tvar added = [];\n\t\tvar dropdown = this.page.sidebar.find('.reports-dropdown');\n\t\tvar divider = false;\n\n\t\tvar add_reports = function(reports) {\n\t\t\t$.each(reports, function(name, r) {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == me.doctype) {\n\t\t\t\t\tvar report_type = r.report_type === 'Report Builder' ?\n\t\t\t\t\t\t`List/${r.ref_doctype}/Report` : 'query-report';\n\n\t\t\t\t\tvar route = r.route || report_type + '/' + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\n\t\t\t\t\t\tif (!divider) {\n\t\t\t\t\t\t\tme.get_divider().appendTo(dropdown);\n\t\t\t\t\t\t\tdivider = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$('<li><a href=\"#' + route + '\">' +\n\t\t\t\t\t\t\t__(r.title || r.name) + '</a></li>').appendTo(dropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports = Object.values(frappe.boot.user.all_reports).sort((a,b) => a.title.localeCompare(b.title)) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\t}\n\n\tsetup_list_filter() {\n\t\tthis.list_filter = new ListFilter({\n\t\t\twrapper: this.page.sidebar.find('.list-filters'),\n\t\t\tdoctype: this.doctype,\n\t\t\tlist_view: this.list_view\n\t\t});\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst $dropdown = this.page.sidebar.find('.kanban-dropdown');\n\t\tfrappe.views.KanbanView.setup_dropdown_in_sidebar(this.doctype, $dropdown);\n\t}\n\n\n\tsetup_keyboard_shortcuts() {\n\t\tthis.sidebar.find('.list-link > a, .list-link > .btn-group > a').each((i, el) => {\n\t\t\tfrappe.ui.keys\n\t\t\t\t.get_shortcut_group(this.page)\n\t\t\t\t.add($(el));\n\t\t});\n\t}\n\n\tsetup_list_group_by() {\n\t\tthis.list_group_by = new frappe.views.ListGroupBy({\n\t\t\tdoctype: this.doctype,\n\t\t\tsidebar: this,\n\t\t\tlist_view: this.list_view,\n\t\t\tpage: this.page\n\t\t});\n\t}\n\n\tget_stats() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.reportview.get_sidebar_stats',\n\t\t\ttype: 'GET',\n\t\t\targs: {\n\t\t\t\tstats: me.stats,\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\t// wait for list filter area to be generated before getting filters, or fallback to default filters\n\t\t\t\tfilters: (me.list_view.filter_area ? me.list_view.get_filters_for_args() : me.default_filters) || []\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tlet stats = (r.message.stats || {})[\"_user_tags\"] || [];\n\t\t\t\tme.render_stat(stats);\n\t\t\t\tlet stats_dropdown = me.sidebar.find('.list-stats-dropdown');\n\t\t\t\tfrappe.utils.setup_search(stats_dropdown, '.stat-link', '.stat-label');\n\t\t\t}\n\t\t});\n\t}\n\n\trender_stat(stats) {\n\t\tlet args = {\n\t\t\tstats: stats,\n\t\t\tlabel: __(\"Tags\")\n\t\t};\n\n\t\tlet tag_list = $(frappe.render_template(\"list_sidebar_stat\", args)).on(\"click\", \".stat-link\", (e) => {\n\t\t\tlet fieldname = $(e.currentTarget).attr('data-field');\n\t\t\tlet label = $(e.currentTarget).attr('data-label');\n\t\t\tlet condition = \"like\";\n\t\t\tlet existing = this.list_view.filter_area.filter_list.get_filter(fieldname);\n\t\t\tif (existing) {\n\t\t\t\texisting.remove();\n\t\t\t}\n\t\t\tif (label == \"No Tags\") {\n\t\t\t\tlabel = \"%,%\";\n\t\t\t\tcondition = \"not like\";\n\t\t\t}\n\t\t\tthis.list_view.filter_area.add(\n\t\t\t\tthis.doctype,\n\t\t\t\tfieldname,\n\t\t\t\tcondition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t});\n\n\t\tthis.sidebar.find(\".list-stats-dropdown .stat-result\").html(tag_list);\n\t}\n\n\treload_stats() {\n\t\tthis.sidebar.find(\".stat-link\").remove();\n\t\tthis.sidebar.find(\".stat-no-records\").remove();\n\t\tthis.get_stats();\n\t}\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.ListGroupBy = class ListGroupBy {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make_wrapper();\n\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\t\tthis.group_by_fields = ['assigned_to', 'owner'];\n\t\tif (this.user_settings.group_by_fields) {\n\t\t\tthis.group_by_fields = this.group_by_fields.concat(\n\t\t\t\tthis.user_settings.group_by_fields\n\t\t\t);\n\t\t}\n\t\tthis.render_group_by_items();\n\t\tthis.make_group_by_fields_modal();\n\t\tthis.setup_dropdown();\n\t\tthis.setup_filter_by();\n\t}\n\n\tmake_group_by_fields_modal() {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __('Select Filters'),\n\t\t\tfields: this.get_group_by_dropdown_fields(),\n\t\t});\n\n\t\td.set_primary_action(__(\"Save\"), ({ group_by_fields }) => {\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype,\n\t\t\t\t'group_by_fields',\n\t\t\t\tgroup_by_fields || null\n\t\t\t);\n\t\t\tthis.group_by_fields = group_by_fields\n\t\t\t\t? ['assigned_to', 'owner', ...group_by_fields]\n\t\t\t\t: ['assigned_to', 'owner'];\n\t\t\tthis.render_group_by_items();\n\t\t\tthis.setup_dropdown();\n\t\t\td.hide();\n\t\t});\n\n\t\td.$body.prepend(`\n\t\t\t<div class=\"filters-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\" class=\"form-control input-xs\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.page.sidebar.find('.add-list-group-by a').on('click', () => {\n\t\t\tfrappe.utils.setup_search(d.$body, '.unit-checkbox', '.label-area');\n\t\t\td.show();\n\t\t});\n\t}\n\n\tmake_wrapper() {\n\t\tthis.$wrapper = this.sidebar.sidebar.find('.list-group-by');\n\t\tlet html = `\n\t\t\t<div class=\"list-group-by-fields\">\n\t\t\t</div>\n\t\t\t<li class=\"add-list-group-by sidebar-action\">\n\t\t\t\t<a class=\"add-group-by\">\n\t\t\t\t\t${__('Edit Filters')}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t\tthis.$wrapper.html(html);\n\t}\n\n\trender_group_by_items() {\n\t\tlet get_item_html = (fieldname) => {\n\t\t\tlet label, fieldtype;\n\t\t\tif (fieldname === 'assigned_to') {\n\t\t\t\tlabel = __('Assigned To');\n\t\t\t} else if (fieldname === 'owner') {\n\t\t\t\tlabel = __('Created By');\n\t\t\t} else {\n\t\t\t\tlabel = frappe.meta.get_label(this.doctype, fieldname);\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.doctype, fieldname);\n\t\t\t\tif (!docfield) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfieldtype = docfield.fieldtype;\n\t\t\t}\n\n\t\t\treturn `<li class=\"group-by-field list-link\">\n\t\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\" data-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\"\n\t\t\t\t\tdata-label=\"${label}\" data-fieldname=\"${fieldname}\" data-fieldtype=\"${fieldtype}\"\n\t\t\t\t\thref=\"#\" onclick=\"return false;\">\n\t\t\t\t\t\t<span class=\"ellipsis\">${__(label)}</span>\n\t\t\t\t\t\t<span>${frappe.utils.icon('select', 'xs')}</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class=\"dropdown-menu group-by-dropdown\" role=\"menu\">\n\t\t\t\t\t</ul>\n\t\t\t</li>`;\n\t\t};\n\t\tlet html = this.group_by_fields.map(get_item_html).join('');\n\t\tthis.$wrapper.find('.list-group-by-fields').html(html);\n\t}\n\n\tsetup_dropdown() {\n\t\tthis.$wrapper.find('.group-by-field').on('show.bs.dropdown', (e) => {\n\t\t\tlet $dropdown = $(e.currentTarget).find('.group-by-dropdown');\n\t\t\tthis.set_loading_state($dropdown);\n\t\t\tlet fieldname = $(e.currentTarget).find('a')\n\t\t\t\t.attr('data-fieldname');\n\t\t\tlet fieldtype = $(e.currentTarget)\n\t\t\t\t.find('a')\n\t\t\t\t.attr('data-fieldtype');\n\t\t\tthis.get_group_by_count(fieldname).then((field_count_list) => {\n\t\t\t\tif (field_count_list.length) {\n\t\t\t\t\tlet applied_filter = this.list_view.get_filter_value(\n\t\t\t\t\t\tfieldname == 'assigned_to' ? '_assign' : fieldname\n\t\t\t\t\t);\n\t\t\t\t\tthis.render_dropdown_items(\n\t\t\t\t\t\tfield_count_list,\n\t\t\t\t\t\tfieldtype,\n\t\t\t\t\t\t$dropdown,\n\t\t\t\t\t\tapplied_filter\n\t\t\t\t\t);\n\t\t\t\t\tthis.setup_search($dropdown);\n\t\t\t\t} else {\n\t\t\t\t\tthis.set_empty_state($dropdown);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_loading_state($dropdown) {\n\t\t$dropdown.html(`<li>\n\t\t\t<div class=\"empty-state group-by-loading\">\n\t\t\t\t${__('Loading...')}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\tset_empty_state($dropdown) {\n\t\t$dropdown.html(\n\t\t\t`<div class=\"empty-state group-by-empty\">\n\t\t\t\t${__('No filters found')}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tsetup_search($dropdown) {\n\t\tfrappe.utils.setup_search(\n\t\t\t$dropdown,\n\t\t\t'.group-by-item',\n\t\t\t'.group-by-value',\n\t\t\t'data-name'\n\t\t);\n\t}\n\n\tget_group_by_dropdown_fields() {\n\t\tlet group_by_fields = [];\n\t\tlet fields = this.list_view.meta.fields.filter((f) =>\n\t\t\t['Select', 'Link', 'Data', 'Int', 'Check'].includes(f.fieldtype)\n\t\t);\n\t\tgroup_by_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: 'group_by_fields',\n\t\t\tfieldtype: 'MultiCheck',\n\t\t\tcolumns: 2,\n\t\t\toptions: fields.map((df) => ({\n\t\t\t\tlabel: __(df.label),\n\t\t\t\tvalue: df.fieldname,\n\t\t\t\tchecked: this.group_by_fields.includes(df.fieldname),\n\t\t\t})),\n\t\t});\n\t\treturn group_by_fields;\n\t}\n\n\tget_group_by_count(field) {\n\t\tlet current_filters = this.list_view.get_filters_for_args();\n\n\t\t// remove filter of the current field\n\t\tcurrent_filters = current_filters.filter(\n\t\t\t(f_arr) => !f_arr.includes(field === 'assigned_to' ? '_assign' : field)\n\t\t);\n\n\t\tlet args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tcurrent_filters: current_filters,\n\t\t\tfield: field,\n\t\t};\n\n\t\treturn frappe\n\t\t\t.call('frappe.desk.listview.get_group_by_count', args)\n\t\t\t.then((r) => {\n\t\t\t\tlet field_counts = r.message || [];\n\t\t\t\tfield_counts = field_counts.filter((f) => f.count !== 0);\n\t\t\t\tlet current_user = field_counts.find(\n\t\t\t\t\t(f) => f.name === frappe.session.user\n\t\t\t\t);\n\t\t\t\tfield_counts = field_counts.filter(\n\t\t\t\t\t(f) =>\n\t\t\t\t\t\t!['Guest', 'Administrator', frappe.session.user].includes(f.name)\n\t\t\t\t);\n\t\t\t\t// Set frappe.session.user on top of the list\n\t\t\t\tif (current_user) field_counts.unshift(current_user);\n\t\t\t\treturn field_counts;\n\t\t\t});\n\t}\n\n\trender_dropdown_items(fields, fieldtype, $dropdown, applied_filter) {\n\t\tlet standard_html = `\n\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\"\n\t\t\t\t\tclass=\"dropdown-search-input form-control input-xs\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t`;\n\t\tlet applied_filter_html='';\n\t\tlet dropdown_items_html = '';\n\n\t\tfields.map(field => {\n\t\t\tif (field.name === applied_filter) {\n\t\t\t\tapplied_filter_html = this.get_dropdown_html(field, fieldtype, true);\n\t\t\t} else {\n\t\t\t\tdropdown_items_html += this.get_dropdown_html(field, fieldtype);\n\t\t\t}\n\t\t});\n\n\t\tlet dropdown_html = standard_html + applied_filter_html + dropdown_items_html;\n\t\t$dropdown.toggleClass('has-selected', Boolean(applied_filter_html));\n\t\t$dropdown.html(dropdown_html);\n\t}\n\n\tget_dropdown_html(field, fieldtype, applied=false) {\n\t\tlet label = field.name == null ? __('Not Set') : field.name;\n\t\tif (label === frappe.session.user) {\n\t\t\tlabel = __('Me');\n\t\t} else if (fieldtype && fieldtype == 'Check') {\n\t\t\tlabel = label == '0' ? __('No') : __('Yes');\n\t\t}\n\t\tlet value = field.name == null ? '' : encodeURIComponent(field.name);\n\n\t\tlet applied_html = applied ? `<span class=\"applied\"> ${frappe.utils.icon('tick', 'xs')} </span>` : '';\n\t\treturn `<li class=\"group-by-item ${applied ? 'selected': ''}\" data-value=\"${value}\">\n\t\t\t<a class=\"dropdown-item\" href=\"#\" onclick=\"return false;\">\n\t\t\t\t${applied_html}\n\t\t\t\t<span class=\"group-by-value ellipsis\" data-name=\"${field.name}\">${label}</span>\n\t\t\t\t<span class=\"group-by-count\">${field.count}</span>\n\t\t\t</a>\n\t\t</li>`;\n\t}\n\n\tsetup_filter_by() {\n\t\tthis.$wrapper.on('click', '.group-by-item', (e) => {\n\t\t\tlet $target = $(e.currentTarget);\n\t\t\tlet is_selected = $target.hasClass('selected');\n\n\t\t\tlet fieldname = $target\n\t\t\t\t.parents('.group-by-field')\n\t\t\t\t.find('a')\n\t\t\t\t.data('fieldname');\n\t\t\tlet value =\n\t\t\t\ttypeof $target.data('value') === 'string'\n\t\t\t\t\t? decodeURIComponent($target.data('value').trim())\n\t\t\t\t\t: $target.data('value');\n\t\t\tfieldname = fieldname === 'assigned_to' ? '_assign' : fieldname;\n\n\t\t\treturn this.list_view.filter_area.remove(fieldname).then(() => {\n\t\t\t\tif (is_selected) return;\n\t\t\t\treturn this.apply_filter(fieldname, value);\n\t\t\t});\n\t\t});\n\t}\n\n\tapply_filter(fieldname, value) {\n\t\tlet operator = '=';\n\t\tif (value === '') {\n\t\t\toperator = 'is';\n\t\t\tvalue = 'not set';\n\t\t}\n\t\tif (fieldname === '_assign') {\n\t\t\toperator = 'like';\n\t\t\tvalue = `%${value}%`;\n\t\t}\n\t\treturn this.list_view.filter_area.add(\n\t\t\tthis.doctype,\n\t\t\tfieldname,\n\t\t\toperator,\n\t\t\tvalue\n\t\t);\n\t}\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.GanttView = class GanttView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Gantt';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = this.page_title + ' ' + __('Gantt');\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\n\t\t\t\tif (typeof this.calendar_settings.gantt == 'object') {\n\t\t\t\t\tObject.assign(this.calendar_settings, this.calendar_settings.gantt);\n\t\t\t\t}\n\n\t\t\t\tif (this.calendar_settings.order_by) {\n\t\t\t\t\tthis.sort_by = this.calendar_settings.order_by;\n\t\t\t\t\tthis.sort_order = 'asc';\n\t\t\t\t} else {\n\t\t\t\t\tthis.sort_by = this.view_user_settings.sort_by || this.calendar_settings.field_map.start;\n\t\t\t\t\tthis.sort_order = this.view_user_settings.sort_order || 'asc';\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.prepare_tasks();\n\t}\n\n\tprepare_tasks() {\n\t\tvar me = this;\n\t\tvar meta = this.meta;\n\t\tvar field_map = this.calendar_settings.field_map;\n\n\t\tthis.tasks = this.data.map(function (item) {\n\t\t\t// set progress\n\t\t\tvar progress = 0;\n\t\t\tif (field_map.progress && $.isFunction(field_map.progress)) {\n\t\t\t\tprogress = field_map.progress(item);\n\t\t\t} else if (field_map.progress) {\n\t\t\t\tprogress = item[field_map.progress];\n\t\t\t}\n\n\t\t\t// title\n\t\t\tvar label;\n\t\t\tif (meta.title_field) {\n\t\t\t\tlabel = item.progress\n\t\t\t\t\t? __(\"{0} ({1}) - {2}%\", [item[meta.title_field], item.name, item.progress])\n\t\t\t\t\t: __(\"{0} ({1})\", [item[meta.title_field], item.name]);\n\t\t\t} else {\n\t\t\t\tlabel = item[field_map.title];\n\t\t\t}\n\n\t\t\tvar r = {\n\t\t\t\tstart: item[field_map.start],\n\t\t\t\tend: item[field_map.end],\n\t\t\t\tname: label,\n\t\t\t\tid: item[field_map.id || 'name'],\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tprogress: progress,\n\t\t\t\tdependencies: item.depends_on_tasks || \"\"\n\t\t\t};\n\n\t\t\tif (item.color && frappe.ui.color.validate_hex(item.color)) {\n\t\t\t\tr['custom_class'] = 'color-' + item.color.substr(1);\n\t\t\t}\n\n\t\t\tif (item.is_milestone) {\n\t\t\t\tr['custom_class'] = 'bar-milestone';\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.load_lib.then(() => {\n\t\t\tthis.render_gantt();\n\t\t});\n\t}\n\n\trender_header() {\n\n\t}\n\n\trender_gantt() {\n\t\tconst me = this;\n\t\tconst gantt_view_mode = this.view_user_settings.gantt_view_mode || 'Day';\n\t\tconst field_map = this.calendar_settings.field_map;\n\t\tconst date_format = 'YYYY-MM-DD';\n\n\t\tthis.$result.empty();\n\t\tthis.$result.addClass('gantt-modern');\n\n\t\tthis.gantt = new Gantt(this.$result[0], this.tasks, {\n\t\t\tbar_height: 35,\n\t\t\tbar_corner_radius: 4,\n\t\t\tresize_handle_width: 8,\n\t\t\tresize_handle_height: 28,\n\t\t\tresize_handle_corner_radius: 3,\n\t\t\tresize_handle_offset: 4,\n\t\t\tview_mode: gantt_view_mode,\n\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\ton_click: task => {\n\t\t\t\tfrappe.set_route('Form', task.doctype, task.id);\n\t\t\t},\n\t\t\ton_date_change: (task, start, end) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t[field_map.start]: moment(start).format(date_format),\n\t\t\t\t\t[field_map.end]: moment(end).format(date_format)\n\t\t\t\t});\n\t\t\t},\n\t\t\ton_progress_change: (task, progress) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tvar progress_fieldname = 'progress';\n\n\t\t\t\tif ($.isFunction(field_map.progress)) {\n\t\t\t\t\tprogress_fieldname = null;\n\t\t\t\t} else if (field_map.progress) {\n\t\t\t\t\tprogress_fieldname = field_map.progress;\n\t\t\t\t}\n\n\t\t\t\tif (progress_fieldname) {\n\t\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t\t[progress_fieldname]: parseInt(progress)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\ton_view_change: mode => {\n\t\t\t\t// save view mode\n\t\t\t\tme.save_view_user_settings({\n\t\t\t\t\tgantt_view_mode: mode\n\t\t\t\t});\n\t\t\t},\n\t\t\tcustom_popup_html: task => {\n\t\t\t\tvar item = me.get_item(task.id);\n\n\t\t\t\tvar html =\n\t\t\t\t\t`<div class=\"title\">${task.name}</div>\n\t\t\t\t\t<div class=\"subtitle\">${moment(task._start).format('MMM D')} - ${moment(task._end).format('MMM D')}</div>`;\n\n\t\t\t\t// custom html in doctype settings\n\t\t\t\tvar custom = me.settings.gantt_custom_popup_html;\n\t\t\t\tif (custom && $.isFunction(custom)) {\n\t\t\t\t\tvar ganttobj = task;\n\t\t\t\t\thtml = custom(ganttobj, item);\n\t\t\t\t}\n\t\t\t\treturn '<div class=\"details-container\">' + html + '</div>';\n\t\t\t}\n\t\t});\n\t\tthis.setup_view_mode_buttons();\n\t\tthis.set_colors();\n\t}\n\n\tsetup_view_mode_buttons() {\n\t\t// view modes (for translation) __(\"Day\"), __(\"Week\"), __(\"Month\"),\n\t\t//__(\"Half Day\"), __(\"Quarter Day\")\n\n\t\tlet $btn_group = this.$paging_area.find('.gantt-view-mode');\n\t\tif ($btn_group.length > 0) return;\n\n\t\tconst view_modes = this.gantt.options.view_modes || [];\n\t\tconst active_class = view_mode => this.gantt.view_is(view_mode) ? 'btn-info' : '';\n\t\tconst html =\n\t\t\t`<div class=\"btn-group gantt-view-mode\">\n\t\t\t\t${view_modes.map(value => `<button type=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-default btn-sm btn-view-mode ${active_class(value)}\"\n\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t${__(value)}\n\t\t\t\t\t</button>`).join('')}\n\t\t\t</div>`;\n\n\t\tthis.$paging_area.find('.level-left').append(html);\n\n\t\t// change view mode asynchronously\n\t\tconst change_view_mode = (value) => setTimeout(() => this.gantt.change_view_mode(value), 0);\n\n\t\tthis.$paging_area.on('click', '.btn-view-mode', e => {\n\t\t\tconst $btn = $(e.currentTarget);\n\t\t\tthis.$paging_area.find('.btn-view-mode').removeClass('btn-info');\n\t\t\t$btn.addClass('btn-info');\n\n\t\t\tconst value = $btn.data().value;\n\t\t\tchange_view_mode(value);\n\t\t});\n\t}\n\n\tset_colors() {\n\t\tconst classes = this.tasks\n\t\t\t.map(t => t.custom_class)\n\t\t\t.filter(c => c && c.startsWith('color-'));\n\n\t\tlet style = classes.map(c => {\n\t\t\tconst class_name = c.replace('#', '');\n\t\t\tconst bar_color = '#' + c.substr(6);\n\t\t\tconst progress_color = frappe.ui.color.get_contrast_color(bar_color);\n\t\t\treturn `\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar {\n\t\t\t\t\tfill: ${bar_color};\n\t\t\t\t}\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar-progress {\n\t\t\t\t\tfill: ${progress_color};\n\t\t\t\t}\n\t\t\t`;\n\t\t}).join(\"\");\n\n\t\tstyle = `<style>${style}</style>`;\n\t\tthis.$result.prepend(style);\n\t}\n\n\tget_item(name) {\n\t\treturn this.data.find(item => item.name === name);\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.css\",\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.min.js\"\n\t\t];\n\t}\n};\n\n","// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.calendar\");\nfrappe.provide(\"frappe.views.calendars\");\n\nfrappe.views.CalendarView = class CalendarView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Calendar'] || {};\n\t\t\troute.push(user_settings.last_calendar || 'default');\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\ttoggle_result_area() {}\n\n\tget view_name() {\n\t\treturn 'Calendar';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Calendar', [this.page_title]);\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\t\t\t\tthis.calendar_name = frappe.get_route()[3];\n\t\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_page_form = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tthis.save_view_user_settings({\n\t\t\tlast_calendar: this.calendar_name\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.calendar) {\n\t\t\tthis.calendar.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.load_lib\n\t\t\t.then(() => this.get_calendar_preferences())\n\t\t\t.then(options => {\n\t\t\t\tthis.calendar = new frappe.views.Calendar(options);\n\t\t\t});\n\t}\n\n\tget_calendar_preferences() {\n\t\tconst options = {\n\t\t\tdoctype: this.doctype,\n\t\t\tparent: this.$result,\n\t\t\tpage: this.page,\n\t\t\tlist_view: this\n\t\t};\n\t\tconst calendar_name = this.calendar_name;\n\n\t\treturn new Promise(resolve => {\n\t\t\tif (calendar_name === 'default') {\n\t\t\t\tObject.assign(options, frappe.views.calendar[this.doctype]);\n\t\t\t\tresolve(options);\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doc('Calendar View', calendar_name, () => {\n\t\t\t\t\tconst doc = frappe.get_doc('Calendar View', calendar_name);\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tfrappe.show_alert(__(\"{0} is not a valid Calendar. Redirecting to default Calendar.\", [calendar_name.bold()]));\n\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"Calendar\", \"default\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(options, {\n\t\t\t\t\t\tfield_map: {\n\t\t\t\t\t\t\tid: \"name\",\n\t\t\t\t\t\t\tstart: doc.start_date_field,\n\t\t\t\t\t\t\tend: doc.end_date_field,\n\t\t\t\t\t\t\ttitle: doc.subject_field,\n\t\t\t\t\t\t\tallDay: doc.all_day ? 1 : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve(options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\tlet assets = [\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.css',\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.js',\n\t\t];\n\t\tlet user_language = frappe.boot.user.language;\n\t\tif (user_language && user_language !== 'en') {\n\t\t\tassets.push('assets/frappe/js/lib/fullcalendar/locale-all.js');\n\t\t}\n\t\treturn assets;\n\t}\n};\n\nfrappe.views.Calendar = Class.extend({\n\tinit: function(options) {\n\t\t$.extend(this, options);\n\t\tthis.get_default_options();\n\t},\n\tget_default_options: function() {\n\t\treturn new Promise ((resolve) => {\n\t\t\tlet defaultView = localStorage.getItem('cal_defaultView');\n\t\t\tlet weekends = localStorage.getItem('cal_weekends');\n\t\t\tlet defaults = {\n\t\t\t\t'defaultView': defaultView ? defaultView : \"month\",\n\t\t\t\t'weekends': weekends ? weekends : true\n\t\t\t};\n\t\t\tresolve(defaults);\n\t\t}).then(defaults => {\n\t\t\tthis.make_page();\n\t\t\tthis.setup_options(defaults);\n\t\t\tthis.make();\n\t\t\tthis.setup_view_mode_button(defaults);\n\t\t\tthis.bind();\n\t\t});\n\t},\n\tmake_page: function() {\n\t\tvar me = this;\n\n\t\t// add links to other calendars\n\t\tme.page.clear_user_actions();\n\t\t$.each(frappe.boot.calendars, function(i, doctype) {\n\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\tme.page.add_menu_item(__(doctype), function() {\n\t\t\t\t\tfrappe.set_route(\"List\", doctype, \"Calendar\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$(this.parent).on(\"show\", function() {\n\t\t\tme.$cal.fullCalendar(\"refetchEvents\");\n\t\t});\n\t},\n\n\tmake: function() {\n\t\tthis.$wrapper = this.parent;\n\t\tthis.$cal = $(\"<div>\").appendTo(this.$wrapper);\n\t\tthis.footnote_area = frappe.utils.set_footnote(this.footnote_area, this.$wrapper,\n\t\t\t__(\"Select or drag across time slots to create a new event.\"));\n\t\tthis.footnote_area.css({\"border-top\": \"0px\"});\n\n\t\tthis.$cal.fullCalendar(this.cal_options);\n\t\tthis.set_css();\n\t},\n\tsetup_view_mode_button: function(defaults) {\n\t\tvar me = this;\n\t\t$(me.footnote_area).find('.btn-weekend').detach();\n\t\tlet btnTitle = (defaults.weekends) ? __('Hide Weekends') : __('Show Weekends');\n\t\tconst btn = `<button class=\"btn btn-default btn-xs btn-weekend\">${btnTitle}</button>`;\n\t\tme.footnote_area.append(btn);\n\t},\n\tset_localStorage_option: function(option, value) {\n\t\tlocalStorage.removeItem(option);\n\t\tlocalStorage.setItem(option, value);\n\t},\n\tbind: function() {\n\t\tconst me = this;\n\t\tlet btn_group = me.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.on(\"click\", \".btn\", function() {\n\t\t\tlet value = ($(this).hasClass('fc-agendaWeek-button')) ? 'agendaWeek' : (($(this).hasClass('fc-agendaDay-button')) ? 'agendaDay' : 'month');\n\t\t\tme.set_localStorage_option(\"cal_defaultView\", value);\n\t\t});\n\n\t\tme.$wrapper.on(\"click\", \".btn-weekend\", function() {\n\t\t\tme.cal_options.weekends = !me.cal_options.weekends;\n\t\t\tme.$cal.fullCalendar('option', 'weekends', me.cal_options.weekends);\n\t\t\tme.set_localStorage_option(\"cal_weekends\", me.cal_options.weekends);\n\t\t\tme.set_css();\n\t\t\tme.setup_view_mode_button(me.cal_options);\n\t\t});\n\t},\n\tset_css: function() {\n\t\t// flatify buttons\n\t\tthis.$wrapper.find(\"button.fc-state-default\")\n\t\t\t.removeClass(\"fc-state-default\")\n\t\t\t.addClass(\"btn btn-default\");\n\n\t\tthis.$wrapper\n\t\t\t.find('.fc-month-button, .fc-agendaWeek-button, .fc-agendaDay-button')\n\t\t\t.wrapAll('<div class=\"btn-group\" />');\n\n\t\tthis.$wrapper.find('.fc-prev-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('left'));\n\t\tthis.$wrapper.find('.fc-next-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('right'));\n\n\t\tthis.$wrapper.find('.fc-today-button')\n\t\t\t.prepend(frappe.utils.icon('today'));\n\n\t\tthis.$wrapper.find('.fc-day-number').wrap('<div class=\"fc-day\"></div>');\n\n\t\tvar btn_group = this.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.find(\".fc-state-active\").addClass(\"active\");\n\n\t\tbtn_group.find(\".btn\").on(\"click\", function() {\n\t\t\tbtn_group.find(\".btn\").removeClass(\"active\");\n\t\t\t$(this).addClass(\"active\");\n\t\t});\n\t},\n\tfield_map: {\n\t\t\"id\": \"name\",\n\t\t\"start\": \"start\",\n\t\t\"end\": \"end\",\n\t\t\"allDay\": \"all_day\",\n\t\t\"convertToUserTz\": \"convert_to_user_tz\",\n\t},\n\tcolor_map: {\n\t\t\"danger\": \"red\",\n\t\t\"success\": \"green\",\n\t\t\"warning\": \"orange\",\n\t\t\"default\": \"blue\"\n\t},\n\tget_system_datetime: function(date) {\n\t\tdate._offset = (moment(date).tz(frappe.sys_defaults.time_zone)._offset);\n\t\treturn frappe.datetime.convert_to_system_tz(date);\n\t},\n\tsetup_options: function(defaults) {\n\t\tvar me = this;\n\t\tdefaults.meridiem = 'false';\n\t\tthis.cal_options = {\n\t\t\tlocale: frappe.boot.user.language || \"en\",\n\t\t\theader: {\n\t\t\t\tleft: 'prev, title, next',\n\t\t\t\tright: 'today, month, agendaWeek, agendaDay'\n\t\t\t},\n\t\t\teditable: true,\n\t\t\tselectable: true,\n\t\t\tselectHelper: true,\n\t\t\tforceEventDuration: true,\n\t\t\tdisplayEventTime: true,\n\t\t\tdefaultView: defaults.defaultView,\n\t\t\tweekends: defaults.weekends,\n\t\t\tnowIndicator: true,\n\t\t\tevents: function(start, end, timezone, callback) {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmethod: me.get_events_method || \"frappe.desk.calendar.get_events\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: me.get_args(start, end),\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tvar events = r.message || [];\n\t\t\t\t\t\tevents = me.prepare_events(events);\n\t\t\t\t\t\tcallback(events);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdisplayEventEnd: true,\n\t\t\teventRender: function(event, element) {\n\t\t\t\telement.attr('title', event.tooltip);\n\t\t\t},\n\t\t\teventClick: function(event) {\n\t\t\t\t// edit event description or delete\n\t\t\t\tvar doctype = event.doctype || me.doctype;\n\t\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\t\tfrappe.set_route(\"Form\", doctype, event.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\teventDrop: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\teventResize: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\tselect: function(startDate, endDate, jsEvent, view) {\n\t\t\t\tif (view.name===\"month\" && (endDate - startDate)===86400000) {\n\t\t\t\t\t// detect single day click in month view\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar event = frappe.model.get_new_doc(me.doctype);\n\n\t\t\t\tevent[me.field_map.start] = me.get_system_datetime(startDate);\n\n\t\t\t\tif(me.field_map.end)\n\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(endDate);\n\n\t\t\t\tif(me.field_map.allDay) {\n\t\t\t\t\tvar all_day = (startDate._ambigTime && endDate._ambigTime) ? 1 : 0;\n\n\t\t\t\t\tevent[me.field_map.allDay] = all_day;\n\n\t\t\t\t\tif (all_day)\n\t\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(moment(endDate).subtract(1, \"s\"));\n\t\t\t\t}\n\n\t\t\t\tfrappe.set_route(\"Form\", me.doctype, event.name);\n\t\t\t},\n\t\t\tdayClick: function(date, jsEvent, view) {\n\t\t\t\tif(view.name === 'month') {\n\t\t\t\t\tconst $date_cell = $('td[data-date=' + date.format('YYYY-MM-DD') + \"]\");\n\n\t\t\t\t\tif($date_cell.hasClass('date-clicked')) {\n\t\t\t\t\t\tme.$cal.fullCalendar('changeView', 'agendaDay');\n\t\t\t\t\t\tme.$cal.fullCalendar('gotoDate', date);\n\t\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\n\t\t\t\t\t\t// update \"active view\" btn\n\t\t\t\t\t\tme.$wrapper.find('.fc-month-button').removeClass('active');\n\t\t\t\t\t\tme.$wrapper.find('.fc-agendaDay-button').addClass('active');\n\t\t\t\t\t}\n\n\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\t\t\t\t\t$date_cell.addClass('date-clicked');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tif(this.options) {\n\t\t\t$.extend(this.cal_options, this.options);\n\t\t}\n\t},\n\tget_args: function(start, end) {\n\t\tvar args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tstart: this.get_system_datetime(start),\n\t\t\tend: this.get_system_datetime(end),\n\t\t\tfields: this.fields,\n\t\t\tfilters: this.list_view.filter_area.get(),\n\t\t\tfield_map: this.field_map\n\t\t};\n\t\treturn args;\n\t},\n\trefresh: function() {\n\t\tthis.$cal.fullCalendar('refetchEvents');\n\t},\n\tprepare_events: function(events) {\n\t\tvar me = this;\n\n\t\treturn (events || []).map(d => {\n\t\t\td.id = d.name;\n\t\t\td.editable = frappe.model.can_write(d.doctype || me.doctype);\n\n\t\t\t// do not allow submitted/cancelled events to be moved / extended\n\t\t\tif(d.docstatus && d.docstatus > 0) {\n\t\t\t\td.editable = false;\n\t\t\t}\n\n\t\t\t$.each(me.field_map, function(target, source) {\n\t\t\t\td[target] = d[source];\n\t\t\t});\n\n\t\t\tif (!me.field_map.allDay) d.allDay = 1;\n\t\t\tif (!me.field_map.convertToUserTz) d.convertToUserTz = 1;\n\n\t\t\t// convert to user tz\n\t\t\tif (d.convertToUserTz) {\n\t\t\t\td.start = frappe.datetime.convert_to_user_tz(d.start);\n\t\t\t\td.end = frappe.datetime.convert_to_user_tz(d.end);\n\t\t\t}\n\n\t\t\t// show event on single day if start or end date is invalid\n\t\t\tif (!frappe.datetime.validate(d.start) && d.end) {\n\t\t\t\td.start = frappe.datetime.add_days(d.end, -1);\n\t\t\t}\n\n\t\t\tif (d.start && !frappe.datetime.validate(d.end)) {\n\t\t\t\td.end = frappe.datetime.add_days(d.start, 1);\n\t\t\t}\n\n\t\t\tme.fix_end_date_for_event_render(d);\n\t\t\tme.prepare_colors(d);\n\n\t\t\td.title = frappe.utils.html2text(d.title);\n\n\t\t\treturn d;\n\t\t});\n\t},\n\tprepare_colors: function(d) {\n\t\tlet color, color_name;\n\t\tif(this.get_css_class) {\n\t\t\tcolor_name = this.color_map[this.get_css_class(d)] || 'blue';\n\n\t\t\tif (color_name.startsWith(\"#\")) {\n\t\t\t\tcolor_name = frappe.ui.color.validate_hex(color_name) ?\n\t\t\t\t\tcolor_name : 'blue';\n\t\t\t}\n\n\t\t\td.backgroundColor = frappe.ui.color.get(color_name, 'extra-light');\n\t\t\td.textColor = frappe.ui.color.get(color_name, 'dark');\n\t\t} else {\n\t\t\tcolor = d.color;\n\t\t\tif (!frappe.ui.color.validate_hex(color) || !color) {\n\t\t\t\tcolor = frappe.ui.color.get('blue', 'extra-light');\n\t\t\t}\n\t\t\td.backgroundColor = color;\n\t\t\td.textColor = frappe.ui.color.get_contrast_color(color);\n\t\t}\n\t\treturn d;\n\t},\n\tupdate_event: function(event, revertFunc) {\n\t\tvar me = this;\n\t\tfrappe.model.remove_from_locals(me.doctype, event.name);\n\t\treturn frappe.call({\n\t\t\tmethod: me.update_event_method || \"frappe.desk.calendar.update_event\",\n\t\t\targs: me.get_update_args(event),\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Unable to update event\"));\n\t\t\t\t\trevertFunc();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function() {\n\t\t\t\trevertFunc();\n\t\t\t}\n\t\t});\n\t},\n\tget_update_args: function(event) {\n\t\tvar me = this;\n\t\tvar args = {\n\t\t\tname: event[this.field_map.id]\n\t\t};\n\n\t\targs[this.field_map.start] = me.get_system_datetime(event.start);\n\n\t\tif(this.field_map.allDay)\n\t\t\targs[this.field_map.allDay] = (event.start._ambigTime && event.end._ambigTime) ? 1 : 0;\n\n\t\tif(this.field_map.end) {\n\t\t\tif (!event.end) {\n\t\t\t\tevent.end = event.start.add(1, \"hour\");\n\t\t\t}\n\n\t\t\targs[this.field_map.end] = me.get_system_datetime(event.end);\n\n\t\t\tif (args[this.field_map.allDay]) {\n\t\t\t\targs[this.field_map.end] = me.get_system_datetime(moment(event.end).subtract(1, \"s\"));\n\t\t\t}\n\t\t}\n\n\t\targs.doctype = event.doctype || this.doctype;\n\n\t\treturn { args: args, field_map: this.field_map };\n\t},\n\n\tfix_end_date_for_event_render: function(event) {\n\t\tif (event.allDay) {\n\t\t\t// We use inclusive end dates. This workaround fixes the rendering of events\n\t\t\tevent.start = event.start ? $.fullCalendar.moment(event.start).stripTime() : null;\n\t\t\tevent.end = event.end ? $.fullCalendar.moment(event.end).add(1, \"day\").stripTime() : null;\n\t\t}\n\t}\n});\n","frappe.provide('frappe.views');\n\nfrappe.views.DashboardView = class DashboardView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Dashboard';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Dashboard', [__(this.doctype)]);\n\t\t\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\t\t});\n\t}\n\n\trender() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_filters = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.chart_group || this.number_card_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup_dashboard_page();\n\t\tthis.setup_dashboard_customization();\n\t\tthis.make_dashboard();\n\t}\n\n\tsetup_dashboard_customization() {\n\t\tthis.page.add_menu_item(__('Customize Dashboard'), () => this.customize());\n\t\tthis.page.add_menu_item(__('Reset Dashboard Customizations'), () => this.reset_dashboard_customization());\n\t\tthis.add_customization_buttons();\n\t}\n\n\tsetup_dashboard_page() {\n\t\tconst chart_wrapper_html = `<div class=\"dashboard-view\"></div>`;\n\n\t\tthis.$frappe_list.html(chart_wrapper_html);\n\t\tthis.page.clear_secondary_action();\n\t\tthis.$dashboard_page = this.$page.find('.layout-main-section-wrapper').addClass('dashboard-page');\n\t\tthis.page.main.removeClass('frappe-card');\n\n\t\tthis.$dashboard_wrapper = this.$page.find('.dashboard-view');\n\t\tthis.$chart_header = this.$page.find('.dashboard-header');\n\n\t\tfrappe.utils.bind_actions_with_object(this.$dashboard_page, this);\n\t}\n\n\tadd_customization_buttons() {\n\t\tthis.save_customizations_button = this.page.add_button(\n\t\t\t__(\"Save Customizations\"),\n\t\t\t() => {\n\t\t\t\tthis.save_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t},\n\t\t\t{btn_class: 'btn-primary'}\n\t\t);\n\n\t\tthis.discard_customizations_button = this.page.add_button(\n\t\t\t__(\"Discard\"),\n\t\t\t() => {\n\t\t\t\tthis.discard_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t}\n\t\t);\n\n\t\tthis.toggle_customization_buttons(false);\n\t}\n\n\tset_primary_action() {\n\t\t// Don't render Add doc button for dashboard view\n\t}\n\n\ttoggle_customization_buttons(show) {\n\t\tthis.save_customizations_button.toggle(show);\n\t\tthis.discard_customizations_button.toggle(show);\n\t}\n\n\tmake_dashboard() {\n\t\tif (this.dashboard_settings) {\n\t\t\tthis.charts = this.dashboard_settings.charts;\n\t\t\tthis.number_cards = this.dashboard_settings.number_cards;\n\t\t\tthis.render_dashboard();\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.fetch_dashboard_items(\n\t\t\t\t\t'Dashboard Chart',\n\t\t\t\t\t{\n\t\t\t\t\t\tchart_type: ['in', ['Count', 'Sum', 'Group By']],\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'charts'\n\t\t\t\t),\n\t\t\t\t() => this.fetch_dashboard_items('Number Card',\n\t\t\t\t\t{\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'number_cards'\n\t\t\t\t),\n\t\t\t\t() => this.render_dashboard()\n\t\t\t]);\n\t\t}\n\t}\n\n\trender_dashboard() {\n\t\tthis.$dashboard_wrapper.empty();\n\n\t\tfrappe.dashboard_utils.get_dashboard_settings().then(settings => {\n\t\t\tthis.dashboard_chart_settings = settings.chart_config ? JSON.parse(settings.chart_config) : {};\n\t\t\tthis.charts.map(chart => {\n\t\t\t\tchart.label = chart.chart_name;\n\t\t\t\tchart.chart_settings = this.dashboard_chart_settings[chart.chart_name] || {};\n\t\t\t});\n\t\t\tthis.render_dashboard_charts();\n\t\t});\n\t\tthis.render_number_cards();\n\n\t\tif (!this.charts.length && !this.number_cards.length) {\n\t\t\tthis.render_empty_state();\n\t\t}\n\t}\n\n\tfetch_dashboard_items(doctype, filters, obj_name) {\n\t\treturn frappe.db.get_list(doctype, {\n\t\t\tfilters: filters,\n\t\t\tfields: ['*']\n\t\t}).then(items => {\n\t\t\tthis[obj_name] = items;\n\t\t});\n\t}\n\n\trender_number_cards() {\n\t\tthis.number_card_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"number_card\",\n\t\t\tcolumns: 3,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t},\n\t\t\tdefault_values: {doctype: this.doctype},\n\t\t\twidgets: this.number_cards || [],\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.number_card_group.customize();\n\t}\n\n\trender_dashboard_charts() {\n\t\tthis.chart_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"chart\",\n\t\t\tcolumns: 2,\n\t\t\theight: 240,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t\tallow_resize: true,\n\t\t\t},\n\t\t\tcustom_dialog: () => this.show_add_chart_dialog(),\n\t\t\twidgets: this.charts,\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.chart_group.customize();\n\t\tthis.chart_group.container.find('.widget-group-head').hide();\n\t}\n\n\trender_empty_state() {\n\t\tconst no_result_message_html =\n\t\t\t`<p>${__(\"You haven't added any Dashboard Charts or Number Cards yet.\")}\n\t\t\t<br>${__(\"Click On Customize to add your first widget\")}</p>`;\n\n\t\tconst customize_button =\n\t\t\t`<p><button class=\"btn btn-primary btn-sm\" data-action=\"customize\">\n\t\t\t\t${__('Customize')}\n\t\t\t</button></p>`;\n\n\t\tconst empty_state_image = '/assets/frappe/images/ui-states/list-empty-state.svg';\n\n\t\tconst empty_state_html = `<div class=\"msg-box no-border empty-dashboard\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t${no_result_message_html}\n\t\t\t${customize_button}\n\t\t</div>`;\n\n\t\tthis.$dashboard_wrapper.append(empty_state_html);\n\t\tthis.$empty_state = this.$dashboard_wrapper.find('.empty-dashboard');\n\t}\n\n\tcustomize() {\n\t\tif (this.in_customize_mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.page.standard_actions.hide();\n\n\t\tif (this.$empty_state) {\n\t\t\tthis.$empty_state.remove();\n\t\t}\n\n\t\tthis.toggle_customize(true);\n\t\tthis.in_customize_mode = true;\n\t\tthis.chart_group.customize();\n\t\tthis.number_card_group.customize();\n\t}\n\n\tget_widgets_to_save(widget_group) {\n\t\tconst config = widget_group.get_widget_config();\n\t\tlet widgets = [];\n\t\tconfig.order.map(widget_name => {\n\t\t\twidgets.push(config.widgets[widget_name]);\n\t\t});\n\t\treturn this.remove_duplicates(widgets);\n\t}\n\n\tsave_dashboard_customization() {\n\t\tthis.toggle_customize(false);\n\n\t\tconst charts = this.get_widgets_to_save(this.chart_group);\n\t\tconst number_cards = this.get_widgets_to_save(this.number_card_group);\n\n\t\tthis.dashboard_settings = {\n\t\t\tcharts: charts,\n\t\t\tnumber_cards: number_cards,\n\t\t};\n\n\t\tfrappe.model.user_settings.save(this.doctype, 'dashboard_settings', this.dashboard_settings);\n\t\tthis.make_dashboard();\n\t}\n\n\tdiscard_dashboard_customization() {\n\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\tthis.toggle_customize(false);\n\t\tthis.render_dashboard();\n\t}\n\n\treset_dashboard_customization() {\n\t\tfrappe.confirm(__(\"Are you sure you want to reset all customizations?\"), () => {\n\t\t\tthis.dashboard_settings = null;\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype, 'dashboard_settings', this.dashboard_settings\n\t\t\t).then(() => this.make_dashboard());\n\n\t\t\tthis.toggle_customize(false);\n\t\t});\n\t}\n\n\ttoggle_customize(show) {\n\t\tthis.toggle_customization_buttons(show);\n\t\tthis.in_customize_mode = show;\n\t}\n\n\tshow_add_chart_dialog() {\n\t\tlet fields = this.get_field_options();\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add a {0} Chart\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'new_or_existing',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tlabel: 'Choose an existing chart or create a new chart',\n\t\t\t\t\toptions: ['New Chart', 'Existing Chart'],\n\t\t\t\t\treqd: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart',\n\t\t\t\t\tfieldname: 'chart',\n\t\t\t\t\tfieldtype: 'Link',\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'query': 'frappe.desk.doctype.dashboard_chart.dashboard_chart.get_charts_for_user',\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\toptions: 'Dashboard Chart',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"Existing Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Label',\n\t\t\t\t\tfieldname: 'label',\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'chart_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Time Series', 'Group By'],\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Function',\n\t\t\t\t\tfieldname: 'chart_function',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Timespan',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'timespan',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Last Year', 'Last Quarter', 'Last Month', 'Last Week'],\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Value Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.value_fields,\n\t\t\t\t\tdepends_on: 'eval: doc.chart_function==\"Sum\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Series Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.date_fields,\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.chart_type == \"Time Series\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Interval',\n\t\t\t\t\tfieldname: 'time_interval',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Yearly', 'Quarterly', 'Monthly', 'Weekly', 'Daily'],\n\t\t\t\t\tdefault: 'Monthly'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Group By\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Type',\n\t\t\t\t\tfieldname: 'group_by_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Aggregate Function Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'aggregate_function_based_on',\n\t\t\t\t\toptions: fields.aggregate_function_fields,\n\t\t\t\t\tdepends_on: 'eval: [\"Sum\", \"Avergage\"].includes(doc.group_by_type)',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'group_by_based_on',\n\t\t\t\t\toptions: fields.group_by_fields,\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Number of Groups',\n\t\t\t\t\tfieldtype: 'Int',\n\t\t\t\t\tfieldname: 'number_of_groups',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_3',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Line', 'Bar', 'Percentage', 'Pie'],\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Color',\n\t\t\t\t\tfieldname: 'color',\n\t\t\t\t\tfieldtype: 'Color',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __('Add'),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tlet chart = values;\n\t\t\t\tif (chart.new_or_existing == 'New Chart') {\n\t\t\t\t\tchart.chart_name = chart.label;\n\t\t\t\t\tchart.chart_type = chart.chart_type == 'Time Series' ? chart.chart_function : chart.chart_type;\n\t\t\t\t\tchart.document_type = this.doctype;\n\t\t\t\t\tchart.filters_json = '[]';\n\t\t\t\t\tfrappe.xcall('frappe.desk.doctype.dashboard_chart.dashboard_chart.create_dashboard_chart', {'args': chart}).then((doc)=> {\n\t\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': doc.chart_name, 'name': doc.chart_name, 'label': chart.label});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': chart.chart, 'label': chart.chart, 'name': chart.chart});\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_field_options() {\n\t\tlet date_fields = [\n\t\t\t{label: __('Created On'), value: 'creation'},\n\t\t\t{label: __('Last Modified On'), value: 'modified'}\n\t\t];\n\t\tlet value_fields = [];\n\t\tlet group_by_fields = [];\n\t\tlet aggregate_function_fields = [];\n\n\t\tfrappe.get_meta(this.doctype).fields.map(df => {\n\t\t\tif (['Date', 'Datetime'].includes(df.fieldtype)) {\n\t\t\t\tdate_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (frappe.model.numeric_fieldtypes.includes(df.fieldtype)) {\n\t\t\t\tif (df.fieldtype == 'Currency') {\n\t\t\t\t\tif (!df.options || df.options !== 'Company:company:default_currency') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue_fields.push({label: df.label, value: df.fieldname});\n\t\t\t\taggregate_function_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (['Link', 'Select'].includes(df.fieldtype)) {\n\t\t\t\tgroup_by_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tdate_fields: date_fields,\n\t\t\tvalue_fields: value_fields,\n\t\t\tgroup_by_fields: group_by_fields,\n\t\t\taggregate_function_fields: aggregate_function_fields\n\t\t};\n\t}\n\n\tremove_duplicates(items) {\n\t\treturn items.filter((item, index) => items.indexOf(item) === index);\n\t}\n\n};\n","/**\n * frappe.views.ImageView\n */\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ImageView = class ImageView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Image\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Images\");\n\t\t});\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = [\n\t\t\t\"name\",\n\t\t\t...this.get_fields_in_list_view().map(el => el.fieldname),\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field,\n\t\t\t\"_liked_by\"\n\t\t];\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.items = this.data.map(d => {\n\t\t\t// absolute url if cordova, else relative\n\t\t\td._image_url = this.get_image_url(d);\n\t\t\treturn d;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.get_attached_images().then(() => {\n\t\t\tthis.render_image_view();\n\n\t\t\tif (!this.gallery) {\n\t\t\t\tthis.setup_gallery();\n\t\t\t} else {\n\t\t\t\tthis.gallery.prepare_pswp_items(this.items, this.images_map);\n\t\t\t}\n\t\t});\n\t}\n\n\trender_image_view() {\n\t\tvar html = this.items.map(this.item_html.bind(this)).join(\"\");\n\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"image-view\");\n\n\t\tthis.$result.html(`\n\t\t\t<div class=\"image-view-container\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_count();\n\t}\n\n\titem_details_html(item) {\n\t\t// TODO: Image view field in DocType\n\t\tlet info_fields =\n\t\t\tthis.get_fields_in_list_view().map(el => el.fieldname) || [];\n\t\tconst title_field = this.meta.title_field || \"name\";\n\t\tinfo_fields = info_fields.filter(field => field !== title_field);\n\t\tlet info_html = `<div><ul class=\"list-unstyled image-view-info\">`;\n\t\tlet set = false;\n\t\tinfo_fields.forEach((field, index) => {\n\t\t\tif (item[field] && !set) {\n\t\t\t\tif (index == 0) info_html += `<li>${__(item[field])}</li>`;\n\t\t\t\telse info_html += `<li class=\"text-muted\">${__(item[field])}</li>`;\n\t\t\t\tset = true;\n\t\t\t}\n\t\t});\n\t\tinfo_html += `</ul></div>`;\n\t\treturn info_html;\n\t}\n\n\titem_html(item) {\n\t\titem._name = encodeURI(item.name);\n\t\tconst encoded_name = item._name;\n\t\tconst title = strip_html(item[this.meta.title_field || \"name\"]);\n\t\tconst escaped_title = frappe.utils.escape_html(title);\n\t\tconst _class = !item._image_url ? \"no-image\" : \"\";\n\t\tconst _html = item._image_url\n\t\t\t? `<img data-name=\"${encoded_name}\" src=\"${item._image_url}\" alt=\"${title}\">`\n\t\t\t: `<span class=\"placeholder-text\">\n\t\t\t\t${frappe.get_abbr(title)}\n\t\t\t</span>`;\n\n\t\tlet details = this.item_details_html(item);\n\n\t\tconst expand_button_html = item._image_url\n\t\t\t? `<div class=\"zoom-view\" data-name=\"${encoded_name}\">\n\t\t\t\t${frappe.utils.icon(\"expand\", \"xs\")}\n\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"image-view-item ellipsis\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\"\n\t\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${escape(item.name)}\">\n\t\t\t\t\t\t${this.get_like_html(item)}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body ${_class}\">\n\t\t\t\t\t<a data-name=\"${encoded_name}\"\n\t\t\t\t\t\ttitle=\"${encoded_name}\"\n\t\t\t\t\t\thref=\"${this.get_form_link(item)}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tdata-name=\"${encoded_name}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${_html}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t${expand_button_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-footer\">\n\t\t\t\t\t<div class=\"image-title\">\n\t\t\t\t\t\t<span class=\"ellipsis\" title=\"${escaped_title}\">\n\t\t\t\t\t\t\t<a class=\"ellipsis\" href=\"${this.get_form_link(item)}\"\n\t\t\t\t\t\t\t\ttitle=\"${escaped_title}\" data-doctype=\"${this.doctype}\" data-name=\"${item.name}\">\n\t\t\t\t\t\t\t\t${title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${details}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_attached_images() {\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.core.doctype.file.file.get_attached_images\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tnames: this.items.map(i => i.name)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(r => {\n\t\t\t\tthis.images_map = Object.assign(\n\t\t\t\t\tthis.images_map || {},\n\t\t\t\t\tr.message\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tget_header_html() {\n\t\t// return this.get_header_html_skeleton(`\n\t\t// \t<div class=\"list-image-header\">\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"Select All\">\n\t\t// \t\t\t<div>${__(this.doctype)} &nbsp;</div>\n\t\t// \t\t\t(<span class=\"text-muted list-count\"></span>)\n\t\t// \t\t</div>\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<div class=\"level-item list-liked-by-me\">\n\t\t// \t\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div>${__('Liked')}</div>\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// `);\n\t}\n\n\tsetup_gallery() {\n\t\tvar me = this;\n\t\tthis.gallery = new frappe.views.GalleryView({\n\t\t\tdoctype: this.doctype,\n\t\t\titems: this.items,\n\t\t\twrapper: this.$result,\n\t\t\timages_map: this.images_map\n\t\t});\n\t\tthis.$result.on(\"click\", \".zoom-view\", function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar name = $(this).data().name;\n\t\t\tname = decodeURIComponent(name);\n\t\t\tme.gallery.show(name);\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nfrappe.views.GalleryView = Class.extend({\n\tinit: function(opts) {\n\t\t$.extend(this, opts);\n\t\tvar me = this;\n\n\t\tthis.lib_ready = this.load_lib();\n\t\tthis.lib_ready.then(function() {\n\t\t\tme.prepare();\n\t\t});\n\t},\n\tprepare: function() {\n\t\t// keep only one pswp dom element\n\t\tthis.pswp_root = $(\"body > .pswp\");\n\t\tif (this.pswp_root.length === 0) {\n\t\t\tvar pswp = frappe.render_template(\"photoswipe_dom\");\n\t\t\tthis.pswp_root = $(pswp).appendTo(\"body\");\n\t\t}\n\t},\n\tprepare_pswp_items: function(_items, _images_map) {\n\t\tvar me = this;\n\n\t\tif (_items) {\n\t\t\t// passed when more button clicked\n\t\t\tthis.items = this.items.concat(_items);\n\t\t\tthis.images_map = _images_map;\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst items = this.items.map(function(i) {\n\t\t\t\tconst query = 'img[data-name=\"' + i._name + '\"]';\n\t\t\t\tlet el = me.wrapper.find(query).get(0);\n\n\t\t\t\tlet width, height;\n\t\t\t\tif (el) {\n\t\t\t\t\twidth = el.naturalWidth;\n\t\t\t\t\theight = el.naturalHeight;\n\t\t\t\t}\n\n\t\t\t\tif (!el) {\n\t\t\t\t\tel = me.wrapper\n\t\t\t\t\t\t.find('.image-field[data-name=\"' + i._name + '\"]')\n\t\t\t\t\t\t.get(0);\n\t\t\t\t\twidth = el.getBoundingClientRect().width;\n\t\t\t\t\theight = el.getBoundingClientRect().height;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsrc: i._image_url,\n\t\t\t\t\tmsrc: i._image_url,\n\t\t\t\t\tname: i.name,\n\t\t\t\t\tw: width,\n\t\t\t\t\th: height,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.pswp_items = items;\n\t\t\tresolve();\n\t\t});\n\t},\n\tshow: function(docname) {\n\t\tthis.lib_ready\n\t\t\t.then(() => this.prepare_pswp_items())\n\t\t\t.then(() => this._show(docname));\n\t},\n\t_show: function(docname) {\n\t\tconst me = this;\n\t\tconst items = this.pswp_items;\n\t\tconst item_index = items.findIndex(item => item.name === docname);\n\n\t\tvar options = {\n\t\t\tindex: item_index,\n\t\t\tgetThumbBoundsFn: function(index) {\n\t\t\t\tconst query = 'img[data-name=\"' + items[index]._name + '\"]';\n\t\t\t\tlet thumbnail = me.wrapper.find(query).get(0);\n\n\t\t\t\tif (!thumbnail) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pageYScroll =\n\t\t\t\t\t\twindow.pageYOffset ||\n\t\t\t\t\t\tdocument.documentElement.scrollTop,\n\t\t\t\t\trect = thumbnail.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width\n\t\t\t\t};\n\t\t\t},\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tshowHideOpacity: true\n\t\t};\n\n\t\t// init\n\t\tthis.pswp = new PhotoSwipe(\n\t\t\tthis.pswp_root.get(0),\n\t\t\tPhotoSwipeUI_Default,\n\t\t\titems,\n\t\t\toptions\n\t\t);\n\t\tthis.browse_images();\n\t\tthis.pswp.init();\n\t},\n\tbrowse_images: function() {\n\t\tconst $more_items = this.pswp_root.find(\".pswp__more-items\");\n\t\tconst images_map = this.images_map;\n\t\tlet last_hide_timeout = null;\n\n\t\tthis.pswp.listen(\"afterChange\", function() {\n\t\t\tconst images = images_map[this.currItem.name];\n\t\t\tif (!images || images.length === 1) {\n\t\t\t\t$more_items.html(\"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thide_more_items_after_2s();\n\t\t\tconst html = images.map(img_html).join(\"\");\n\t\t\t$more_items.html(html);\n\t\t});\n\n\t\tthis.pswp.listen(\"beforeChange\", hide_more_items);\n\t\tthis.pswp.listen(\"initialZoomOut\", hide_more_items);\n\t\tthis.pswp.listen(\"destroy\", () => {\n\t\t\t$(document).off(\"mousemove\", hide_more_items_after_2s);\n\t\t});\n\n\t\t// Replace current image on click\n\t\t$more_items.on(\"click\", \".pswp__more-item\", e => {\n\t\t\tconst img_el = e.target;\n\t\t\tconst index = this.pswp.items.findIndex(\n\t\t\t\ti => i.name === this.pswp.currItem.name\n\t\t\t);\n\n\t\t\tthis.pswp.goTo(index);\n\t\t\tthis.pswp.items.splice(index, 1, {\n\t\t\t\tsrc: img_el.src,\n\t\t\t\tw: img_el.naturalWidth,\n\t\t\t\th: img_el.naturalHeight,\n\t\t\t\tname: this.pswp.currItem.name\n\t\t\t});\n\t\t\tthis.pswp.invalidateCurrItems();\n\t\t\tthis.pswp.updateSize(true);\n\t\t});\n\n\t\t// hide more-images 2s after mousemove\n\t\t$(document).on(\"mousemove\", hide_more_items_after_2s);\n\n\t\tfunction hide_more_items_after_2s() {\n\t\t\tclearTimeout(last_hide_timeout);\n\t\t\tshow_more_items();\n\t\t\tlast_hide_timeout = setTimeout(hide_more_items, 2000);\n\t\t}\n\n\t\tfunction show_more_items() {\n\t\t\t$more_items.show();\n\t\t}\n\n\t\tfunction hide_more_items() {\n\t\t\t$more_items.hide();\n\t\t}\n\n\t\tfunction img_html(src) {\n\t\t\treturn `<div class=\"pswp__more-item\">\n\t\t\t\t<img src=\"${src}\">\n\t\t\t</div>`;\n\t\t}\n\t},\n\tload_lib: function() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar asset_dir = \"assets/frappe/js/lib/photoswipe/\";\n\t\t\tfrappe.require(\n\t\t\t\t[\n\t\t\t\t\tasset_dir + \"photoswipe.css\",\n\t\t\t\t\tasset_dir + \"default-skin.css\",\n\t\t\t\t\tasset_dir + \"photoswipe.js\",\n\t\t\t\t\tasset_dir + \"photoswipe-ui-default.js\"\n\t\t\t\t],\n\t\t\t\tresolve\n\t\t\t);\n\t\t});\n\t}\n});\n","/**\n * frappe.views.MapView\n */\nfrappe.provide('frappe.utils.utils');\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.MapView = class MapView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Map';\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __('{0} Map', [this.page_title]);\n\t}\n\n\tsetup_view() {\n\t}\n\n\ton_filter_change() {\n\t\tthis.get_coords();\n\t}\n\n\trender() {\n\t\tthis.get_coords()\n\t\t\t.then(() => {\n\t\t\t\tthis.render_map_view();\n\t\t\t});\n\t\tthis.$paging_area.find('.level-left').append('<div></div>');\n\t}\n\n\trender_map_view() {\n\t\tthis.map_id = frappe.dom.get_unique_id();\n\n\t\tthis.$result.html(`<div id=\"${this.map_id}\" class=\"map-view-container\"></div>`);\n\n\t\tL.Icon.Default.imagePath = '/assets/frappe/images/leaflet/';\n\t\tthis.map = L.map(this.map_id).setView(frappe.utils.map_defaults.center,\n\t\t\tfrappe.utils.map_defaults.zoom);\n\n\t\tL.tileLayer(frappe.utils.map_defaults.tiles,\n\t\t\tfrappe.utils.map_defaults.options).addTo(this.map);\n\n\t\tL.control.scale().addTo(this.map);\n\t\tif (this.coords.features && this.coords.features.length) {\n\t\t\tthis.coords.features.forEach(\n\t\t\t\tcoords => L.geoJSON(coords).bindPopup(coords.properties.name).addTo(this.map)\n\t\t\t);\n\t\t\tlet lastCoords = this.coords.features[0].geometry.coordinates.reverse();\n\t\t\tthis.map.panTo(lastCoords, 8);\n\t\t}\n\t}\n\n\tget_coords() {\n\t\tlet get_coords_method = this.settings && this.settings.get_coords_method || 'frappe.geo.utils.get_coords';\n\n\t\tif (cur_list.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype === 'Geolocation')) {\n\t\t\tthis.type = 'location_field';\n\t\t} else if  (cur_list.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tcur_list.meta.fields.find(i => i.fieldname === \"longitude\")) {\n\t\t\tthis.type = 'coordinates';\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod: get_coords_method,\n\t\t\targs: {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tfilters: cur_list.filter_area.get(),\n\t\t\t\ttype: this.type\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tthis.coords = r.message;\n\n\t\t});\n\t}\n\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.css\",\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.js\"\n\t\t];\n\t}\n\n\n};\n","export default class KanbanSettings {\n\tconstructor({ kanbanview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(__(\"DocType required\"));\n\t\t}\n\n\t\tthis.kanbanview = kanbanview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_fields();\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"show_labels\",\n\t\t\t\t\tlabel: __(\"Show Labels\"),\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t\tfieldtype: \"HTML\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\thidden: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tthis.dialog.set_values(this.settings);\n\t\tthis.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod:\n\t\t\t\t\t\"frappe.desk.doctype.kanban_board.kanban_board.save_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tboard_name: this.settings.name,\n\t\t\t\t\tsettings: this.dialog.get_values()\n\t\t\t\t},\n\t\t\t\tcallback: r => {\n\t\t\t\t\tthis.kanbanview.board = r.message;\n\t\t\t\t\tthis.kanbanview.render();\n\t\t\t\t\tthis.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trefresh() {\n\t\tthis.setup_fields();\n\t\tthis.add_new_fields();\n\t\tthis.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tif (!this.settings.fields) {\n\t\t\tthis.update_fields();\n\t\t}\n\n\t\tthis.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tconst fields_html = this.dialog.get_field(\"fields_html\");\n\t\tconst wrapper = fields_html.$wrapper[0];\n\t\tlet fields = \"\";\n\n\t\tfor (let fieldname of this.fields) {\n\t\t\tlet field = this.get_docfield(fieldname);\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order sortable\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\"\n\t\t\t\t\tdata-fieldname=\"${field.fieldname}\"\n\t\t\t\t\tdata-label=\"${field.label}\"\n\t\t\t\t\tdata-type=\"${field.type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${__(field.label)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${field.fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(\n\t\t\twrapper.getElementsByClassName(\"control-input-wrapper\")[0],\n\t\t\t{\n\t\t\t\thandle: \".sortable-handle\",\n\t\t\t\tdraggable: \".sortable\",\n\t\t\t\tonUpdate: params => {\n\t\t\t\t\tthis.fields.splice(\n\t\t\t\t\t\tparams.newIndex,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tthis.fields.splice(params.oldIndex, 1)[0]\n\t\t\t\t\t);\n\t\t\t\t\tthis.dialog.set_value(\n\t\t\t\t\t\t\"fields\",\n\t\t\t\t\t\tJSON.stringify(this.fields)\n\t\t\t\t\t);\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tadd_new_fields() {\n\t\tlet add_new_fields = this.get_dialog_fields_wrapper().getElementsByClassName(\n\t\t\t\"add-new-fields\"\n\t\t)[0];\n\t\tadd_new_fields.onclick = () => this.show_column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet remove_fields = this.get_dialog_fields_wrapper().getElementsByClassName(\n\t\t\t\"remove-field\"\n\t\t);\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tthis.remove_fields(\n\t\t\t\t\tremove_fields.item(idx).getAttribute(\"data-fieldname\")\n\t\t\t\t);\n\t\t}\n\t}\n\n\tget_dialog_fields_wrapper() {\n\t\treturn this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t}\n\n\tremove_fields(fieldname) {\n\t\tthis.fields = this.fields.filter(field => field !== fieldname);\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\tthis.refresh();\n\t}\n\n\tupdate_fields() {\n\t\tconst wrapper = this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tthis.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tthis.fields.push(\n\t\t\t\tfields_order.item(idx).getAttribute(\"data-fieldname\")\n\t\t\t);\n\t\t}\n\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t}\n\n\tshow_column_selector() {\n\t\tlet dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: this.get_multiselect_fields(),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tdialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tthis.fields = dialog.get_values().fields || [];\n\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\tthis.refresh();\n\t\t\tdialog.hide();\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_fields() {\n\t\tthis.fields = this.settings.fields;\n\t\tthis.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tget_docfield(field_name) {\n\t\treturn (\n\t\t\tfrappe.meta.get_docfield(this.doctype, field_name) ||\n\t\t\tfrappe.model.get_std_field(field_name)\n\t\t);\n\t}\n\n\tget_multiselect_fields() {\n\t\tconst ignore_fields = [\n\t\t\t\"idx\",\n\t\t\t\"lft\",\n\t\t\t\"rgt\",\n\t\t\t\"old_parent\",\n\t\t\t\"_user_tags\",\n\t\t\t\"_liked_by\",\n\t\t\t\"_comments\",\n\t\t\t\"_assign\",\n\t\t\tthis.meta.title_field || \"name\"\n\t\t];\n\n\t\tconst ignore_fieldtypes = [\n\t\t\t\"Attach Image\",\n\t\t\t\"Text Editor\",\n\t\t\t\"HTML Editor\",\n\t\t\t\"Code\",\n\t\t\t\"Color\",\n\t\t\t...frappe.model.no_value_type\n\t\t];\n\n\t\treturn frappe.model.std_fields\n\t\t\t.concat(this.kanbanview.get_fields_in_list_view())\n\t\t\t.filter(\n\t\t\t\tfield =>\n\t\t\t\t\t!ignore_fields.includes(field.fieldname) &&\n\t\t\t\t\t!ignore_fieldtypes.includes(field.fieldtype)\n\t\t\t)\n\t\t\t.map(field => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: __(field.label),\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: this.fields.includes(field.fieldname)\n\t\t\t\t};\n\t\t\t});\n\t}\n}\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.FileView = class FileView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 2) {\n\t\t\tconst view_user_settings = frappe.get_user_settings(\"File\", \"File\");\n\t\t\tfrappe.set_route(\n\t\t\t\t\"List\",\n\t\t\t\t\"File\",\n\t\t\t\tview_user_settings.last_folder || frappe.boot.home_folder\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn redirect_to_home_if_invalid_route();\n\t}\n\n\tget view_name() {\n\t\treturn \"File\";\n\t}\n\n\tshow() {\n\t\tif (!redirect_to_home_if_invalid_route()) {\n\t\t\tsuper.show();\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.render_header();\n\t\tthis.setup_events();\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"file-view\");\n\t\tthis.add_file_action_buttons();\n\t\tthis.page.add_button(__(\"Toggle Grid View\"), () => {\n\t\t\tfrappe.views.FileView.grid_view = !frappe.views.FileView.grid_view;\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`<div class=\"no-result\">\n\t\t\t<div class=\"breadcrumbs\">${this.get_breadcrumbs_html()}</div>\n\t\t\t<div class=\"text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t</div>`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tget_args() {\n\t\tlet args = super.get_args();\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tObject.assign(args, {\n\t\t\t\torder_by: `is_folder desc, ${this.sort_by} ${this.sort_order}`\n\t\t\t});\n\t\t}\n\t\treturn args;\n\t}\n\n\tset_breadcrumbs() {\n\t\tconst route = frappe.get_route();\n\t\troute.splice(-1);\n\t\tconst last_folder = route[route.length - 1];\n\t\tif (last_folder === \"File\") return;\n\n\t\tfrappe.breadcrumbs.add({\n\t\t\ttype: \"Custom\",\n\t\t\tlabel: __(\"Home\"),\n\t\t\troute: \"/app/List/File/Home\"\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"File Manager\");\n\n\t\t\tconst route = frappe.get_route();\n\t\t\tthis.current_folder = route.slice(2).join(\"/\");\n\t\t\tthis.filters = [[\"File\", \"folder\", \"=\", this.current_folder, true]];\n\t\t\tthis.order_by = this.view_user_settings.order_by || \"file_name asc\";\n\n\t\t\tthis.menu_items = this.menu_items.concat(this.file_menu_items());\n\t\t});\n\t}\n\n\tfile_menu_items() {\n\t\tconst items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Home\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"New Folder\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.prompt(\n\t\t\t\t\t\t__(\"Name\"),\n\t\t\t\t\t\tvalues => {\n\t\t\t\t\t\t\tif (values.value.indexOf(\"/\") > -1) {\n\t\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\"Folder name should not include '/' (slash)\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\tfile_name: values.value,\n\t\t\t\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod:\n\t\t\t\t\t\t\t\t\t\"frappe.core.doctype.file.file.create_new_folder\",\n\t\t\t\t\t\t\t\targs: data\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__(\"Enter folder name\"),\n\t\t\t\t\t\t__(\"Create\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Import Zip\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".zip\"]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success: file => {\n\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipping files...\"));\n\t\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t\t.call(\n\t\t\t\t\t\t\t\t\t\"frappe.core.doctype.file.file.unzip_file\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: file.name\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(r => {\n\t\t\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t\t\t\t\t\t__(\"Unzipped {0} files\", [\n\t\t\t\t\t\t\t\t\t\t\t\tr.message\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\treturn items;\n\t}\n\n\tadd_file_action_buttons() {\n\t\tthis.$cut_button = this.page\n\t\t\t.add_button(__(\"Cut\"), () => {\n\t\t\t\tfrappe.file_manager.cut(\n\t\t\t\t\tthis.get_checked_items(),\n\t\t\t\t\tthis.current_folder\n\t\t\t\t);\n\t\t\t\tthis.$checks.parents(\".file-wrapper\").addClass(\"cut\");\n\t\t\t})\n\t\t\t.hide();\n\n\t\tthis.$paste_btn = this.page\n\t\t\t.add_button(__(\"Paste\"), () =>\n\t\t\t\tfrappe.file_manager.paste(this.current_folder)\n\t\t\t)\n\t\t\t.hide();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = this.meta.fields\n\t\t\t.filter(\n\t\t\t\tdf => frappe.model.is_value_type(df.fieldtype) && !df.hidden\n\t\t\t)\n\t\t\t.map(df => df.fieldname)\n\t\t\t.concat([\"name\", \"modified\", \"creation\"]);\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\n\t\tthis.data = this.data.map(d => this.prepare_datum(d));\n\n\t\t// Bring folders to the top\n\t\tconst { sort_by } = this.sort_selector;\n\t\tif (sort_by === \"file_name\") {\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tif (a.is_folder && !b.is_folder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!a.is_folder && b.is_folder) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_datum(d) {\n\t\tlet icon_class = \"\";\n\t\tlet type = \"\";\n\t\tif (d.is_folder) {\n\t\t\ticon_class = \"folder-normal\";\n\t\t\ttype = \"folder\";\n\t\t} else if (frappe.utils.is_image_file(d.file_name)) {\n\t\t\ticon_class = \"image\";\n\t\t\ttype = \"image\";\n\t\t} else {\n\t\t\ticon_class = \"file\";\n\t\t\ttype = \"file\";\n\t\t}\n\n\t\tlet title = d.file_name || d.file_url;\n\t\ttitle = title.slice(0, 60);\n\t\td._title = title;\n\t\td.icon_class = icon_class;\n\t\td._type = type;\n\n\t\td.subject_html = `\n\t\t\t${frappe.utils.icon(icon_class)}\n\t\t\t<span>${title}</span>\n\t\t\t${d.is_private ? '<i class=\"fa fa-lock fa-fw text-warning\"></i>' : \"\"}\n\t\t`;\n\t\treturn d;\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\t\"File\",\n\t\t\t\"grid_view\",\n\t\t\tfrappe.views.FileView.grid_view\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_folder: this.current_folder\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.$result.empty().removeClass(\"file-grid-view\");\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render();\n\t\t\tthis.render_header();\n\t\t}\n\t}\n\n\tafter_render() {}\n\n\trender_list() {\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render_list();\n\t\t}\n\t}\n\n\trender_grid_view() {\n\t\tlet html = this.data\n\t\t\t.map(d => {\n\t\t\t\tconst icon_class = d.icon_class + \"-large\";\n\t\t\t\tlet file_body_html =\n\t\t\t\t\td._type == \"image\"\n\t\t\t\t\t\t? `<div class=\"file-image\"><img src=\"${\n\t\t\t\t\t\t\td.file_url\n\t\t\t\t\t\t}\" alt=\"${d.file_name}\"></div>`\n\t\t\t\t\t\t: frappe.utils.icon(icon_class, {\n\t\t\t\t\t\t\twidth: \"40px\",\n\t\t\t\t\t\t\theight: \"45px\"\n\t\t\t\t\t\t});\n\t\t\t\tconst name = escape(d.name);\n\t\t\t\tconst draggable = d.type == \"Folder\" ? false : true;\n\t\t\t\treturn `\n\t\t\t\t<a href=\"${this.get_route_url(d)}\"\n\t\t\t\t\tdraggable=\"${draggable}\" class=\"file-wrapper ellipsis\" data-name=\"${name}\">\n\t\t\t\t\t<div class=\"file-header\">\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\" type=\"checkbox\" data-name=\"${name}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-body\">\n\t\t\t\t\t\t${file_body_html}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-footer\">\n\t\t\t\t\t\t<div class=\"file-title ellipsis\">${d._title}</div>\n\t\t\t\t\t\t<div class=\"file-creation\">${this.get_creation_date(d)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tthis.$result.addClass(\"file-grid-view\");\n\t\tthis.$result.empty().html(\n\t\t\t`<div class=\"file-grid\">\n\t\t\t\t${html}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tget_breadcrumbs_html() {\n\t\tconst route = frappe.router.parse();\n\t\tconst folders = route.slice(2);\n\n\t\treturn folders\n\t\t\t.map((folder, i) => {\n\t\t\t\tif (i === folders.length - 1) {\n\t\t\t\t\treturn `<span>${folder}</span>`;\n\t\t\t\t}\n\t\t\t\tconst route = folders.reduce((acc, curr, j) => {\n\t\t\t\t\tif (j <= i) {\n\t\t\t\t\t\tacc += \"/\" + curr;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, \"/app/file/view\");\n\n\t\t\t\treturn `<a href=\"${route}\">${folder}</a>`;\n\t\t\t})\n\t\t\t.join(\"&nbsp;/&nbsp;\");\n\t}\n\n\tget_header_html() {\n\t\tconst breadcrumbs_html = this.get_breadcrumbs_html();\n\n\t\tlet header_selector_html = !frappe.views.FileView.grid_view\n\t\t\t? `<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\n\t\t\t\t\"Select All\"\n\t\t\t)}\">`\n\t\t\t: \"\";\n\n\t\tlet header_columns_html = !frappe.views.FileView.grid_view\n\t\t\t? `<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Size\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Created\")}</span>\n\t\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\tlet subject_html = `\n\t\t\t<div class=\"list-row-col list-subject level\">\n\t\t\t\t${header_selector_html}\n\t\t\t\t<span class=\"level-item\">${breadcrumbs_html}</span>\n\t\t\t</div>\n\t\t\t${header_columns_html}\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\tsubject_html,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_route_url(file) {\n\t\treturn file.is_folder\n\t\t\t? \"/app/List/File/\" + file.name\n\t\t\t: this.get_form_link(file);\n\t}\n\n\tget_creation_date(file) {\n\t\tconst [date] = file.creation.split(\" \");\n\t\tlet created_on;\n\t\tif (date === frappe.datetime.now_date()) {\n\t\t\tcreated_on = comment_when(file.creation);\n\t\t} else {\n\t\t\tcreated_on = frappe.datetime.str_to_user(date);\n\t\t}\n\t\treturn created_on;\n\t}\n\n\tget_left_html(file) {\n\t\tfile = this.prepare_datum(file);\n\t\tconst file_size = file.file_size\n\t\t\t? frappe.form.formatters.FileSize(file.file_size)\n\t\t\t: \"\";\n\t\tconst route_url = this.get_route_url(file);\n\n\t\treturn `\n\t\t\t<div class=\"list-row-col ellipsis list-subject level\">\n\t\t\t\t<span class=\"level-item file-select\">\n\t\t\t\t\t<input class=\"list-row-checkbox\"\n\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${file.name}\">\n\t\t\t\t</span>\n\t\t\t\t<span class=\"level-item  ellipsis\" title=\"${file.file_name}\">\n\t\t\t\t\t<a class=\"ellipsis\" href=\"${route_url}\" title=\"${file.file_name}\">\n\t\t\t\t\t\t${file.subject_html}\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file_size}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${this.get_creation_date(file)}</span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_right_html(file) {\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${comment_when(file.modified)}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tsetup_events() {\n\t\tsuper.setup_events();\n\t\tthis.setup_drag_events();\n\t}\n\n\tsetup_drag_events() {\n\t\tthis.$result.on(\"dragstart\", \".files .file-wrapper\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.originalEvent.dataTransfer.setData(\n\t\t\t\t\"Text\",\n\t\t\t\t$(e.currentTarget).attr(\"data-name\")\n\t\t\t);\n\t\t\te.target.style.opacity = \"0.4\";\n\t\t\tfrappe.file_manager.cut(\n\t\t\t\t[{ name: $(e.currentTarget).attr(\"data-name\") }],\n\t\t\t\tthis.current_folder\n\t\t\t);\n\t\t});\n\n\t\tthis.$result.on(\n\t\t\t\"dragover\",\n\t\t\te => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis.$result.on(\"dragend\", \".files .file-wrapper\", e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.target.style.opacity = \"1\";\n\t\t});\n\n\t\tthis.$result.on(\"drop\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconst $el = $(e.target).parents(\".file-wrapper\");\n\n\t\t\tlet dataTransfer = e.originalEvent.dataTransfer;\n\t\t\tif (!dataTransfer) return;\n\n\t\t\tif (dataTransfer.files && dataTransfer.files.length > 0) {\n\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\tfiles: dataTransfer.files,\n\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t});\n\t\t\t} else if (dataTransfer.getData(\"Text\")) {\n\t\t\t\tif ($el.parents(\".folders\").length !== 0) {\n\t\t\t\t\tconst file_name = dataTransfer.getData(\"Text\");\n\t\t\t\t\tconst folder_name = decodeURIComponent(\n\t\t\t\t\t\t$el.attr(\"data-name\")\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.file_manager.paste(folder_name);\n\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t`File ${file_name} moved to ${folder_name}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ton_row_checked() {\n\t\tsuper.on_row_checked();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ttoggle_cut_paste_buttons() {\n\t\tconst hide_paste_btn =\n\t\t\t!frappe.file_manager.can_paste ||\n\t\t\tfrappe.file_manager.old_folder === this.current_folder;\n\t\tconst hide_cut_btn = !(this.$checks && this.$checks.length > 0);\n\n\t\tthis.$paste_btn.toggle(!hide_paste_btn);\n\t\tthis.$cut_button.toggle(!hide_cut_btn);\n\t}\n};\n\nfrappe.views.FileView.grid_view =\n\tfrappe.get_user_settings(\"File\").grid_view || false;\n\nfunction redirect_to_home_if_invalid_route() {\n\tconst route = frappe.get_route();\n\tif (route[2] === \"List\") {\n\t\t// if the user somehow redirects to List/File/List\n\t\t// redirect back to Home\n\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n","// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nfrappe.provide('frappe.views');\nfrappe.provide(\"frappe.interaction_settings\");\n\nfrappe.views.InteractionComposer = class InteractionComposer {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: (me.title || me.subject || __(\"New Activity\")),\n\t\t\tno_submit_on_enter: true,\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __('Create'),\n\t\t\tprimary_action: function() {\n\t\t\t\tme.create_action();\n\t\t\t}\n\t\t});\n\n\t\t$(document).on(\"upload_complete\", function(event, attachment) {\n\t\t\tif(me.dialog.display) {\n\t\t\t\tlet wrapper = $(me.dialog.fields_dict.select_attachments.wrapper);\n\n\t\t\t\t// find already checked items\n\t\t\t\tlet checked_items = wrapper.find('[data-file-name]:checked').map(function() {\n\t\t\t\t\treturn $(this).attr(\"data-file-name\");\n\t\t\t\t});\n\n\t\t\t\t// reset attachment list\n\t\t\t\tme.render_attach();\n\n\t\t\t\t// check latest added\n\t\t\t\tchecked_items.push(attachment.name);\n\n\t\t\t\t$.each(checked_items, function(i, filename) {\n\t\t\t\t\twrapper.find('[data-file-name=\"'+ filename +'\"]').prop(\"checked\", true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tme.prepare();\n\t\tme.dialog.show();\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\t\tlet interaction_docs = Object.keys(get_doc_mappings());\n\n\t\tlet fields = [\n\t\t\t{label:__(\"Reference\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"interaction_type\", options: interaction_docs,\n\t\t\t\treqd: 1,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet values = me.get_values();\n\t\t\t\t\tme.get_fields().forEach(field => {\n\t\t\t\t\t\tif (field.fieldname != \"interaction_type\") {\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"reqd\", 0);\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"hidden\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tme.set_reqd_hidden_fields(values);\n\t\t\t\t\tme.get_event_categories();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{label:__(\"Category\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"category\", options: \"\", hidden: 1},\n\t\t\t{label:__(\"Public\"), fieldtype:\"Check\",\n\t\t\t\tfieldname:\"public\", default: \"1\"},\n\t\t\t{fieldtype: \"Column Break\"},\n\t\t\t{label:__(\"Date\"), fieldtype:\"Datetime\",\n\t\t\t\tfieldname:\"due_date\"},\n\t\t\t{label:__(\"Assigned To\"), fieldtype:\"Link\",\n\t\t\t\tfieldname:\"assigned_to\", options:\"User\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Summary\"), fieldtype:\"Data\",\n\t\t\t\tfieldname:\"summary\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{fieldtype:\"Text Editor\", fieldname:\"description\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Select Attachments\"), fieldtype:\"HTML\",\n\t\t\t\tfieldname:\"select_attachments\"}\n\t\t];\n\n\t\treturn fields;\n\n\t}\n\n\tget_event_categories() {\n\t\tlet me = this;\n\t\tfrappe.model.with_doctype('Event', () => {\n\t\t\tlet categories = frappe.meta.get_docfield(\"Event\", \"event_category\").options.split(\"\\n\");\n\t\t\tme.dialog.get_input(\"category\").empty().add_options(categories);\n\t\t});\n\t}\n\n\tprepare() {\n\t\tthis.setup_attach();\n\t}\n\n\tset_reqd_hidden_fields(values) {\n\t\tlet me = this;\n\t\tif (values&&\"interaction_type\" in values) {\n\t\t\tlet doc_mapping = get_doc_mappings();\n\t\t\tdoc_mapping[values.interaction_type][\"reqd_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'reqd', 1);\n\t\t\t});\n\n\t\t\tdoc_mapping[values.interaction_type][\"hidden_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'hidden', 1);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_attach() {\n\t\tvar fields = this.dialog.fields_dict;\n\t\tvar attach = $(fields.select_attachments.wrapper);\n\n\t\tif (!this.attachments) {\n\t\t\tthis.attachments = [];\n\t\t}\n\n\t\tlet args = {\n\t\t\tfolder: 'Home/Attachments',\n\t\t\ton_success: attachment => this.attachments.push(attachment)\n\t\t};\n\n\t\tif (this.frm) {\n\t\t\targs = {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tdocname: this.frm.docname,\n\t\t\t\tfolder: 'Home/Attachments',\n\t\t\t\ton_success: attachment => {\n\t\t\t\t\tthis.frm.attachments.attachment_uploaded(attachment);\n\t\t\t\t\tthis.render_attach();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t$(\"<h6 class='text-muted add-attachment' style='margin-top: 12px; cursor:pointer;'>\"\n\t\t\t+__(\"Select Attachments\")+\"</h6><div class='attach-list'></div>\\\n\t\t\t<p class='add-more-attachments'>\\\n\t\t\t<a class='text-muted small'><i class='octicon octicon-plus' style='font-size: 12px'></i> \"\n\t\t\t+__(\"Add Attachment\")+\"</a></p>\").appendTo(attach.empty());\n\t\tattach\n\t\t\t.find(\".add-more-attachments a\")\n\t\t\t.on('click',() => new frappe.ui.FileUploader(args));\n\t\tthis.render_attach();\n\t}\n\n\trender_attach(){\n\t\tlet fields = this.dialog.fields_dict;\n\t\tlet attach = $(fields.select_attachments.wrapper).find(\".attach-list\").empty();\n\n\t\tlet files = [];\n\t\tif (this.attachments && this.attachments.length) {\n\t\t\tfiles = files.concat(this.attachments);\n\t\t}\n\t\tif (cur_frm) {\n\t\t\tfiles = files.concat(cur_frm.get_files());\n\t\t}\n\n\t\tif(files.length) {\n\t\t\t$.each(files, function(i, f) {\n\t\t\t\tif (!f.file_name) return;\n\t\t\t\tf.file_url = frappe.urllib.get_full_url(f.file_url);\n\n\t\t\t\t$(repl('<p class=\"checkbox\">'\n\t\t\t\t\t+\t'<label><span><input type=\"checkbox\" data-file-name=\"%(name)s\"></input></span>'\n\t\t\t\t\t+\t\t'<span class=\"small\">%(file_name)s</span>'\n\t\t\t\t\t+\t' <a href=\"%(file_url)s\" target=\"_blank\" class=\"text-muted small\">'\n\t\t\t\t\t+\t\t'<i class=\"fa fa-share\" style=\"vertical-align: middle; margin-left: 3px;\"></i>'\n\t\t\t\t\t+ '</label></p>', f))\n\t\t\t\t\t.appendTo(attach);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_action() {\n\t\tlet me = this;\n\t\tlet btn = me.dialog.get_primary_btn();\n\n\t\tlet form_values = this.get_values();\n\t\tif(!form_values) return;\n\n\t\tlet selected_attachments =\n\t\t\t$.map($(me.dialog.wrapper).find(\"[data-file-name]:checked\"), function(element){\n\t\t\t\treturn $(element).attr(\"data-file-name\");\n\t\t\t});\n\n\t\tme.create_interaction(btn, form_values, selected_attachments);\n\t}\n\n\tget_values() {\n\t\tlet me = this;\n\t\tlet values = this.dialog.get_values(true);\n\t\tif (values) {\n\t\t\tvalues[\"reference_doctype\"] = me.frm.doc.doctype;\n\t\t\tvalues[\"reference_document\"] = me.frm.doc.name;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tcreate_interaction(btn, form_values, selected_attachments) {\n\t\tlet me = this;\n\t\tme.dialog.hide();\n\n\t\tlet field_map = get_doc_mappings();\n\t\tlet interaction_values = {};\n\t\tObject.keys(form_values).forEach(value => {\n\t\t\tinteraction_values[field_map[form_values.interaction_type][\"field_map\"][value]] = form_values[value];\n\t\t});\n\n\t\tif (\"event_type\" in interaction_values){\n\t\t\tinteraction_values[\"event_type\"] = (form_values.public == 1) ? \"Public\" : \"Private\";\n\t\t}\n\t\tif (interaction_values[\"doctype\"] == \"Event\") {\n\t\t\tinteraction_values[\"event_participants\"] = [{\"reference_doctype\": form_values.reference_doctype,\n\t\t\t\t\"reference_docname\": form_values.reference_document}];\n\t\t}\n\t\tif (!(\"owner\" in interaction_values)){\n\t\t\tinteraction_values[\"owner\"] = frappe.session.user;\n\t\t}\n\t\tif (!(\"assigned_by\" in interaction_values) && interaction_values[\"doctype\"] == \"ToDo\") {\n\t\t\tinteraction_values[\"assigned_by\"] = frappe.session.user;\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod:\"frappe.client.insert\",\n\t\t\targs: { doc: interaction_values},\n\t\t\tbtn: btn,\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"{0} created successfully\", [form_values.interaction_type]),\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t});\n\t\t\t\t\tif (\"assigned_to\" in form_values) {\n\t\t\t\t\t\tme.assign_document(r.message, form_values[\"assigned_to\"]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selected_attachments) {\n\t\t\t\t\t\tme.add_attachments(r.message, selected_attachments);\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm) {\n\t\t\t\t\t\tcur_frm.reload_doc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(__(\"There were errors while creating the document. Please try again.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tassign_document(doc, assignee) {\n\t\tif (doc.doctype != \"ToDo\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod:'frappe.desk.form.assign_to.add',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: doc.doctype,\n\t\t\t\t\tname: doc.name,\n\t\t\t\t\tassign_to: JSON.stringify([assignee]),\n\t\t\t\t},\n\t\t\t\tcallback:function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [assignee]),\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\tadd_attachments(doc, attachments) {\n\t\tfrappe.call({\n\t\t\tmethod:'frappe.utils.file_manager.add_attachments',\n\t\t\targs: {\n\t\t\t\tdoctype: doc.doctype,\n\t\t\t\tname: doc.name,\n\t\t\t\tattachments: JSON.stringify(attachments)\n\t\t\t},\n\t\t\tcallback:function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"The attachments could not be correctly linked to the new document\"),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n};\n\nfunction get_doc_mappings() {\n\tconst doc_map = {\n\t\t\"Event\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"summary\": \"subject\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"category\": \"event_category\",\n\t\t\t\t\"due_date\": \"starts_on\",\n\t\t\t\t\"public\": \"event_type\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"summary\", \"due_date\"],\n\t\t\t\"hidden_fields\": []\n\t\t} ,\n\t\t\"ToDo\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"due_date\": \"date\",\n\t\t\t\t\"reference_doctype\": \"reference_type\",\n\t\t\t\t\"reference_document\": \"reference_name\",\n\t\t\t\t\"assigned_to\": \"owner\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"description\"],\n\t\t\t\"hidden_fields\": [\"public\", \"category\"]\n\t\t}\n\t};\n\n\treturn doc_map;\n}\n","import KanbanSettings from \"./kanban_settings\";\n\nfrappe.provide('frappe.views');\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Kanban'] || {};\n\t\t\tif (!user_settings.last_kanban_board) {\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('Missing parameter Kanban Board Name')\n\t\t\t\t});\n\t\t\t\tfrappe.set_route('List', doctype, 'List');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\troute.push(user_settings.last_kanban_board);\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget view_name() {\n\t\treturn 'Kanban';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.board_name = frappe.get_route()[3];\n\t\t\t\tthis.page_title = __(this.board_name);\n\t\t\t\tthis.card_meta = this.get_card_meta();\n\t\t\t\tthis.page_length = 0;\n\n\t\t\t\tthis.menu_items.push({\n\t\t\t\t\tlabel: __('Save filters'),\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tthis.save_kanban_board_filters();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn this.get_board();\n\t\t\t});\n\t}\n\n\tsetup_paging_area() {\n\t\t// pass\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t}\n\n\tget_board() {\n\t\treturn frappe.db.get_doc('Kanban Board', this.board_name)\n\t\t\t.then(board => {\n\t\t\t\tthis.board = board;\n\t\t\t\tthis.board.filters_array = JSON.parse(this.board.filters || '[]');\n\t\t\t\tthis.board.fields = JSON.parse(this.board.fields || '[]');\n\t\t\t\tthis.filters = this.board.filters_array;\n\t\t\t});\n\t}\n\n\tbefore_refresh() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_card_layout = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.board.columns.length > 5) {\n\t\t\tthis.page.container.addClass('full-width');\n\t\t}\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tsuper.set_fields();\n\t\tthis._add_field(this.card_meta.title_field);\n\t}\n\n\tbefore_render() {\n\t\tfrappe.model.user_settings.save(this.doctype, 'last_view', this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_kanban_board: this.board_name\n\t\t});\n\t}\n\n\trender_list() {\n\n\t}\n\n\ton_filter_change() {\n\t\tif (JSON.stringify(this.board.filters_array) !== JSON.stringify(this.filter_area.get())) {\n\t\t\tthis.page.set_indicator(__('Not Saved'), 'orange');\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_kanban_board_filters() {\n\t\tconst filters = this.filter_area.get();\n\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.save_filters',\n\t\t\targs: {\n\t\t\t\tboard_name: this.board_name,\n\t\t\t\tfilters: filters\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tif (r.exc) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('There was an error saving filters')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfrappe.show_alert({\n\t\t\t\tindicator: 'green',\n\t\t\t\tmessage: __('Filters saved')\n\t\t\t});\n\n\t\t\tthis.board.filters_array = filters;\n\t\t\tthis.on_filter_change();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tthis.fields.push([this.board.field_name, this.board.reference_doctype]);\n\t\treturn super.get_fields();\n\t}\n\n\trender() {\n\t\tconst board_name = this.board_name;\n\t\tif (this.kanban && board_name === this.kanban.board_name) {\n\t\t\tthis.kanban.update(this.data);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.kanban = new frappe.views.KanbanBoard({\n\t\t\tdoctype: this.doctype,\n\t\t\tboard: this.board,\n\t\t\tboard_name: board_name,\n\t\t\tcards: this.data,\n\t\t\tcard_meta: this.card_meta,\n\t\t\twrapper: this.$result,\n\t\t\tcur_list: this,\n\t\t\tuser_settings: this.view_user_settings\n\t\t});\n\t}\n\n\tget_card_meta() {\n\t\tvar meta = frappe.get_meta(this.doctype);\n\t\tvar doc = frappe.model.get_new_doc(this.doctype);\n\t\tvar title_field = null;\n\t\tvar quick_entry = false;\n\n\t\tif (this.meta.title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, this.meta.title_field);\n\t\t}\n\n\t\tthis.meta.fields.forEach((df) => {\n\t\t\tconst is_valid_field =\n\t\t\t\tin_list(['Data', 'Text', 'Small Text', 'Text Editor'], df.fieldtype)\n\t\t\t\t&& !df.hidden;\n\n\t\t\tif (is_valid_field && !title_field) {\n\t\t\t\t// can be mapped to textarea\n\t\t\t\ttitle_field = df;\n\t\t\t}\n\t\t});\n\n\t\t// quick entry\n\t\tvar mandatory = meta.fields.filter((df) => df.reqd && !doc[df.fieldname]);\n\n\t\tif (mandatory.some(df => frappe.model.table_fields.includes(df.fieldtype)) || mandatory.length > 1) {\n\t\t\tquick_entry = true;\n\t\t}\n\n\t\tif (!title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, 'name');\n\t\t}\n\n\t\treturn {\n\t\t\tquick_entry: quick_entry,\n\t\t\ttitle_field: title_field\n\t\t};\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"Kanban Settings\", null, \"Button in kanban view menu\"),\n\t\t\taction: () => this.show_kanban_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_kanban_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew KanbanSettings({\n\t\t\t\tkanbanview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.board,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t'assets/frappe/js/lib/fluxify.min.js',\n\t\t\t'assets/frappe/js/frappe/views/kanban/kanban_board.js'\n\t\t];\n\t}\n};\n\n\nfrappe.views.KanbanView.get_kanbans = function (doctype) {\n\tlet kanbans = [];\n\n\treturn get_kanban_boards()\n\t\t.then((kanban_boards) => {\n\t\t\tif (kanban_boards) {\n\t\t\t\tkanban_boards.forEach(board => {\n\t\t\t\t\tlet route = `/app/${frappe.router.slug(board.reference_doctype)}/view/kanban/${board.name}`;\n\t\t\t\t\tkanbans.push({ name: board.name, route: route });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn kanbans;\n\t\t});\n\n\tfunction get_kanban_boards() {\n\t\treturn frappe.call('frappe.desk.doctype.kanban_board.kanban_board.get_kanban_boards', { doctype })\n\t\t\t.then(r => r.message);\n\t}\n};\n\n\nfrappe.views.KanbanView.show_kanban_dialog = function (doctype) {\n\tlet dialog = new_kanban_dialog();\n\tdialog.show();\n\n\tfunction make_kanban_board(board_name, field_name, project) {\n\t\treturn frappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.quick_kanban_board',\n\t\t\targs: {\n\t\t\t\tdoctype,\n\t\t\t\tboard_name,\n\t\t\t\tfield_name,\n\t\t\t\tproject\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tvar kb = r.message;\n\t\t\t\tif (kb.filters) {\n\t\t\t\t\tfrappe.provide('frappe.kanban_filters');\n\t\t\t\t\tfrappe.kanban_filters[kb.kanban_board_name] = kb.filters;\n\t\t\t\t}\n\t\t\t\tfrappe.set_route('List', doctype, 'Kanban', kb.kanban_board_name);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction new_kanban_dialog() {\n\t\t/* Kanban dialog can show either \"Save\" or \"Customize Form\" option depending if any Select fields exist in the DocType for Kanban creation\n\t\t */\n\n\t\tconst select_fields = frappe.get_meta(doctype).fields.filter((df) => {\n\t\t\treturn df.fieldtype === \"Select\" && df.fieldname !== \"kanban_column\";\n\t\t});\n\t\tconst dialog_fields = get_fields_for_dialog(select_fields);\n\t\tconst to_save = select_fields.length > 0;\n\t\tconst primary_action_label = to_save ? __(\"Save\") : __(\"Customize Form\");\n\t\tconst dialog_title = to_save ? __(\"New Kanban Board\") : __(\"No Select Field Found\");\n\n\t\tlet primary_action = () => {\n\t\t\tif (to_save) {\n\t\t\t\tconst values = dialog.get_values();\n\t\t\t\tmake_kanban_board(values.board_name, values.field_name, values.project).then(\n\t\t\t\t\t() => dialog.hide(),\n\t\t\t\t\t(err) => frappe.msgprint(err)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfrappe.set_route(\"Form\", \"Customize Form\", {\"doc_type\": doctype});\n\t\t\t}\n\t\t};\n\n\t\treturn new frappe.ui.Dialog({\n\t\t\ttitle: dialog_title,\n\t\t\tfields: dialog_fields,\n\t\t\tprimary_action_label,\n\t\t\tprimary_action\n\t\t});\n\t}\n\n\n\tfunction get_fields_for_dialog(select_fields) {\n\t\tif (!select_fields.length) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\toptions: `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"text-medium\">\n\t\t\t\t\t\t${__(\n\t\t\t\t\t\t\t'No fields found that can be used as a Kanban Column. Use the Customize Form to add a Custom Field of type \"Select\".'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tfieldname: \"board_name\",\n\t\t\t\tlabel: __(\"Kanban Board Name\"),\n\t\t\t\treqd: 1,\n\t\t\t\tdescription: [\"Note\", \"ToDo\"].includes(doctype)\n\t\t\t\t\t? __(\"This Kanban Board will be private\")\n\t\t\t\t\t: \"\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"field_name\",\n\t\t\t\tlabel: __(\"Columns based on\"),\n\t\t\t\toptions: select_fields.map((df) => ({ label: df.label, value: df.fieldname })),\n\t\t\t\tdefault: select_fields[0],\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t];\n\n\t\tif (doctype === 'Task') {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tfieldname: 'project',\n\t\t\t\tlabel: __('Project'),\n\t\t\t\toptions: 'Project'\n\t\t\t});\n\t\t}\n\n\t\treturn fields;\n\t}\n};\n","/**\n * frappe.views.InboxView\n */\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.InboxView = class InboxView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (!route[3] && frappe.boot.email_accounts.length) {\n\t\t\tlet email_account;\n\t\t\tif (frappe.boot.email_accounts[0].email_id == \"All Accounts\") {\n\t\t\t\temail_account = \"All Accounts\";\n\t\t\t} else {\n\t\t\t\temail_account = frappe.boot.email_accounts[0].email_account;\n\t\t\t}\n\t\t\tfrappe.set_route(\"List\", \"Communication\", \"Inbox\", email_account);\n\t\t\treturn true;\n\t\t} else if (!route[3] || (route[3] !== \"All Accounts\" && !is_valid(route[3]))) {\n\t\t\tfrappe.throw(__('No email account associated with the User. Please add an account under User > Email Inbox.'));\n\t\t}\n\t\treturn false;\n\n\t\tfunction is_valid(email_account) {\n\t\t\treturn frappe.boot.email_accounts.find(d => d.email_account === email_account);\n\t\t}\n\t}\n\n\tget view_name() {\n\t\treturn 'Inbox';\n\t}\n\n\tshow() {\n\t\tsuper.show();\n\t\t// save email account in user_settings\n\t\tthis.save_view_user_settings({\n\t\t\tlast_email_account: this.current_email_account\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || 'communication_date';\n\t\tthis.sort_order = this.view_user_settings.sort_order || 'desc';\n\n\t\tthis.email_account = frappe.get_route()[3];\n\t\tthis.page_title = this.email_account;\n\t\tthis.filters = this.get_inbox_filters();\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\t\tthis.columns.push({\n\t\t\ttype: 'Subject',\n\t\t\tdf: {\n\t\t\t\tlabel: __('Subject'),\n\t\t\t\tfieldname: 'subject'\n\t\t\t}\n\t\t});\n\t\tthis.columns.push({\n\t\t\ttype: 'Field',\n\t\t\tdf: {\n\t\t\t\tlabel: this.is_sent_emails ? __(\"To\") : __(\"From\"),\n\t\t\t\tfieldname: this.is_sent_emails ? 'recipients' : 'sender'\n\t\t\t}\n\t\t});\n\t}\n\n\tget_seen_class(doc) {\n\t\tconst seen =\n\t\t\tBoolean(doc.seen) || JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t\t? ''\n\t\t\t\t: 'bold';\n\t\treturn seen;\n\t}\n\n\tget is_sent_emails() {\n\t\tconst f = this.filter_area.get()\n\t\t\t.find(filter => filter[1] === 'sent_or_received');\n\t\treturn f && f[3] === 'Sent';\n\t}\n\n\trender_header() {\n\t\tthis.$result.find('.list-row-head').remove();\n\t\tthis.$result.prepend(this.get_header_html());\n\t}\n\n\trender() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_list();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\tget_meta_html(email) {\n\t\tconst attachment = email.has_attachment ?\n\t\t\t`<span class=\"fa fa-paperclip fa-large\" title=\"${__('Has Attachments')}\"></span>` : '';\n\n\t\tlet link = \"\";\n\t\tif (email.reference_doctype && email.reference_doctype !== this.doctype) {\n\t\t\tlink = `<a class=\"text-muted grey\"\n\t\t\t\thref=\"${frappe.utils.get_form_link(email.reference_doctype, email.reference_name)}\"\n\t\t\t\ttitle=\"${__('Linked with {0}', [email.reference_doctype])}\">\n\t\t\t\t<i class=\"fa fa-link fa-large\"></i>\n\t\t\t</a>`;\n\t\t}\n\n\t\tconst communication_date = comment_when(email.communication_date, true);\n\t\tconst status =\n\t\t\temail.status == \"Closed\" ? `<span class=\"fa fa-check fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\temail.status == \"Replied\" ? `<span class=\"fa fa-mail-reply fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\t\t\"\";\n\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${link}\n\t\t\t\t${attachment}\n\t\t\t\t${status}\n\t\t\t\t${communication_date}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_inbox_filters() {\n\t\tvar email_account = this.email_account;\n\t\tvar default_filters = [\n\t\t\t[\"Communication\", \"communication_type\", \"=\", \"Communication\", true],\n\t\t\t[\"Communication\", \"communication_medium\", \"=\", \"Email\", true],\n\t\t];\n\t\tvar filters = [];\n\t\tif (email_account === \"Sent\") {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Sent\", true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t} else if (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"email_status\", \"=\", email_account, true],\n\t\t\t\t[\"Communication\", \"email_account\", \"in\", frappe.boot.all_accounts, true]\n\t\t\t]);\n\t\t} else {\n\t\t\tvar op = \"=\";\n\t\t\tif (email_account == \"All Accounts\") {\n\t\t\t\top = \"in\";\n\t\t\t\temail_account = frappe.boot.all_accounts;\n\t\t\t}\n\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Received\", true],\n\t\t\t\t[\"Communication\", \"status\", \"=\", \"Open\", true],\n\t\t\t\t[\"Communication\", \"email_account\", op, email_account, true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tget_no_result_message() {\n\t\tvar email_account = this.email_account;\n\t\tvar args;\n\t\tif (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\treturn __(\"No {0} mail\", [email_account]);\n\t\t} else if (!email_account && !frappe.boot.email_accounts.length) {\n\t\t\t// email account is not configured\n\t\t\targs = {\n\t\t\t\tdoctype: \"Email Account\",\n\t\t\t\tmsg: __(\"No Email Account\"),\n\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t};\n\t\t} else {\n\t\t\t// no sent mail\n\t\t\targs = {\n\t\t\t\tdoctype: \"Communication\",\n\t\t\t\tmsg: __(\"No Emails\"),\n\t\t\t\tlabel: __(\"Compose Email\")\n\t\t\t};\n\t\t}\n\n\t\tconst html = frappe.model.can_create(args.doctype) ?\n\t\t\t`<p>${args.msg}</p>\n\t\t\t<p>\n\t\t\t\t<button class=\"btn btn-primary btn-sm btn-new-doc\">\n\t\t\t\t\t${args.label}\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t` :\n\t\t\t`<p>${ __(\"No Email Accounts Assigned\") }</p>`;\n\n\t\treturn `\n\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tmake_new_doc() {\n\t\tif (!this.email_account && !frappe.boot.email_accounts.length) {\n\t\t\tfrappe.route_options = {\n\t\t\t\t'email_id': frappe.session.user_email\n\t\t\t};\n\t\t\tfrappe.new_doc('Email Account');\n\t\t} else {\n\t\t\tnew frappe.views.CommunicationComposer();\n\t\t}\n\t}\n};\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.treeview_settings\");\nfrappe.provide('frappe.views.trees');\nwindow.cur_tree = null;\n\nfrappe.views.TreeFactory = class TreeFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tfrappe.model.with_doctype(route[1], function() {\n\t\t\tvar options = {\n\t\t\t\tdoctype: route[1],\n\t\t\t\tmeta: frappe.get_meta(route[1])\n\t\t\t};\n\n\t\t\tif (!frappe.treeview_settings[route[1]] && !frappe.meta.get_docfield(route[1], \"is_group\")) {\n\t\t\t\tfrappe.msgprint(__(\"Tree view is not available for {0}\", [route[1]] ));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$.extend(options, frappe.treeview_settings[route[1]] || {});\n\t\t\tfrappe.views.trees[options.doctype] = new frappe.views.TreeView(options);\n\t\t});\n\t}\n\n\ton_show() {\n\t\t/**\n\t\t * When the the treeview is visited using the previous button,\n\t\t * the framework just show the treeview element that is hidden.\n\t\t * Due to this, the data of the tree can be old.\n\t\t * To deal with this, the tree will be refreshed whenever the\n\t\t * treeview is visible.\n\t\t */\n\t\tlet route = frappe.get_route();\n\t\tlet treeview = frappe.views.trees[route[1]];\n\t\ttreeview && treeview.make_tree();\n\t}\n}\n\nfrappe.views.TreeView = Class.extend({\n\tinit: function(opts) {\n\t\tvar me = this;\n\n\t\tthis.opts = {};\n\t\tthis.opts.get_tree_root = true;\n\t\tthis.opts.show_expand_all = true;\n\t\t$.extend(this.opts, opts);\n\t\tthis.doctype = opts.doctype;\n\t\tthis.args = {doctype: me.doctype};\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.get_tree_nodes =  me.opts.get_tree_nodes || \"frappe.desk.treeview.get_children\";\n\n\t\tthis.get_permissions();\n\t\tthis.make_page();\n\t\tthis.make_filters();\n\t\tthis.root_value = null;\n\n\t\tif (me.opts.get_tree_root) {\n\t\t\tthis.get_root();\n\t\t}\n\n\t\tthis.onload();\n\t\tthis.set_menu_item();\n\t\tthis.set_primary_action();\n\t},\n\tget_permissions: function(){\n\t\tthis.can_read = frappe.model.can_read(this.doctype);\n\t\tthis.can_create = frappe.boot.user.can_create.indexOf(this.doctype) !== -1 ||\n\t\t\t\t\tfrappe.boot.user.in_create.indexOf(this.doctype) !== -1;\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\t\tthis.can_delete = frappe.model.can_delete(this.doctype);\n\t},\n\tmake_page: function() {\n\t\tvar me = this;\n\t\tthis.parent = frappe.container.add_page(this.page_name);\n\t\tfrappe.ui.make_app_page({parent:this.parent, single_column:true});\n\n\t\tthis.page = this.parent.page;\n\t\tfrappe.container.change_to(this.page_name);\n\t\tfrappe.breadcrumbs.add(me.opts.breadcrumb || locals.DocType[me.doctype].module, me.doctype);\n\n\t\tthis.set_title();\n\n\t\tthis.page.main.css({\n\t\t\t\"min-height\": \"300px\",\n\t\t});\n\n\t\tthis.page.main.addClass('frappe-card');\n\n\t\tif(this.opts.show_expand_all) {\n\t\t\tthis.page.add_inner_button(__('Expand All'), function() {\n\t\t\t\tme.tree.load_children(me.tree.root_node, true);\n\t\t\t});\n\t\t}\n\n\t\tif(this.opts.view_template) {\n\t\t\tvar row = $('<div class=\"row\"><div>').appendTo(this.page.main);\n\t\t\tthis.body = $('<div class=\"col-sm-6 col-xs-12\"></div>').appendTo(row);\n\t\t\tthis.node_view = $('<div class=\"col-sm-6 hidden-xs\"></div>').appendTo(row);\n\t\t} else {\n\t\t\tthis.body = this.page.main;\n\t\t}\n\t},\n\tset_title: function() {\n\t\tthis.page.set_title(this.opts.title || __('{0} Tree', [__(this.doctype)]));\n\t},\n\tonload: function() {\n\t\tvar me = this;\n\t\tthis.opts.onload && this.opts.onload(me);\n\t},\n\tmake_filters: function() {\n\t\tvar me = this;\n\t\tfrappe.treeview_settings.filters = []\n\t\t$.each(this.opts.filters || [], function(i, filter) {\n\t\t\tif (frappe.route_options && frappe.route_options[filter.fieldname]) {\n\t\t\t\tfilter.default = frappe.route_options[filter.fieldname];\n\t\t\t}\n\n\t\t\tif (!filter.disable_onchange) {\n\t\t\t\tfilter.change = function() {\n\t\t\t\t\tfilter.onchange && filter.onchange();\n\t\t\t\t\tvar val = this.get_value();\n\t\t\t\t\tme.args[filter.fieldname] = val;\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tme.root_label = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = me.opts.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.set_title();\n\t\t\t\t\tme.make_tree();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tme.page.add_field(filter);\n\n\t\t\tif (filter.default) {\n\t\t\t\t$(\"[data-fieldname='\"+filter.fieldname+\"']\").trigger(\"change\");\n\t\t\t}\n\t\t});\n\t},\n\tget_root: function() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: me.get_tree_nodes,\n\t\t\targs: me.args,\n\t\t\tcallback: function(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tif (r.message.length > 1) {\n\t\t\t\t\t\tme.root_label = me.doctype;\n\t\t\t\t\t\tme.root_value = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = r.message[0][\"value\"];\n\t\t\t\t\t\tme.root_value = me.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tmake_tree: function() {\n\t\t$(this.parent).find(\".tree\").remove();\n\n\t\tvar use_label = this.args[this.opts.root_label] || this.root_label || this.opts.root_label;\n\t\tvar use_value = this.root_value;\n\t\tif (use_value == null) {\n\t\t\tuse_value = use_label;\n\t\t}\n\t\tthis.tree = new frappe.ui.Tree({\n\t\t\tparent: this.body,\n\t\t\tlabel: use_label,\n\t\t\troot_value: use_value,\n\t\t\texpandable: true,\n\n\t\t\targs: this.args,\n\t\t\tmethod: this.get_tree_nodes,\n\n\t\t\t// array of button props: {label, condition, click, btnClass}\n\t\t\ttoolbar: this.get_toolbar(),\n\n\t\t\tget_label: this.opts.get_label,\n\t\t\ton_render: this.opts.onrender,\n\t\t\ton_get_node: this.opts.on_get_node,\n\t\t\ton_click: (node) => { this.select_node(node); },\n\t\t});\n\n\t\tcur_tree = this.tree;\n\t\tthis.post_render();\n\t},\n\n\trebuild_tree: function() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\t\"method\": \"frappe.utils.nestedset.rebuild_tree\",\n\t\t\t\"args\": {\n\t\t\t\t'doctype': me.doctype,\n\t\t\t\t'parent_field': \"parent_\"+me.doctype.toLowerCase().replace(/ /g, '_'),\n\t\t\t},\n\t\t\t\"callback\": function(r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tpost_render: function() {\n\t\tvar me = this;\n\t\tme.opts.post_render && me.opts.post_render(me);\n\t},\n\n\tselect_node: function(node) {\n\t\tvar me = this;\n\t\tif(this.opts.click) {\n\t\t\tthis.opts.click(node);\n\t\t}\n\t\tif(this.opts.view_template) {\n\t\t\tthis.node_view.empty();\n\t\t\t$(frappe.render_template(me.opts.view_template,\n\t\t\t\t{data:node.data, doctype:me.doctype})).appendTo(this.node_view);\n\t\t}\n\t},\n\tget_toolbar: function() {\n\t\tvar me = this;\n\n\t\tvar toolbar = [\n\t\t\t{\n\t\t\t\tlabel:__(me.can_write? \"Edit\": \"Details\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn !node.is_root && me.can_read;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.set_route(\"Form\", me.doctype, node.label);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Add Child\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn me.can_create && node.expandable && !node.hide_add;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Rename\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\tlet allow_rename = true;\n\t\t\t\t\tif (me.doctype && frappe.get_meta(me.doctype)) {\n\t\t\t\t\t\tif(!frappe.get_meta(me.doctype).allow_rename) allow_rename = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !node.is_root && me.can_write && allow_rename;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.rename_doc(me.doctype, node.label, function(new_name) {\n\t\t\t\t\t\tnode.$tree_link.find('a').text(new_name);\n\t\t\t\t\t\tnode.label = new_name;\n\t\t\t\t\t\tme.tree.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Delete\"),\n\t\t\t\tcondition: function(node) { return !node.is_root && me.can_delete; },\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.delete_doc(me.doctype, node.label, function() {\n\t\t\t\t\t\tnode.parent.remove();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t}\n\t\t]\n\n\t\tif(this.opts.toolbar && this.opts.extend_toolbar) {\n\t\t\ttoolbar = toolbar.filter(btn => {\n\t\t\t\treturn !me.opts.toolbar.find(d => d[\"label\"]==btn[\"label\"]);\n\t\t\t});\n\t\t\treturn toolbar.concat(this.opts.toolbar)\n\t\t} else if (this.opts.toolbar && !this.opts.extend_toolbar) {\n\t\t\treturn this.opts.toolbar\n\t\t} else {\n\t\t\treturn toolbar\n\t\t}\n\t},\n\tnew_node: function() {\n\t\tvar me = this;\n\t\tvar node = me.tree.get_selected_node();\n\n\t\tif(!(node && node.expandable)) {\n\t\t\tfrappe.msgprint(__(\"Select a group node first.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepare_fields();\n\n\t\t// the dialog\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __('New {0}',[__(me.doctype)]),\n\t\t\tfields: me.fields\n\t\t});\n\n\t\tvar args = $.extend({}, me.args);\n\t\targs[\"parent_\"+me.doctype.toLowerCase().replace(/ /g,'_')] = me.args[\"parent\"];\n\n\t\td.set_value(\"is_group\", 0);\n\t\td.set_values(args);\n\n\t\t// create\n\t\td.set_primary_action(__(\"Create New\"), function() {\n\t\t\tvar btn = this;\n\t\t\tvar v = d.get_values();\n\t\t\tif(!v) return;\n\n\t\t\tv.parent = node.label;\n\t\t\tv.doctype = me.doctype;\n\n\t\t\tif(node.is_root){\n\t\t\t\tv['is_root'] = node.is_root;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tv['is_root'] = false;\n\t\t\t}\n\n\t\t\td.hide();\n\t\t\tfrappe.dom.freeze(__('Creating {0}', [me.doctype]));\n\n\t\t\t$.extend(args, v)\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: me.opts.add_tree_node || \"frappe.desk.treeview.add_node\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tme.tree.load_children(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\td.show();\n\t},\n\tprepare_fields: function(){\n\t\tvar me = this;\n\n\t\tthis.fields = [\n\t\t\t{fieldtype:'Check', fieldname:'is_group', label:__('Group Node'),\n\t\t\t\tdescription: __(\"Further nodes can be only created under 'Group' type nodes\")}\n\t\t]\n\n\t\tif (this.opts.fields) {\n\t\t\tthis.fields = this.opts.fields;\n\t\t}\n\n\t\tthis.ignore_fields = this.opts.ignore_fields || [];\n\n\t\tvar mandatory_fields = $.map(me.opts.meta.fields, function(d) {\n\t\t\treturn (d.reqd || d.bold && !d.read_only) ? d : null });\n\n\t\tvar opts_field_names = this.fields.map(function(d) {\n\t\t\treturn d.fieldname\n\t\t})\n\n\t\tmandatory_fields.map(function(d) {\n\t\t\tif($.inArray(d.fieldname, me.ignore_fields) === -1 && $.inArray(d.fieldname, opts_field_names) === -1) {\n\t\t\t\tme.fields.push(d)\n\t\t\t}\n\t\t})\n\t},\n\tprint_tree: function() {\n\t\tif(!frappe.model.can_print(this.doctype)) {\n\t\t\tfrappe.msgprint(__(\"You are not allowed to print this report\"));\n\t\t\treturn false;\n\t\t}\n\t\tvar tree = $(\".tree:visible\").html();\n\t\tvar me = this;\n\t\tfrappe.ui.get_print_settings(false, function(print_settings) {\n\t\t\tvar title =  __(me.docname || me.doctype);\n\t\t\tfrappe.render_tree({title: title, tree: tree, print_settings:print_settings});\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\treport_name: me.page_name,\n\t\t\t\t\tpage: tree,\n\t\t\t\t\tmethod: 'Print'\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\tset_primary_action: function() {\n\t\tvar me = this;\n\t\tif (!this.opts.disable_add_node && this.can_create) {\n\t\t\tme.page.set_primary_action(__(\"New\"), function() {\n\t\t\t\tme.new_node();\n\t\t\t}, \"add\");\n\t\t}\n\t},\n\tset_menu_item: function() {\n\t\tvar me = this;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __('View List'),\n\t\t\t\taction: function() {\n\t\t\t\t\tfrappe.set_route('List', me.doctype);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Print'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.print_tree();\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Refresh'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t];\n\n\t\tif (frappe.user.has_role('System Manager') &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"lft\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"rgt\")) {\n\t\t\tthis.menu_items.push(\n\t\t\t\t{\n\t\t\t\t\tlabel: __('Rebuild Tree'),\n\t\t\t\t\taction: function() {\n\t\t\t\t\t\tme.rebuild_tree();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (me.opts.menu_items) {\n\t\t\tme.menu_items.push.apply(me.menu_items, me.opts.menu_items)\n\t\t}\n\n\t\t$.each(me.menu_items, function(i, menu_item){\n\t\t\tvar has_perm = true;\n\t\t\tif(menu_item[\"condition\"]) {\n\t\t\t\thas_perm = eval(menu_item[\"condition\"]);\n\t\t\t}\n\n\t\t\tif (has_perm) {\n\t\t\t\tme.page.add_menu_item(menu_item[\"label\"], menu_item[\"action\"]);\n\t\t\t}\n\t\t});\n\t}\n});\n\n\n\n\n\n\n\n\n"],"names":["frappe","has_indicator","doctype","model","is_submittable","listview_settings","get_indicator","workflow","get_state_fieldname","meta","has_field","doc","__unsaved","__","workflows","without_workflow","settings","workflow_fieldname","value","colour","locals","style","Success","Warning","Danger","Primary","Inverse","Info","docstatus","has_indicator_for_draft","has_indicator_for_cancelled","indicator","status","utils","guess_colour","enabled","disabled","ui","Filter","[object Object]","opts","$","extend","this","undefined","filter_utils","set_conditions","set_conditions_from_config","make","conditions","nested_set_conditions","push","ref","invalid_condition_map","Date","Datetime","Data","Select","Link","Currency","Color","Check","map","c","filter","Code","HTML Editor","Markdown Editor","Password","Rating","boot","additional_filters_config","filters_config","Object","keys","let","key","label","fieldtype","valid_for_fieldtypes","includes","filter_edit_area","render_template","parent","appendTo","find","make_select","set_events","setup","fieldselect","FieldSelect","parent_doctype","_parent_doctype","filter_fields","input_class","select","fieldname","set_field","set_value","on","remove","on_change","change","field","condition","get_condition","add_condition_help","empty","df","const","set_values","is_new","promise","Promise","resolve","addClass","update_filter_tag","hidden","then","$filter_tag","hide","_filter_value_set","set_filter_button_text","make_tag","original_type","set_condition","Array","isArray","join","trim","cur","k","original_docfield","fields_by_name","console","warn","copy_dict","read_only","is_filter","hidden_due_to_dependency","get_default_condition","set_fieldtype","options","selected_doctype","selected_fieldname","args","depends_on","field_name","filter_value","filter_list","get_filter_value","xcall","get_field","make_field","old_fieldtype","old_text","get_value","hide_invalid_conditions","toggle_nested_set_conditions","field_area","get","f","form","make_control","only_input","refresh","bind_filter_field_events","$input","wrapper","keydown","e","which","get_selected_value","val","trigger_change","$condition_field","description","html","get_filter_tag_element","insertAfter","bind_tag","bind","filter_button","closest","show","toggle","get_filter_button_text","get_formatted_value","icon","invalid_conditions","show_condition","nested_set_doctypes","forEach","0","1","2","cint","format","only_value","strip","indexOf","startsWith","endsWith","in_list","split","v","reqd","ignore_link_validation","toLowerCase","get_timespan_options","periods","period_map","Last","This","Next","period","p","FilterGroup","filters","window","fltr","make_popover","append","get_filter_area_template","set_filter_events","init_filter_popover","set_popover_events","popover","content","template","trigger","container","placement","offset","document","body","is","in_datepicker","target","length","parents","hide_empty_filters","toggle_empty_filters","add_filters_to_popover","add_filter","apply","router","update_filters","filters_applied","button_label","toggleClass","clear_filters","promises","run_serially","validate_args","is_new_filter","arguments","push_new_filter","std_fields_list","msgprint","message","bold","filter_exists","_push_new_filter","index","update","filter_items","base_list","exists","f_value","equal","arrays_equal","slice","update_filter_button","get_filters","reduce","acc","assign","from","set_standard_filter","non_standard_filters","add_filters","list_view","Class","init","me","select_input","awesomplete","Awesomplete","minChars","maxItems","autoFirst","list","item","repl","data","originalEvent","text","get_item","i","add_field_option","build_options","clear","parts","each","table_fields","std_filters","std_fields","d","doctype_obj","istable","concat","with_blank","main_table_fields","docfield_list","sort","get_meta","perm","has_perm","permlevel","table_df","child_table_fields","link_field","get_docfields","table","no_value_type","Tags","tagsList","onTagAdd","onTagRemove","onTagClick","onChange","placeholder","$ul","$inputWrapper","get_list_element","$placeholder","deactivate","select_tag","tagValue","xss_sanitise","addTag","keypress","keyCode","focusout","activate","focus","addTags","$tag","get_tag","insertBefore","splice","labels","$element","class_name","$li","get_data_pill","pill_wrapper","removeTag","TagEditor","setup_tags","user_tags","initialized","tags","tag","refreshing","call","method","get_args","callback","r","fetch_tags","setup_awesomplete","setup_complete","input","attr","frm","txt","dt","dn","docname","clearTags","setTimeout","is_liked","get_liked_by","session","user","liked","_liked_by","JSON","parse","toggle_like","$btn","name","add","hasClass","css","quiet","exc","action_buttons","replace","removeClass","liked_by","idx","stringify","click_toggle_like","$count","siblings","not_liked","setup_like_popover","$parent","selector","check_not_liked","dom","is_touchscreen","target_element","animation","decodeURI","liked_by_list","avatar","full_name","children","click","ev","currentTarget","dataset","set_route","provide","views","BaseList","before_refresh","init_promise","tasks","setup_defaults","set_stats","setup_fields","setup_page","setup_side_bar","setup_main_section","setup_view","setup_view_menu","fn","page_name","get_route_str","page_title","doctype_layout","user_settings","get_user_settings","start","page_length","can_create","can_write","fields","sort_by","sort_field","sort_order","primary_action","secondary_action","menu_items","action","class","list_view_settings","set_fields","build_fields","title_field","_add_field","is_value_type","in_list_view","Boolean","uniqBy","stats","workflow_state_fieldname","page","$page","hide_card_layout","main","page_form","hide_page_form","hide_sidebar","setup_page_head","set_title","set_menu_items","set_breadcrumbs","icon_map","Image","List","Report","Calendar","Gantt","Kanban","Dashboard","Map","desk_settings","view_switcher","views_menu","add_custom_button_group","view_name","views_list","ListViewSelect","sidebar","list_sidebar","$secondary_action","set_secondary_action","refresh_button","add_action_icon","set_default_secondary_action","$item","add_menu_item","standard","shortcut","breadcrumbs","module","ListSidebar","show_sidebar","localStorage","show_or_hide_sidebar","setup_list_wrapper","setup_filter_area","setup_sort_selector","setup_result_area","setup_no_result_area","setup_freeze_area","setup_paging_area","$frappe_list","hide_filters","filter_area","FilterArea","set","hide_sort_selector","sort_selector","SortSelector","$filter_section","onchange","on_sort_change","$result","$no_result","get_no_result_message","$freeze","$paging_area","$this","selected_page_count","get_full_column_name","name_field","get_filters_for_args","like","not set","get_fields","order_by","get_sql_string","view","group_by","get_group_by","freeze","freeze_on_refresh","freeze_message","get_call_args","prepare_data","toggle_result_area","before_render","render","after_render","reset_defaults","dict","values","show_more","names","get_checked_items","custom_actions","$filter_list_wrapper","trigger_refresh","make_standard_filters","make_filter_list","standard_filters","get_standard_filters","on_filter_change","fields_dict","out","get_filter","standard_filters_wrapper","refresh_list_view","custom_filter_configs","config","doctype_fields","in_standard_filter","unshift","default_value","defaults","get_user_default","default","add_field","default_filters","view_modes","is_valid","view_mode","BulkOperations","throw","docs","print_settings","get_doc","allow_print_for_draft","allow_print_for_cancelled","valid_docs","has_role","dialog","Dialog","title","get_letterhead_options","get_print_formats","get_print_sizes","pdf_page_size","pdf_page_height","pdf_page_width","set_primary_action","pdf_options","default_print_format","with_letterhead","letter_sel","print_format","print_sel","json_string","letterhead","page_size","page_height","page_width","page-height","page-width","page-size","open","encodeURIComponent","letterhead_options","limit_page_length","async","docnames","done","items","failed","_server_messages","play_sound","assign_to","AssignToDialog","obj","bulk_assign","re_assign","field_mappings","field_options","status_regex","default_field","test","set_value_field","show_help_text","disable_primary_action","enable_primary_action","show_alert","primary_action_label","dialogObj","new_df","match","replace_field","set_df_property","get_data","db","get_link_options","get_values","set_message","ListSettings","listview","subject_field","with_doctype","get_listview_fields","setup_remove_fields","add_new_fields","show_dialog","removed_listview_fields","removed_fields","refresh_columns","update_fields","field_count","fields_html","$wrapper","total_fields","parseInt","is_sortable","show_sortable_handle","can_remove","Sortable","getElementsByClassName","handle","draggable","onUpdate","onclick","column_selector","remove_fields","getAttribute","existing_fields","set_removed_fields","get_removed_listview_fields","fields_order","reset_listview_fields","get_doctype_fields","columns","set_subject_field","set_status_field","get_docfield","set_list_view_fields","type","multiselect_fields","checked","new_fields","column","ListView","route","get_route","last_view","super","disable_scroll_to_top","has_permissions","view_user_settings","saved_filters","validate_filters","get_menu_items","toggle_paging","patch_refresh_and_load_lib","get_list_view_settings","valid_fields","set_actions_menu_items","actions_menu_items","get_actions_menu_items","workflow_action_menu_items","get_workflow_action_menu_items","workflow_action_items","add_actions_menu_item","is_workflow_action","match_rules_list","get_match_rules","restricted_list","show_restrictions","condition_list","get_fields_in_list_view","image_field","add_fields","track_seen","throttle","load_lib","required_libs","require","setInterval","doctype_name","make_new_doc","clear_primary_action","is_non_std_field","new_doc","setup_columns","render_header","render_skeleton","setup_events","onload","show_restricted_list_indicator_if_applicable","refresh_header","update_checkbox","$checkbox_actions","$check_all_checkbox","prop","$checks","get_df","fields_in_list_view","reorder_listview_fields","innerWidth","hide_name_column","fld","col","documentation","help_link","get_documentation_link","no_result_message","new_button_label","empty_state_image","disable_count","with_comment_count","route_options","parse_filters_from_route_options","toggle_actions_menu_button","show_actions_menu","toggle_workflow_actions","hide_actions_menu","prepend","get_header_html","$row","get_list_row_html_skeleton","save","save_view_user_settings","setup_new_doc_event","reload_stats","render_list","set_rows_as_checked","on_row_checked","render_count","_idx","get_list_row_html","get_count_str","str","subject_html","$columns","is_numeric_field","get_header_html_skeleton","left","right","get_column_html","get_meta_html","get_left_html","get_right_html","get_indicator_html","tags_shown","_user_tags","get_tags_html","translated_doctypes","_value","css_class","Subject","Field","column_html","get_subject_html","fetch_from","strip_html","escape_html","Math","round","formatters","limit","colored","color","get_palette","settings_button","button","get_description","get_label","modified","comment_when","assigned_to","assigned_users","_assign","avatar_group","filterable","_comment_count","get_indicator_dot","current_count","count_without_children","count","total_count","get_form_link","slug","_seen","encodeURI","u","user_info","fullname","formatter","subject","toString","escaped_subject","seen","get_seen_class","escape","get_like_html","url","image","cordova","is_url","base_url","setup_filterable","setup_list_click","setup_tag_event","setup_check_events","setup_like","setup_realtime_updates","setup_action_handler","setup_keyboard_navigation","focus_next","activeElement","next","focus_prev","prev","check_row","get_list_row_if_focused","is_current_page","is_input_focused","handle_navigation","direction","add_shortcut","$list_row","metaKey","ctrlKey","stopPropagation","filters_to_apply","datetime","get_today","$target","$check","preventDefault","link","pathname","$button","shiftKey","$checkbox_cursor","name_1","name_2","findIndex","min_index","max_index","toggle_tags","pending_document_refreshes","disable_auto_refresh","socketio","doctype_subscribe","realtime","is_being_edited","debounce","process_document_refreshes","cur_list","call_args","datum","a","b","a_value","b_value","return_value","el","$list_head_subject","preview_label","only_docnames","check","cstr","unescape","query_params","full_url","location","href","get_share_url","copy_to_clipboard","can_import","reference_doctype","can_set_user_permissions","allow","user_roles","custom","doc_type","toggle_side_bar","share_url","developer_mode","get_view_settings","show_list_settings","workflow_actions","has_workflow","get_all_transition_actions","checked_items","actions","bulk_operations","is_field_editable","field_doc","some","has_editable_fields","edit","apply_assignment_rule","add_tags","can_print","print","has_submit_permission","confirm","submit_or_cancel","can_cancel","can_delete","delete","value_array","get_doctype_for_field","j","on_update","event","trigger_list_update","get_list_view","ListFactory","Factory","issingle","set_re_route","to_title_case","view_class","load_last_view","change_to","make_page","set_cur_list","re_route_to_view","set_module_breadcrumb","last_route","route_history","history","go","prev_route","module_links","set_doctype_module","set_current_view","setup_views","add_custom_menu_item","current_view","kanban_board","email_account","calendar_name","current_view_handler","reports","get_reports","default_action","setup_dropdown_in_sidebar","calendar","get_calendars","calendars","Inbox","email_accounts","accounts","get_email_accounts","has_common","Tree","treeview_settings","is_tree","setup_kanban_boards","KanbanView","get_kanbans","kanbans","setup_kanban_switcher","get_coords_method","add_view_to_menu","views_wrapper","$dropdown","get_page_name","kanban_switcher","show_kanban_dialog","added","reports_to_add","add_reports","ref_doctype","report_type","all_reports","localeCompare","fetch_kanban_board","board","isEmptyObject","last_opened_kanban","last_kanban_board","get_list","result","accounts_to_add","account","email_id","display_name","ListFilter","can_add_global","$input_area","$list_filters","$saved_filters","$saved_filters_preview","saved_filters_hidden","filter_input","render_input","is_global_input","bind_save_filter","bind_toggle_saved_filters","bind_click_filter","bind_remove_filter","get_list_filters","filter_template","set_description","toggle_saved_filters","$filter","set_applied_filter","get_filters_values","applied_filters","remove_filter","remove_filters","has_value","filter_name_exists","save_filter","help_text","filter_name","insert","for_user","get_current_filters","delete_doc","or_filters","sidebar_content","setup_list_filter","setup_list_group_by","disable_sidebar_stats","show_list_link","dropdown","divider","get_divider","list_filter","get_shortcut_group","list_group_by","ListGroupBy","render_stat","stats_dropdown","setup_search","tag_list","existing","get_stats","make_wrapper","group_by_fields","render_group_by_items","make_group_by_fields_modal","setup_dropdown","setup_filter_by","get_group_by_dropdown_fields","$body","docfield","set_loading_state","get_group_by_count","field_count_list","applied_filter","render_dropdown_items","set_empty_state","current_filters","f_arr","field_counts","current_user","standard_html","applied_filter_html","dropdown_items_html","get_dropdown_html","dropdown_html","applied","is_selected","decodeURIComponent","apply_filter","operator","GanttView","calendar_settings","gantt","field_map","prepare_tasks","progress","isFunction","end","id","dependencies","depends_on_tasks","validate_hex","substr","is_milestone","render_gantt","gantt_view_mode","bar_height","bar_corner_radius","resize_handle_width","resize_handle_height","resize_handle_corner_radius","resize_handle_offset","date_format","on_click","task","on_date_change","moment","on_progress_change","progress_fieldname","on_view_change","mode","custom_popup_html","_start","_end","gantt_custom_popup_html","setup_view_mode_buttons","set_colors","view_is","change_view_mode","t","custom_class","bar_color","get_contrast_color","CalendarView","last_calendar","get_calendar_preferences","with_doc","start_date_field","end_date_field","allDay","all_day","assets","user_language","language","get_default_options","defaultView","getItem","weekends","setup_options","setup_view_mode_button","clear_user_actions","can_read","$cal","fullCalendar","footnote_area","set_footnote","border-top","cal_options","set_css","detach","btn","set_localStorage_option","option","removeItem","setItem","wrapAll","wrap","btn_group","convertToUserTz","color_map","danger","success","warning","get_system_datetime","date","_offset","tz","sys_defaults","time_zone","convert_to_system_tz","meridiem","locale","header","editable","selectable","selectHelper","forceEventDuration","displayEventTime","nowIndicator","events","timezone","get_events_method","prepare_events","displayEventEnd","eventRender","element","tooltip","eventClick","eventDrop","delta","revertFunc","update_event","eventResize","startDate","endDate","jsEvent","get_new_doc","_ambigTime","subtract","dayClick","$date_cell","source","convert_to_user_tz","validate","add_days","fix_end_date_for_event_render","prepare_colors","html2text","color_name","get_css_class","backgroundColor","textColor","remove_from_locals","update_event_method","get_update_args","error","stripTime","DashboardView","dashboard_settings","chart_group","number_card_group","setup_dashboard_page","setup_dashboard_customization","make_dashboard","customize","reset_dashboard_customization","add_customization_buttons","clear_secondary_action","$dashboard_page","$dashboard_wrapper","$chart_header","bind_actions_with_object","save_customizations_button","add_button","save_dashboard_customization","standard_actions","btn_class","discard_customizations_button","discard_dashboard_customization","toggle_customization_buttons","charts","number_cards","render_dashboard","fetch_dashboard_items","chart_type","document_type","is_public","dashboard_utils","get_dashboard_settings","dashboard_chart_settings","chart_config","chart","chart_name","chart_settings","render_dashboard_charts","render_number_cards","render_empty_state","obj_name","widget","WidgetGroup","allow_sorting","allow_create","allow_delete","allow_hiding","default_values","widgets","in_customize_mode","height","allow_resize","custom_dialog","show_add_chart_dialog","empty_state_html","$empty_state","toggle_customize","widget_group","get_widget_config","order","widget_name","remove_duplicates","get_widgets_to_save","get_field_options","get_query","query","mandatory_depends_on","value_fields","date_fields","aggregate_function_fields","new_or_existing","chart_function","filters_json","new_widget","on_create","numeric_fieldtypes","ImageView","_image_url","get_image_url","get_attached_images","render_image_view","gallery","prepare_pswp_items","images_map","setup_gallery","item_html","info_fields","info_html","_name","encoded_name","escaped_title","_class","_html","get_abbr","details","item_details_html","expand_button_html","GalleryView","lib_ready","prepare","pswp_root","pswp","_items","_images_map","width","naturalWidth","naturalHeight","getBoundingClientRect","src","msrc","w","h","pswp_items","_show","getThumbBoundsFn","thumbnail","pageYScroll","pageYOffset","documentElement","scrollTop","rect","x","y","top","shareEl","showHideOpacity","PhotoSwipe","PhotoSwipeUI_Default","browse_images","$more_items","last_hide_timeout","hide_more_items_after_2s","clearTimeout","hide_more_items","img_html","listen","images","currItem","off","img_el","goTo","invalidateCurrItems","updateSize","asset_dir","MapView","get_coords","render_map_view","map_id","get_unique_id","L","Icon","Default","imagePath","setView","map_defaults","center","zoom","tileLayer","tiles","addTo","control","scale","coords","features","geoJSON","bindPopup","properties","lastCoords","geometry","coordinates","reverse","panTo","KanbanSettings","kanbanview","board_name","params","newIndex","oldIndex","get_dialog_fields_wrapper","show_column_selector","get_multiselect_fields","get_std_field","ignore_fields","ignore_fieldtypes","redirect_to_home_if_invalid_route","get_doc_mappings","Event","interaction_type","summary","category","due_date","public","reqd_fields","hidden_fields","ToDo","reference_document","card_meta","get_card_meta","save_kanban_board_filters","get_board","filters_array","set_indicator","clear_indicator","kanban","KanbanBoard","cards","quick_entry","mandatory","show_kanban_settings","kanban_boards","select_fields","dialog_fields","to_save","dialog_title","get_fields_for_dialog","project","kb","kanban_filters","kanban_board_name","err","InboxView","last_email_account","current_email_account","get_inbox_filters","is_sent_emails","email","attachment","has_attachment","reference_name","communication_date","all_accounts","op","msg","CommunicationComposer","user_email","FileView","last_folder","home_folder","add_file_action_buttons","grid_view","get_breadcrumbs_html","current_folder","file_menu_items","prompt","file_name","folder","FileUploader","restrictions","allowed_file_types","on_success","file","$cut_button","file_manager","cut","$paste_btn","paste","prepare_datum","is_folder","icon_class","is_image_file","file_url","_title","_type","is_private","render_grid_view","file_body_html","get_route_url","get_creation_date","folders","curr","breadcrumbs_html","creation","now_date","str_to_user","file_size","FileSize","route_url","setup_drag_events","dataTransfer","setData","opacity","$el","files","getData","folder_name","toggle_cut_paste_buttons","hide_paste_btn","can_paste","old_folder","hide_cut_btn","cur_tree","TreeFactory","trees","TreeView","treeview","make_tree","get_tree_root","show_expand_all","get_tree_nodes","get_permissions","make_filters","root_value","get_root","set_menu_item","in_create","add_page","make_app_page","single_column","breadcrumb","DocType","min-height","add_inner_button","tree","load_children","root_node","view_template","row","node_view","disable_onchange","root_label","use_label","use_value","expandable","toolbar","get_toolbar","on_render","onrender","on_get_node","node","select_node","post_render","rebuild_tree","parent_field","is_root","hide_add","new_node","btnClass","allow_rename","rename_doc","new_name","$tree_link","extend_toolbar","get_selected_node","prepare_fields","add_tree_node","always","unfreeze","mandatory_fields","opts_field_names","inArray","print_tree","get_print_settings","render_tree","report_name","disable_add_node","menu_item","eval","InteractionComposer","no_submit_on_enter","create_action","display","select_attachments","render_attach","filename","interaction_docs","set_reqd_hidden_fields","get_event_categories","categories","get_input","add_options","setup_attach","doc_mapping","attach","attachments","attachment_uploaded","cur_frm","get_files","urllib","get_full_url","get_primary_btn","form_values","selected_attachments","create_interaction","interaction_values","reference_docname","assign_document","add_attachments","reload_doc","assignee"],"mappings":"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"}